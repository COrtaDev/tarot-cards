{"ast":null,"code":"/**\n * common.js: Internal helper and utility functions for winston.\n *\n * (C) 2010 Charlie Robbins\n * MIT LICENCE\n */\n'use strict';\n\nvar _require = require('util'),\n    format = _require.format;\n/**\n * Set of simple deprecation notices and a way to expose them for a set of\n * properties.\n * @type {Object}\n * @private\n */\n\n\nexports.warn = {\n  deprecated: function deprecated(prop) {\n    return function () {\n      throw new Error(format('{ %s } was removed in winston@3.0.0.', prop));\n    };\n  },\n  useFormat: function useFormat(prop) {\n    return function () {\n      throw new Error([format('{ %s } was removed in winston@3.0.0.', prop), 'Use a custom winston.format = winston.format(function) instead.'].join('\\n'));\n    };\n  },\n  forFunctions: function forFunctions(obj, type, props) {\n    props.forEach(function (prop) {\n      obj[prop] = exports.warn[type](prop);\n    });\n  },\n  moved: function moved(obj, movedTo, prop) {\n    function movedNotice() {\n      return function () {\n        throw new Error([format('winston.%s was moved in winston@3.0.0.', prop), format('Use a winston.%s instead.', movedTo)].join('\\n'));\n      };\n    }\n\n    Object.defineProperty(obj, prop, {\n      get: movedNotice,\n      set: movedNotice\n    });\n  },\n  forProperties: function forProperties(obj, type, props) {\n    props.forEach(function (prop) {\n      var notice = exports.warn[type](prop);\n      Object.defineProperty(obj, prop, {\n        get: notice,\n        set: notice\n      });\n    });\n  }\n};","map":{"version":3,"sources":["/home/conrad/Documents/tarot/tarot-cards/node_modules/winston/dist/winston/common.js"],"names":["_require","require","format","exports","warn","deprecated","prop","Error","useFormat","join","forFunctions","obj","type","props","forEach","moved","movedTo","movedNotice","Object","defineProperty","get","set","forProperties","notice"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,IAAIA,QAAQ,GAAGC,OAAO,CAAC,MAAD,CAAtB;AAAA,IACIC,MAAM,GAAGF,QAAQ,CAACE,MADtB;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAGAC,OAAO,CAACC,IAAR,GAAe;AACbC,EAAAA,UAAU,EAAE,SAASA,UAAT,CAAoBC,IAApB,EAA0B;AACpC,WAAO,YAAY;AACjB,YAAM,IAAIC,KAAJ,CAAUL,MAAM,CAAC,sCAAD,EAAyCI,IAAzC,CAAhB,CAAN;AACD,KAFD;AAGD,GALY;AAMbE,EAAAA,SAAS,EAAE,SAASA,SAAT,CAAmBF,IAAnB,EAAyB;AAClC,WAAO,YAAY;AACjB,YAAM,IAAIC,KAAJ,CAAU,CAACL,MAAM,CAAC,sCAAD,EAAyCI,IAAzC,CAAP,EAAuD,iEAAvD,EAA0HG,IAA1H,CAA+H,IAA/H,CAAV,CAAN;AACD,KAFD;AAGD,GAVY;AAWbC,EAAAA,YAAY,EAAE,SAASA,YAAT,CAAsBC,GAAtB,EAA2BC,IAA3B,EAAiCC,KAAjC,EAAwC;AACpDA,IAAAA,KAAK,CAACC,OAAN,CAAc,UAAUR,IAAV,EAAgB;AAC5BK,MAAAA,GAAG,CAACL,IAAD,CAAH,GAAYH,OAAO,CAACC,IAAR,CAAaQ,IAAb,EAAmBN,IAAnB,CAAZ;AACD,KAFD;AAGD,GAfY;AAgBbS,EAAAA,KAAK,EAAE,SAASA,KAAT,CAAeJ,GAAf,EAAoBK,OAApB,EAA6BV,IAA7B,EAAmC;AACxC,aAASW,WAAT,GAAuB;AACrB,aAAO,YAAY;AACjB,cAAM,IAAIV,KAAJ,CAAU,CAACL,MAAM,CAAC,wCAAD,EAA2CI,IAA3C,CAAP,EAAyDJ,MAAM,CAAC,2BAAD,EAA8Bc,OAA9B,CAA/D,EAAuGP,IAAvG,CAA4G,IAA5G,CAAV,CAAN;AACD,OAFD;AAGD;;AAEDS,IAAAA,MAAM,CAACC,cAAP,CAAsBR,GAAtB,EAA2BL,IAA3B,EAAiC;AAC/Bc,MAAAA,GAAG,EAAEH,WAD0B;AAE/BI,MAAAA,GAAG,EAAEJ;AAF0B,KAAjC;AAID,GA3BY;AA4BbK,EAAAA,aAAa,EAAE,SAASA,aAAT,CAAuBX,GAAvB,EAA4BC,IAA5B,EAAkCC,KAAlC,EAAyC;AACtDA,IAAAA,KAAK,CAACC,OAAN,CAAc,UAAUR,IAAV,EAAgB;AAC5B,UAAIiB,MAAM,GAAGpB,OAAO,CAACC,IAAR,CAAaQ,IAAb,EAAmBN,IAAnB,CAAb;AACAY,MAAAA,MAAM,CAACC,cAAP,CAAsBR,GAAtB,EAA2BL,IAA3B,EAAiC;AAC/Bc,QAAAA,GAAG,EAAEG,MAD0B;AAE/BF,QAAAA,GAAG,EAAEE;AAF0B,OAAjC;AAID,KAND;AAOD;AApCY,CAAf","sourcesContent":["/**\n * common.js: Internal helper and utility functions for winston.\n *\n * (C) 2010 Charlie Robbins\n * MIT LICENCE\n */\n'use strict';\n\nvar _require = require('util'),\n    format = _require.format;\n/**\n * Set of simple deprecation notices and a way to expose them for a set of\n * properties.\n * @type {Object}\n * @private\n */\n\n\nexports.warn = {\n  deprecated: function deprecated(prop) {\n    return function () {\n      throw new Error(format('{ %s } was removed in winston@3.0.0.', prop));\n    };\n  },\n  useFormat: function useFormat(prop) {\n    return function () {\n      throw new Error([format('{ %s } was removed in winston@3.0.0.', prop), 'Use a custom winston.format = winston.format(function) instead.'].join('\\n'));\n    };\n  },\n  forFunctions: function forFunctions(obj, type, props) {\n    props.forEach(function (prop) {\n      obj[prop] = exports.warn[type](prop);\n    });\n  },\n  moved: function moved(obj, movedTo, prop) {\n    function movedNotice() {\n      return function () {\n        throw new Error([format('winston.%s was moved in winston@3.0.0.', prop), format('Use a winston.%s instead.', movedTo)].join('\\n'));\n      };\n    }\n\n    Object.defineProperty(obj, prop, {\n      get: movedNotice,\n      set: movedNotice\n    });\n  },\n  forProperties: function forProperties(obj, type, props) {\n    props.forEach(function (prop) {\n      var notice = exports.warn[type](prop);\n      Object.defineProperty(obj, prop, {\n        get: notice,\n        set: notice\n      });\n    });\n  }\n};"]},"metadata":{},"sourceType":"script"}