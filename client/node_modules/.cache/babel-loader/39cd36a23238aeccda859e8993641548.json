{"ast":null,"code":"/**\n * An idiot proof logger to be used as default. We've wrapped it in a try/catch\n * statement to ensure the environments without the `console` API do not crash\n * as well as an additional fix for ancient browsers like IE8 where the\n * `console.log` API doesn't have an `apply`, so we need to use the Function's\n * apply functionality to apply the arguments.\n *\n * @param {Object} meta Options of the logger.\n * @param {Array} messages The actuall message that needs to be logged.\n * @public\n */\nmodule.exports = function (meta, messages) {\n  //\n  // So yea. IE8 doesn't have an apply so we need a work around to puke the\n  // arguments in place.\n  //\n  try {\n    Function.prototype.apply.call(console.log, console, messages);\n  } catch (e) {}\n};","map":{"version":3,"sources":["/home/conrad/Documents/tarot/tarot-cards/node_modules/@dabh/diagnostics/logger/console.js"],"names":["module","exports","meta","messages","Function","prototype","apply","call","console","log","e"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAA,MAAM,CAACC,OAAP,GAAiB,UAAUC,IAAV,EAAgBC,QAAhB,EAA0B;AACzC;AACA;AACA;AACA;AACA,MAAI;AAAEC,IAAAA,QAAQ,CAACC,SAAT,CAAmBC,KAAnB,CAAyBC,IAAzB,CAA8BC,OAAO,CAACC,GAAtC,EAA2CD,OAA3C,EAAoDL,QAApD;AAAgE,GAAtE,CACA,OAAOO,CAAP,EAAU,CAAE;AACb,CAPD","sourcesContent":["/**\n * An idiot proof logger to be used as default. We've wrapped it in a try/catch\n * statement to ensure the environments without the `console` API do not crash\n * as well as an additional fix for ancient browsers like IE8 where the\n * `console.log` API doesn't have an `apply`, so we need to use the Function's\n * apply functionality to apply the arguments.\n *\n * @param {Object} meta Options of the logger.\n * @param {Array} messages The actuall message that needs to be logged.\n * @public\n */\nmodule.exports = function (meta, messages) {\n  //\n  // So yea. IE8 doesn't have an apply so we need a work around to puke the\n  // arguments in place.\n  //\n  try { Function.prototype.apply.call(console.log, console, messages); }\n  catch (e) {}\n}\n"]},"metadata":{},"sourceType":"script"}