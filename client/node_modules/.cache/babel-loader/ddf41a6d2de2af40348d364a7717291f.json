{"ast":null,"code":"import wiki from 'wikijs';\nexport async function getMajorArcana() {\n  const page = await wiki().page('Major_Arcana');\n  const [tables] = await page.tables();\n  let deck = await buildDeck(tables);\n\n  for (let i = 0; i < deck.length; i++) {\n    deck[i]['url'] = await getImgUrl(deck[i].queryString);\n  }\n\n  return deck;\n}\nexport async function getMinorArcana() {\n  const page = await wiki().page('Minor_Arcana'); // const categories = await page.categories();\n  // const tables = await page.tables();\n\n  const images = await page.images();\n  console.log(page);\n  const suits = buildSuits(images); // const [tables] = await page.tables();\n  // let deck = await buildDeck(tables);\n}\n\nfunction buildDeck(tables) {\n  const deck = tables.map(table => {\n    const queryString = makeQueryString(table.card);\n\n    if (table.card.startsWith(\"Strength\")) {\n      return {\n        cardName: \"Strength\",\n        queryString: queryString\n      };\n    }\n\n    ;\n\n    if (table.card.startsWith(\"Justice\")) {\n      return {\n        cardName: \"Justice\",\n        queryString: queryString\n      };\n    }\n\n    ;\n    return {\n      cardName: table.card,\n      queryString: queryString\n    };\n  });\n  return deck;\n}\n\nfunction makeQueryString(str) {\n  if (str.startsWith(\"Strength\")) str = \"Strength\";\n  if (str.startsWith(\"Justice\")) str = \"Justice\";\n  str = str.replaceAll(\" \", \"_\");\n  str = str + \"_(Tarot_card)\";\n  return str;\n}\n\nasync function getImgUrl(queryString) {\n  const page = await wiki().page(queryString);\n  const rawImg = await page.rawImages();\n\n  for (let i = 0; i < rawImg.length; i++) {\n    if (rawImg[i].title.includes(\"RWS\")) {\n      return rawImg[i].imageinfo[0].url;\n    }\n  }\n}\n\n;\n\nfunction buildSuits(strArr) {\n  const wands = strArr.filter(imgUrl => imgUrl.includes('Wands'));\n  const pents = strArr.filter(imgUrl => imgUrl.includes('Pents'));\n  const cups = strArr.filter(imgUrl => imgUrl.includes('Cups'));\n  const swords = strArr.filter(imgUrl => imgUrl.includes('Swords'));\n  const suits = [wands, pents, cups]; // console.log(wands,pents,cups,swords);\n} // export default getMajorArcana;","map":{"version":3,"sources":["/home/conrad/Documents/tarot/tarot-cards/src/Helpers/getCards.js"],"names":["wiki","getMajorArcana","page","tables","deck","buildDeck","i","length","getImgUrl","queryString","getMinorArcana","images","console","log","suits","buildSuits","map","table","makeQueryString","card","startsWith","cardName","str","replaceAll","rawImg","rawImages","title","includes","imageinfo","url","strArr","wands","filter","imgUrl","pents","cups","swords"],"mappings":"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","sourcesContent":["import wiki from 'wikijs';\n\nexport async function getMajorArcana() {\n    const page = await wiki().page('Major_Arcana');\n    const [tables] = await page.tables();\n    let deck = await buildDeck(tables);\n    for (let i = 0; i < deck.length; i++) {\n        deck[i]['url'] = await getImgUrl(deck[i].queryString);\n    }\n    return deck;\n}\n\nexport async function getMinorArcana() {\n    const page = await wiki().page('Minor_Arcana');\n    // const categories = await page.categories();\n    // const tables = await page.tables();\n    const images = await page.images();\n    console.log(page);\n    const suits = buildSuits(images);\n    // const [tables] = await page.tables();\n    // let deck = await buildDeck(tables);\n\n}\n\nfunction buildDeck(tables) {\n    const deck = tables.map((table) => {\n        const queryString = makeQueryString(table.card);\n        if (table.card.startsWith(\"Strength\")) {\n            return (\n                {\n                    cardName: \"Strength\",\n                    queryString: queryString,\n                }\n            )\n        };\n        if (table.card.startsWith(\"Justice\")) {\n            return (\n                {\n                    cardName: \"Justice\",\n                    queryString: queryString,\n                }\n            )\n        };\n        return (\n            {\n                cardName: table.card,\n                queryString: queryString,\n            }\n        )\n    });\n    return deck;\n}\n\nfunction makeQueryString(str) {\n    if (str.startsWith(\"Strength\")) str = \"Strength\";\n    if (str.startsWith(\"Justice\")) str = \"Justice\";\n    str = str.replaceAll(\" \", \"_\")\n    str = str + \"_(Tarot_card)\";\n    return str;\n}\n\nasync function getImgUrl(queryString) {\n    const page = await wiki().page(queryString);\n    const rawImg = await page.rawImages();\n    for (let i = 0; i < rawImg.length; i++) {\n        if (rawImg[i].title.includes(\"RWS\")) {\n            return (rawImg[i].imageinfo[0].url)\n        }\n    }\n};\n\nfunction buildSuits(strArr){\n    const wands = strArr.filter(imgUrl=>imgUrl.includes('Wands'));\n    const pents = strArr.filter(imgUrl=>imgUrl.includes('Pents'));\n    const cups = strArr.filter(imgUrl=>imgUrl.includes('Cups'));\n    const swords = strArr.filter(imgUrl=>imgUrl.includes('Swords'));\n    const suits = [wands,pents,cups,]\n    // console.log(wands,pents,cups,swords);\n\n\n}\n// export default getMajorArcana;\n"]},"metadata":{},"sourceType":"module"}