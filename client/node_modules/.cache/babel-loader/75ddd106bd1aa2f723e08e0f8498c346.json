{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/conrad/Documents/tarot/tarot-cards/src/Components/Meaning.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport wiki from 'wikijs';\n\nconst Meaning = props => {\n  _s();\n\n  const [info, setInfo] = useState(null);\n  useEffect(() => {\n    if (info) return;\n\n    async function getInfo() {\n      const page = await wiki().page(props.search); // const summary = await page.summary();\n\n      const content = await page.sections();\n      console.log(content); // console.log(summary)\n\n      summary;\n    }\n\n    getInfo();\n  });\n  return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: info\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Meaning, \"eGVoHZlUrWhNDRFn2ZPb/gOb4HQ=\");\n\n_c = Meaning;\nexport default Meaning;\n\nvar _c;\n\n$RefreshReg$(_c, \"Meaning\");","map":{"version":3,"sources":["/home/conrad/Documents/tarot/tarot-cards/src/Components/Meaning.js"],"names":["React","useState","useEffect","wiki","Meaning","props","info","setInfo","getInfo","page","search","content","sections","console","log","summary"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AAEA,OAAOC,IAAP,MAAiB,QAAjB;;AAEA,MAAMC,OAAO,GAAIC,KAAD,IAAW;AAAA;;AACvB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBN,QAAQ,CAAC,IAAD,CAAhC;AACAC,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAII,IAAJ,EAAU;;AACV,mBAAeE,OAAf,GAAyB;AACrB,YAAMC,IAAI,GAAG,MAAMN,IAAI,GAAGM,IAAP,CAAYJ,KAAK,CAACK,MAAlB,CAAnB,CADqB,CAErB;;AACA,YAAMC,OAAO,GAAG,MAAMF,IAAI,CAACG,QAAL,EAAtB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYH,OAAZ,EAJqB,CAKrB;;AACCI,MAAAA,OAAD;AACH;;AACDP,IAAAA,OAAO;AACV,GAXQ,CAAT;AAaA,sBACI;AAAA,cACKF;AADL;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH,CApBD;;GAAMF,O;;KAAAA,O;AAsBN,eAAeA,OAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\n\nimport wiki from 'wikijs';\n\nconst Meaning = (props) => {\n    const [info, setInfo] = useState(null);\n    useEffect(() => {\n        if (info) return;\n        async function getInfo() {\n            const page = await wiki().page(props.search);\n            // const summary = await page.summary();\n            const content = await page.sections();\n            console.log(content);\n            // console.log(summary)\n            (summary);\n        }\n        getInfo();\n    });\n\n    return (\n        <p>\n            {info}\n        </p>\n    );\n}\n\nexport default Meaning;\n"]},"metadata":{},"sourceType":"module"}