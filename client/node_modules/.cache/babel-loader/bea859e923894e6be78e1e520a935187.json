{"ast":null,"code":"import wiki from 'wikijs';\nexport async function getMajorArcana() {\n  const page = await wiki().page('Major_Arcana');\n  const [tables] = await page.tables();\n  let deck = await buildDeck(tables);\n\n  for (let i = 0; i < deck.length; i++) {\n    deck[i]['url'] = await getImgUrl(deck[i].queryString);\n  }\n\n  return deck;\n}\n;\nexport async function getMinorArcana() {\n  const page = await wiki().page('Minor_Arcana');\n  const images = await page.images();\n  const suits = buildSuits(images); // console.log(suits);\n}\n;\n\nfunction buildDeck(tables) {\n  const deck = tables.map(table => {\n    const queryString = makeQueryString(table.card);\n\n    if (table.card.startsWith(\"Strength\")) {\n      return {\n        cardName: \"Strength\",\n        queryString: queryString\n      };\n    }\n\n    ;\n\n    if (table.card.startsWith(\"Justice\")) {\n      return {\n        cardName: \"Justice\",\n        queryString: queryString\n      };\n    }\n\n    ;\n    return {\n      cardName: table.card,\n      queryString: queryString\n    };\n  });\n  return deck;\n}\n\n;\n\nfunction makeQueryString(str) {\n  if (str.startsWith(\"Strength\")) str = \"Strength\";\n  if (str.startsWith(\"Justice\")) str = \"Justice\";\n  str = str.replaceAll(\" \", \"_\");\n  str = str + \"_(Tarot_card)\";\n  return str;\n}\n\n;\n\nasync function getImgUrl(queryString) {\n  const page = await wiki().page(queryString);\n  const rawImg = await page.rawImages();\n\n  for (let i = 0; i < rawImg.length; i++) {\n    if (rawImg[i].title.includes(\"RWS\")) {\n      return rawImg[i].imageinfo[0].url;\n    }\n  }\n}\n\n;\n\nfunction buildSuits(strArr) {\n  const wands = strArr.filter(imgUrl => imgUrl.includes('Wands'));\n  const pents = strArr.filter(imgUrl => imgUrl.includes('Pents'));\n  const cups = strArr.filter(imgUrl => imgUrl.includes('Cups'));\n  const swords = strArr.filter(imgUrl => imgUrl.includes('Swords'));\n  const test = buildCardFromSuit(wands, \"Wands\");\n  console.log(test); // const suits = [wands, pents, cups, swords];\n  // console.log(suits);\n}\n\n;\n\nfunction buildCardFromSuit(suitArr, suit) {\n  const cards = suitArr.map(card => {\n    const cardName = makeCardNameFromUrl(card, suit);\n    return {\n      suit: suit,\n      imgUrl: card\n    };\n  });\n  return cards;\n}\n\nfunction makeCardNameFromUrl(urlStr, suit) {\n  // const idx1 = urlStr.indexOf(suit);\n  // const idx2 = urlStr.indexOf(\".jpg\");\n  const subStr = urlStr.slice(urlStr.indexOf(suit), urlStr.indexOf(\".jpg\"));\n  console.log(subStr);\n  console.log(helper); // console.log(urlStr.indexOf(suit));\n}\n\nconst helper = {\n  '01': \"Ace of \",\n  '02': \"Two\",\n  '03': \"Three\",\n  '04': \"Four\",\n  '05': \"Five\",\n  '06': \"Six\",\n  '07': \"Seven\",\n  '08': \"Eight\",\n  '09': \"Nine\",\n  '10': \"Ten\",\n  '11': \"Page\",\n  '12': \"Knight\",\n  '13': \"Queen\",\n  '14': \"King\"\n};","map":{"version":3,"sources":["/home/conrad/Documents/tarot/tarot-cards/src/Helpers/getCards.js"],"names":["wiki","getMajorArcana","page","tables","deck","buildDeck","i","length","getImgUrl","queryString","getMinorArcana","images","suits","buildSuits","map","table","makeQueryString","card","startsWith","cardName","str","replaceAll","rawImg","rawImages","title","includes","imageinfo","url","strArr","wands","filter","imgUrl","pents","cups","swords","test","buildCardFromSuit","console","log","suitArr","suit","cards","makeCardNameFromUrl","urlStr","subStr","slice","indexOf","helper"],"mappings":"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","sourcesContent":["import wiki from 'wikijs';\n\nexport async function getMajorArcana() {\n    const page = await wiki().page('Major_Arcana');\n    const [tables] = await page.tables();\n    let deck = await buildDeck(tables);\n    for (let i = 0; i < deck.length; i++) {\n        deck[i]['url'] = await getImgUrl(deck[i].queryString);\n    }\n    return deck;\n};\n\nexport async function getMinorArcana() {\n    const page = await wiki().page('Minor_Arcana');\n    const images = await page.images();\n    const suits = buildSuits(images);\n    // console.log(suits);\n\n\n};\n\nfunction buildDeck(tables) {\n    const deck = tables.map((table) => {\n        const queryString = makeQueryString(table.card);\n        if (table.card.startsWith(\"Strength\")) {\n            return (\n                {\n                    cardName: \"Strength\",\n                    queryString: queryString,\n                }\n            )\n        };\n        if (table.card.startsWith(\"Justice\")) {\n            return (\n                {\n                    cardName: \"Justice\",\n                    queryString: queryString,\n                }\n            )\n        };\n        return (\n            {\n                cardName: table.card,\n                queryString: queryString,\n            }\n        )\n    });\n    return deck;\n};\n\nfunction makeQueryString(str) {\n    if (str.startsWith(\"Strength\")) str = \"Strength\";\n    if (str.startsWith(\"Justice\")) str = \"Justice\";\n    str = str.replaceAll(\" \", \"_\")\n    str = str + \"_(Tarot_card)\";\n    return str;\n};\n\nasync function getImgUrl(queryString) {\n    const page = await wiki().page(queryString);\n    const rawImg = await page.rawImages();\n    for (let i = 0; i < rawImg.length; i++) {\n        if (rawImg[i].title.includes(\"RWS\")) {\n            return (rawImg[i].imageinfo[0].url)\n        }\n    }\n};\n\nfunction buildSuits(strArr) {\n    const wands = strArr.filter(imgUrl => imgUrl.includes('Wands'));\n    const pents = strArr.filter(imgUrl => imgUrl.includes('Pents'));\n    const cups = strArr.filter(imgUrl => imgUrl.includes('Cups'));\n    const swords = strArr.filter(imgUrl => imgUrl.includes('Swords'));\n    const test = buildCardFromSuit(wands, \"Wands\");\n    console.log(test);\n    // const suits = [wands, pents, cups, swords];\n    // console.log(suits);\n};\n\nfunction buildCardFromSuit(suitArr, suit) {\n    const cards = suitArr.map(card => {\n        const cardName = makeCardNameFromUrl(card, suit);\n        return ({\n            suit: suit,\n            imgUrl: card,\n        })\n\n    })\n    return cards;\n}\n\nfunction makeCardNameFromUrl(urlStr, suit) {\n    // const idx1 = urlStr.indexOf(suit);\n    // const idx2 = urlStr.indexOf(\".jpg\");\n    const subStr = urlStr.slice(urlStr.indexOf(suit), urlStr.indexOf(\".jpg\"));\n    console.log(subStr);\n    console.log(helper)\n    // console.log(urlStr.indexOf(suit));\n}\nconst helper = {\n    '01': \"Ace of \",\n    '02': \"Two\",\n    '03': \"Three\",\n    '04': \"Four\",\n    '05': \"Five\",\n    '06': \"Six\",\n    '07': \"Seven\",\n    '08': \"Eight\",\n    '09': \"Nine\",\n    '10': \"Ten\",\n    '11': \"Page\",\n    '12': \"Knight\",\n    '13': \"Queen\",\n    '14': \"King\",\n};\n"]},"metadata":{},"sourceType":"module"}