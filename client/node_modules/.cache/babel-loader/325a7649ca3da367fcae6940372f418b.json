{"ast":null,"code":"/**\n * create-logger.js: Logger factory for winston logger instances.\n *\n * (C) 2010 Charlie Robbins\n * MIT LICENCE\n */\n'use strict';\n\nfunction _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct();\n\n  return function _createSuperInternal() {\n    var Super = _getPrototypeOf(Derived),\n        result;\n\n    if (hasNativeReflectConstruct) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return _possibleConstructorReturn(this, result);\n  };\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nvar _require = require('triple-beam'),\n    LEVEL = _require.LEVEL;\n\nvar config = require('./config');\n\nvar Logger = require('./logger');\n\nvar debug = require('@dabh/diagnostics')('winston:create-logger');\n\nfunction isLevelEnabledFunctionName(level) {\n  return 'is' + level.charAt(0).toUpperCase() + level.slice(1) + 'Enabled';\n}\n/**\n * Create a new instance of a winston Logger. Creates a new\n * prototype for each instance.\n * @param {!Object} opts - Options for the created logger.\n * @returns {Logger} - A newly created logger instance.\n */\n\n\nmodule.exports = function () {\n  var opts = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {}; //\n  // Default levels: npm\n  //\n\n  opts.levels = opts.levels || config.npm.levels;\n  /**\n   * DerivedLogger to attach the logs level methods.\n   * @type {DerivedLogger}\n   * @extends {Logger}\n   */\n\n  var DerivedLogger = /*#__PURE__*/function (_Logger) {\n    _inherits(DerivedLogger, _Logger);\n\n    var _super = _createSuper(DerivedLogger);\n    /**\n     * Create a new class derived logger for which the levels can be attached to\n     * the prototype of. This is a V8 optimization that is well know to increase\n     * performance of prototype functions.\n     * @param {!Object} options - Options for the created logger.\n     */\n\n\n    function DerivedLogger(options) {\n      _classCallCheck(this, DerivedLogger);\n\n      return _super.call(this, options);\n    }\n\n    return DerivedLogger;\n  }(Logger);\n\n  var logger = new DerivedLogger(opts); //\n  // Create the log level methods for the derived logger.\n  //\n\n  Object.keys(opts.levels).forEach(function (level) {\n    debug('Define prototype method for \"%s\"', level);\n\n    if (level === 'log') {\n      // eslint-disable-next-line no-console\n      console.warn('Level \"log\" not defined: conflicts with the method \"log\". Use a different level name.');\n      return;\n    } //\n    // Define prototype methods for each log level e.g.:\n    // logger.log('info', msg) implies these methods are defined:\n    // - logger.info(msg)\n    // - logger.isInfoEnabled()\n    //\n    // Remark: to support logger.child this **MUST** be a function\n    // so it'll always be called on the instance instead of a fixed\n    // place in the prototype chain.\n    //\n\n\n    DerivedLogger.prototype[level] = function () {\n      // Prefer any instance scope, but default to \"root\" logger\n      var self = this || logger; // Optimize the hot-path which is the single object.\n\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      if (args.length === 1) {\n        var msg = args[0];\n        var info = msg && msg.message && msg || {\n          message: msg\n        };\n        info.level = info[LEVEL] = level;\n\n        self._addDefaultMeta(info);\n\n        self.write(info);\n        return this || logger;\n      } // When provided nothing assume the empty string\n\n\n      if (args.length === 0) {\n        self.log(level, '');\n        return self;\n      } // Otherwise build argument list which could potentially conform to\n      // either:\n      // . v3 API: log(obj)\n      // 2. v1/v2 API: log(level, msg, ... [string interpolate], [{metadata}], [callback])\n\n\n      return self.log.apply(self, [level].concat(args));\n    };\n\n    DerivedLogger.prototype[isLevelEnabledFunctionName(level)] = function () {\n      return (this || logger).isLevelEnabled(level);\n    };\n  });\n  return logger;\n};","map":{"version":3,"sources":["/home/conrad/Documents/tarot/tarot-cards/node_modules/winston/dist/winston/create-logger.js"],"names":["_typeof","obj","Symbol","iterator","constructor","prototype","_classCallCheck","instance","Constructor","TypeError","_inherits","subClass","superClass","Object","create","value","writable","configurable","_setPrototypeOf","o","p","setPrototypeOf","__proto__","_createSuper","Derived","hasNativeReflectConstruct","_isNativeReflectConstruct","_createSuperInternal","Super","_getPrototypeOf","result","NewTarget","Reflect","construct","arguments","apply","_possibleConstructorReturn","self","call","_assertThisInitialized","ReferenceError","sham","Proxy","Date","toString","e","getPrototypeOf","_require","require","LEVEL","config","Logger","debug","isLevelEnabledFunctionName","level","charAt","toUpperCase","slice","module","exports","opts","length","undefined","levels","npm","DerivedLogger","_Logger","_super","options","logger","keys","forEach","console","warn","_len","args","Array","_key","msg","info","message","_addDefaultMeta","write","log","concat","isLevelEnabled"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASA,OAAT,CAAiBC,GAAjB,EAAsB;AAAE;;AAA2B,MAAI,OAAOC,MAAP,KAAkB,UAAlB,IAAgC,OAAOA,MAAM,CAACC,QAAd,KAA2B,QAA/D,EAAyE;AAAEH,IAAAA,OAAO,GAAG,SAASA,OAAT,CAAiBC,GAAjB,EAAsB;AAAE,aAAO,OAAOA,GAAd;AAAoB,KAAtD;AAAyD,GAApI,MAA0I;AAAED,IAAAA,OAAO,GAAG,SAASA,OAAT,CAAiBC,GAAjB,EAAsB;AAAE,aAAOA,GAAG,IAAI,OAAOC,MAAP,KAAkB,UAAzB,IAAuCD,GAAG,CAACG,WAAJ,KAAoBF,MAA3D,IAAqED,GAAG,KAAKC,MAAM,CAACG,SAApF,GAAgG,QAAhG,GAA2G,OAAOJ,GAAzH;AAA+H,KAAjK;AAAoK;;AAAC,SAAOD,OAAO,CAACC,GAAD,CAAd;AAAsB;;AAE1X,SAASK,eAAT,CAAyBC,QAAzB,EAAmCC,WAAnC,EAAgD;AAAE,MAAI,EAAED,QAAQ,YAAYC,WAAtB,CAAJ,EAAwC;AAAE,UAAM,IAAIC,SAAJ,CAAc,mCAAd,CAAN;AAA2D;AAAE;;AAEzJ,SAASC,SAAT,CAAmBC,QAAnB,EAA6BC,UAA7B,EAAyC;AAAE,MAAI,OAAOA,UAAP,KAAsB,UAAtB,IAAoCA,UAAU,KAAK,IAAvD,EAA6D;AAAE,UAAM,IAAIH,SAAJ,CAAc,oDAAd,CAAN;AAA4E;;AAACE,EAAAA,QAAQ,CAACN,SAAT,GAAqBQ,MAAM,CAACC,MAAP,CAAcF,UAAU,IAAIA,UAAU,CAACP,SAAvC,EAAkD;AAAED,IAAAA,WAAW,EAAE;AAAEW,MAAAA,KAAK,EAAEJ,QAAT;AAAmBK,MAAAA,QAAQ,EAAE,IAA7B;AAAmCC,MAAAA,YAAY,EAAE;AAAjD;AAAf,GAAlD,CAArB;AAAkJ,MAAIL,UAAJ,EAAgBM,eAAe,CAACP,QAAD,EAAWC,UAAX,CAAf;AAAwC;;AAEjY,SAASM,eAAT,CAAyBC,CAAzB,EAA4BC,CAA5B,EAA+B;AAAEF,EAAAA,eAAe,GAAGL,MAAM,CAACQ,cAAP,IAAyB,SAASH,eAAT,CAAyBC,CAAzB,EAA4BC,CAA5B,EAA+B;AAAED,IAAAA,CAAC,CAACG,SAAF,GAAcF,CAAd;AAAiB,WAAOD,CAAP;AAAW,GAAxG;;AAA0G,SAAOD,eAAe,CAACC,CAAD,EAAIC,CAAJ,CAAtB;AAA+B;;AAE1K,SAASG,YAAT,CAAsBC,OAAtB,EAA+B;AAAE,MAAIC,yBAAyB,GAAGC,yBAAyB,EAAzD;;AAA6D,SAAO,SAASC,oBAAT,GAAgC;AAAE,QAAIC,KAAK,GAAGC,eAAe,CAACL,OAAD,CAA3B;AAAA,QAAsCM,MAAtC;;AAA8C,QAAIL,yBAAJ,EAA+B;AAAE,UAAIM,SAAS,GAAGF,eAAe,CAAC,IAAD,CAAf,CAAsBzB,WAAtC;;AAAmD0B,MAAAA,MAAM,GAAGE,OAAO,CAACC,SAAR,CAAkBL,KAAlB,EAAyBM,SAAzB,EAAoCH,SAApC,CAAT;AAA0D,KAA9I,MAAoJ;AAAED,MAAAA,MAAM,GAAGF,KAAK,CAACO,KAAN,CAAY,IAAZ,EAAkBD,SAAlB,CAAT;AAAwC;;AAAC,WAAOE,0BAA0B,CAAC,IAAD,EAAON,MAAP,CAAjC;AAAkD,GAAxU;AAA2U;;AAEza,SAASM,0BAAT,CAAoCC,IAApC,EAA0CC,IAA1C,EAAgD;AAAE,MAAIA,IAAI,KAAKtC,OAAO,CAACsC,IAAD,CAAP,KAAkB,QAAlB,IAA8B,OAAOA,IAAP,KAAgB,UAAnD,CAAR,EAAwE;AAAE,WAAOA,IAAP;AAAc;;AAAC,SAAOC,sBAAsB,CAACF,IAAD,CAA7B;AAAsC;;AAEjL,SAASE,sBAAT,CAAgCF,IAAhC,EAAsC;AAAE,MAAIA,IAAI,KAAK,KAAK,CAAlB,EAAqB;AAAE,UAAM,IAAIG,cAAJ,CAAmB,2DAAnB,CAAN;AAAwF;;AAAC,SAAOH,IAAP;AAAc;;AAEtK,SAASX,yBAAT,GAAqC;AAAE,MAAI,OAAOM,OAAP,KAAmB,WAAnB,IAAkC,CAACA,OAAO,CAACC,SAA/C,EAA0D,OAAO,KAAP;AAAc,MAAID,OAAO,CAACC,SAAR,CAAkBQ,IAAtB,EAA4B,OAAO,KAAP;AAAc,MAAI,OAAOC,KAAP,KAAiB,UAArB,EAAiC,OAAO,IAAP;;AAAa,MAAI;AAAEC,IAAAA,IAAI,CAACtC,SAAL,CAAeuC,QAAf,CAAwBN,IAAxB,CAA6BN,OAAO,CAACC,SAAR,CAAkBU,IAAlB,EAAwB,EAAxB,EAA4B,YAAY,CAAE,CAA1C,CAA7B;AAA2E,WAAO,IAAP;AAAc,GAA/F,CAAgG,OAAOE,CAAP,EAAU;AAAE,WAAO,KAAP;AAAe;AAAE;;AAEpU,SAAShB,eAAT,CAAyBV,CAAzB,EAA4B;AAAEU,EAAAA,eAAe,GAAGhB,MAAM,CAACQ,cAAP,GAAwBR,MAAM,CAACiC,cAA/B,GAAgD,SAASjB,eAAT,CAAyBV,CAAzB,EAA4B;AAAE,WAAOA,CAAC,CAACG,SAAF,IAAeT,MAAM,CAACiC,cAAP,CAAsB3B,CAAtB,CAAtB;AAAiD,GAAjJ;AAAmJ,SAAOU,eAAe,CAACV,CAAD,CAAtB;AAA4B;;AAE7M,IAAI4B,QAAQ,GAAGC,OAAO,CAAC,aAAD,CAAtB;AAAA,IACIC,KAAK,GAAGF,QAAQ,CAACE,KADrB;;AAGA,IAAIC,MAAM,GAAGF,OAAO,CAAC,UAAD,CAApB;;AAEA,IAAIG,MAAM,GAAGH,OAAO,CAAC,UAAD,CAApB;;AAEA,IAAII,KAAK,GAAGJ,OAAO,CAAC,mBAAD,CAAP,CAA6B,uBAA7B,CAAZ;;AAEA,SAASK,0BAAT,CAAoCC,KAApC,EAA2C;AACzC,SAAO,OAAOA,KAAK,CAACC,MAAN,CAAa,CAAb,EAAgBC,WAAhB,EAAP,GAAuCF,KAAK,CAACG,KAAN,CAAY,CAAZ,CAAvC,GAAwD,SAA/D;AACD;AACD;AACA;AACA;AACA;AACA;AACA;;;AAGAC,MAAM,CAACC,OAAP,GAAiB,YAAY;AAC3B,MAAIC,IAAI,GAAG1B,SAAS,CAAC2B,MAAV,GAAmB,CAAnB,IAAwB3B,SAAS,CAAC,CAAD,CAAT,KAAiB4B,SAAzC,GAAqD5B,SAAS,CAAC,CAAD,CAA9D,GAAoE,EAA/E,CAD2B,CAE3B;AACA;AACA;;AACA0B,EAAAA,IAAI,CAACG,MAAL,GAAcH,IAAI,CAACG,MAAL,IAAeb,MAAM,CAACc,GAAP,CAAWD,MAAxC;AACA;AACF;AACA;AACA;AACA;;AAEE,MAAIE,aAAa,GAAG,aAAa,UAAUC,OAAV,EAAmB;AAClDxD,IAAAA,SAAS,CAACuD,aAAD,EAAgBC,OAAhB,CAAT;;AAEA,QAAIC,MAAM,GAAG5C,YAAY,CAAC0C,aAAD,CAAzB;AAEA;AACJ;AACA;AACA;AACA;AACA;;;AACI,aAASA,aAAT,CAAuBG,OAAvB,EAAgC;AAC9B9D,MAAAA,eAAe,CAAC,IAAD,EAAO2D,aAAP,CAAf;;AAEA,aAAOE,MAAM,CAAC7B,IAAP,CAAY,IAAZ,EAAkB8B,OAAlB,CAAP;AACD;;AAED,WAAOH,aAAP;AACD,GAlBgC,CAkB/Bd,MAlB+B,CAAjC;;AAoBA,MAAIkB,MAAM,GAAG,IAAIJ,aAAJ,CAAkBL,IAAlB,CAAb,CAhC2B,CAgCW;AACtC;AACA;;AAEA/C,EAAAA,MAAM,CAACyD,IAAP,CAAYV,IAAI,CAACG,MAAjB,EAAyBQ,OAAzB,CAAiC,UAAUjB,KAAV,EAAiB;AAChDF,IAAAA,KAAK,CAAC,kCAAD,EAAqCE,KAArC,CAAL;;AAEA,QAAIA,KAAK,KAAK,KAAd,EAAqB;AACnB;AACAkB,MAAAA,OAAO,CAACC,IAAR,CAAa,uFAAb;AACA;AACD,KAP+C,CAO9C;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGAR,IAAAA,aAAa,CAAC5D,SAAd,CAAwBiD,KAAxB,IAAiC,YAAY;AAC3C;AACA,UAAIjB,IAAI,GAAG,QAAQgC,MAAnB,CAF2C,CAEhB;;AAE3B,WAAK,IAAIK,IAAI,GAAGxC,SAAS,CAAC2B,MAArB,EAA6Bc,IAAI,GAAG,IAAIC,KAAJ,CAAUF,IAAV,CAApC,EAAqDG,IAAI,GAAG,CAAjE,EAAoEA,IAAI,GAAGH,IAA3E,EAAiFG,IAAI,EAArF,EAAyF;AACvFF,QAAAA,IAAI,CAACE,IAAD,CAAJ,GAAa3C,SAAS,CAAC2C,IAAD,CAAtB;AACD;;AAED,UAAIF,IAAI,CAACd,MAAL,KAAgB,CAApB,EAAuB;AACrB,YAAIiB,GAAG,GAAGH,IAAI,CAAC,CAAD,CAAd;AACA,YAAII,IAAI,GAAGD,GAAG,IAAIA,GAAG,CAACE,OAAX,IAAsBF,GAAtB,IAA6B;AACtCE,UAAAA,OAAO,EAAEF;AAD6B,SAAxC;AAGAC,QAAAA,IAAI,CAACzB,KAAL,GAAayB,IAAI,CAAC9B,KAAD,CAAJ,GAAcK,KAA3B;;AAEAjB,QAAAA,IAAI,CAAC4C,eAAL,CAAqBF,IAArB;;AAEA1C,QAAAA,IAAI,CAAC6C,KAAL,CAAWH,IAAX;AACA,eAAO,QAAQV,MAAf;AACD,OAnB0C,CAmBzC;;;AAGF,UAAIM,IAAI,CAACd,MAAL,KAAgB,CAApB,EAAuB;AACrBxB,QAAAA,IAAI,CAAC8C,GAAL,CAAS7B,KAAT,EAAgB,EAAhB;AACA,eAAOjB,IAAP;AACD,OAzB0C,CAyBzC;AACF;AACA;AACA;;;AAGA,aAAOA,IAAI,CAAC8C,GAAL,CAAShD,KAAT,CAAeE,IAAf,EAAqB,CAACiB,KAAD,EAAQ8B,MAAR,CAAeT,IAAf,CAArB,CAAP;AACD,KAhCD;;AAkCAV,IAAAA,aAAa,CAAC5D,SAAd,CAAwBgD,0BAA0B,CAACC,KAAD,CAAlD,IAA6D,YAAY;AACvE,aAAO,CAAC,QAAQe,MAAT,EAAiBgB,cAAjB,CAAgC/B,KAAhC,CAAP;AACD,KAFD;AAGD,GAxDD;AAyDA,SAAOe,MAAP;AACD,CA9FD","sourcesContent":["/**\n * create-logger.js: Logger factory for winston logger instances.\n *\n * (C) 2010 Charlie Robbins\n * MIT LICENCE\n */\n'use strict';\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nvar _require = require('triple-beam'),\n    LEVEL = _require.LEVEL;\n\nvar config = require('./config');\n\nvar Logger = require('./logger');\n\nvar debug = require('@dabh/diagnostics')('winston:create-logger');\n\nfunction isLevelEnabledFunctionName(level) {\n  return 'is' + level.charAt(0).toUpperCase() + level.slice(1) + 'Enabled';\n}\n/**\n * Create a new instance of a winston Logger. Creates a new\n * prototype for each instance.\n * @param {!Object} opts - Options for the created logger.\n * @returns {Logger} - A newly created logger instance.\n */\n\n\nmodule.exports = function () {\n  var opts = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  //\n  // Default levels: npm\n  //\n  opts.levels = opts.levels || config.npm.levels;\n  /**\n   * DerivedLogger to attach the logs level methods.\n   * @type {DerivedLogger}\n   * @extends {Logger}\n   */\n\n  var DerivedLogger = /*#__PURE__*/function (_Logger) {\n    _inherits(DerivedLogger, _Logger);\n\n    var _super = _createSuper(DerivedLogger);\n\n    /**\n     * Create a new class derived logger for which the levels can be attached to\n     * the prototype of. This is a V8 optimization that is well know to increase\n     * performance of prototype functions.\n     * @param {!Object} options - Options for the created logger.\n     */\n    function DerivedLogger(options) {\n      _classCallCheck(this, DerivedLogger);\n\n      return _super.call(this, options);\n    }\n\n    return DerivedLogger;\n  }(Logger);\n\n  var logger = new DerivedLogger(opts); //\n  // Create the log level methods for the derived logger.\n  //\n\n  Object.keys(opts.levels).forEach(function (level) {\n    debug('Define prototype method for \"%s\"', level);\n\n    if (level === 'log') {\n      // eslint-disable-next-line no-console\n      console.warn('Level \"log\" not defined: conflicts with the method \"log\". Use a different level name.');\n      return;\n    } //\n    // Define prototype methods for each log level e.g.:\n    // logger.log('info', msg) implies these methods are defined:\n    // - logger.info(msg)\n    // - logger.isInfoEnabled()\n    //\n    // Remark: to support logger.child this **MUST** be a function\n    // so it'll always be called on the instance instead of a fixed\n    // place in the prototype chain.\n    //\n\n\n    DerivedLogger.prototype[level] = function () {\n      // Prefer any instance scope, but default to \"root\" logger\n      var self = this || logger; // Optimize the hot-path which is the single object.\n\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      if (args.length === 1) {\n        var msg = args[0];\n        var info = msg && msg.message && msg || {\n          message: msg\n        };\n        info.level = info[LEVEL] = level;\n\n        self._addDefaultMeta(info);\n\n        self.write(info);\n        return this || logger;\n      } // When provided nothing assume the empty string\n\n\n      if (args.length === 0) {\n        self.log(level, '');\n        return self;\n      } // Otherwise build argument list which could potentially conform to\n      // either:\n      // . v3 API: log(obj)\n      // 2. v1/v2 API: log(level, msg, ... [string interpolate], [{metadata}], [callback])\n\n\n      return self.log.apply(self, [level].concat(args));\n    };\n\n    DerivedLogger.prototype[isLevelEnabledFunctionName(level)] = function () {\n      return (this || logger).isLevelEnabled(level);\n    };\n  });\n  return logger;\n};"]},"metadata":{},"sourceType":"script"}