{"ast":null,"code":"/**\n * Some Helpful functions\n * The library does not depend on this functions this are just here to help you\n * if you need them\n */\nmodule.exports = {\n  /**\n   * Returns a bearer header object this could be used for .set in a request\n   * @param {String} key - The key for this header\n   * @returns {Object}\n   * @example\n   * req.set(ladybug.bearer(\"My Bearer Key\"));\n   */\n  bearer: key => ({\n    Authorization: `Bearer ${key}`\n  }),\n\n  /**\n   * Returns a Basic Authentication header object\n   * which is in format Authorization: Basic Base64Encode(username:password)\n   * @param {String} username - Username for authorization\n   * @param {String} password - Password for authorization\n   * @returns {Object}\n   * @example\n   * req.set(ladybug.basic(\"user123\", \"youshallnotpass\"));\n   */\n  basic: (username, password) => ({\n    Authorization: `Basic ${Buffer.from(`${username}:${password}`).toString(\"base64\")}`\n  })\n};","map":{"version":3,"sources":["/home/conrad/Documents/tarot/tarot-cards/node_modules/ladybug-fetch/src/utils/helpers.js"],"names":["module","exports","bearer","key","Authorization","basic","username","password","Buffer","from","toString"],"mappings":"AACA;AACA;AACA;AACA;AACA;AACAA,MAAM,CAACC,OAAP,GAAiB;AAEf;AACF;AACA;AACA;AACA;AACA;AACA;AACEC,EAAAA,MAAM,EAAGC,GAAD,KAAU;AAAEC,IAAAA,aAAa,EAAG,UAASD,GAAI;AAA/B,GAAV,CATO;;AAWf;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACEE,EAAAA,KAAK,EAAE,CAACC,QAAD,EAAWC,QAAX,MAAyB;AAAEH,IAAAA,aAAa,EAAG,SAAQI,MAAM,CAACC,IAAP,CAAa,GAAEH,QAAS,IAAGC,QAAS,EAApC,EAAuCG,QAAvC,CAAgD,QAAhD,CAA0D;AAApF,GAAzB;AApBQ,CAAjB","sourcesContent":["\n/**\n * Some Helpful functions\n * The library does not depend on this functions this are just here to help you\n * if you need them\n */\nmodule.exports = {\n\n  /**\n   * Returns a bearer header object this could be used for .set in a request\n   * @param {String} key - The key for this header\n   * @returns {Object}\n   * @example\n   * req.set(ladybug.bearer(\"My Bearer Key\"));\n   */\n  bearer: (key) => ({ Authorization: `Bearer ${key}` }),\n\n  /**\n   * Returns a Basic Authentication header object\n   * which is in format Authorization: Basic Base64Encode(username:password)\n   * @param {String} username - Username for authorization\n   * @param {String} password - Password for authorization\n   * @returns {Object}\n   * @example\n   * req.set(ladybug.basic(\"user123\", \"youshallnotpass\"));\n   */\n  basic: (username, password) => ({ Authorization: `Basic ${Buffer.from(`${username}:${password}`).toString(\"base64\")}` })\n};\n"]},"metadata":{},"sourceType":"script"}