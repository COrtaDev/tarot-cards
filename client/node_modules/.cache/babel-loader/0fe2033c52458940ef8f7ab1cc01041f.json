{"ast":null,"code":"import wiki from 'wikijs';\nexport async function getMajorArcana() {\n  const page = await wiki().page('Major_Arcana');\n  const [tables] = await page.tables();\n  const deck = await buildDeck(tables);\n  console.log(deck);\n  return deck;\n}\n\nfunction buildDeck(tables) {\n  async function getImgUrl(search) {\n    const page = await wiki().page(search);\n    const rawImg = await page.rawImages(); // console.log(rawImg)\n\n    for (let i = 0; i < rawImg.length; i++) {\n      // console.log(rawImg[i].title);\n      if (rawImg[i].title.includes(\"RWS\")) {\n        // console.log(rawImg[i].imageinfo[0].url)\n        return rawImg[i].imageinfo[0].url;\n      }\n    }\n  }\n\n  ;\n  const deck = tables.map(table => {\n    const queryString = makeQueryString(table.card);\n    const url = getImgUrl(queryString);\n\n    if (table.card.startsWith(\"Strength\")) {\n      return {\n        cardName: \"Strength\",\n        queryString: queryString,\n        url: url\n      };\n    }\n\n    ;\n\n    if (table.card.startsWith(\"Justice\")) {\n      return {\n        cardName: \"Justice\",\n        queryString: queryString,\n        url: url\n      };\n    }\n\n    ;\n    return {\n      cardName: table.card,\n      queryString: queryString,\n      url: url\n    };\n  });\n  return deck;\n}\n\nfunction makeQueryString(str) {\n  if (str.startsWith(\"Strength\")) str = \"Strength\";\n  if (str.startsWith(\"Justice\")) str = \"Justice\";\n  str = str.replaceAll(\" \", \"_\");\n  str = str + \"_(Tarot_card)\";\n  return str;\n}\n\nasync function getImgUrl(search) {\n  const page = await wiki().page(search);\n  const rawImg = await page.rawImages(); // console.log(rawImg)\n\n  for (let i = 0; i < rawImg.length; i++) {\n    // console.log(rawImg[i].title);\n    if (rawImg[i].title.includes(\"RWS\")) {\n      // console.log(rawImg[i].imageinfo[0].url)\n      return rawImg[i].imageinfo[0].url;\n    }\n  }\n}\n\n;\nexport default getMajorArcana;","map":{"version":3,"sources":["/home/conrad/Documents/tarot/tarot-cards/src/Helpers/getCards.js"],"names":["wiki","getMajorArcana","page","tables","deck","buildDeck","console","log","getImgUrl","search","rawImg","rawImages","i","length","title","includes","imageinfo","url","map","table","queryString","makeQueryString","card","startsWith","cardName","str","replaceAll"],"mappings":"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","sourcesContent":["import wiki from 'wikijs';\n\nexport async function getMajorArcana() {\n    const page = await wiki().page('Major_Arcana');\n    const [tables] = await page.tables();\n    const deck = await buildDeck(tables);\n    console.log(deck)\n    return deck;\n}\n\nfunction buildDeck(tables) {\n    async function getImgUrl(search) {\n        const page = await wiki().page(search);\n        const rawImg = await page.rawImages();\n        // console.log(rawImg)\n        for (let i = 0; i < rawImg.length; i++) {\n            // console.log(rawImg[i].title);\n            if (rawImg[i].title.includes(\"RWS\")) {\n                // console.log(rawImg[i].imageinfo[0].url)\n                return(rawImg[i].imageinfo[0].url);\n            }\n        }\n    };\n    const deck = tables.map(table => {\n        const queryString = makeQueryString(table.card);\n        const url = getImgUrl(queryString)\n        if (table.card.startsWith(\"Strength\")) {\n            return (\n                {\n                    cardName: \"Strength\",\n                    queryString: queryString,\n                    url: url,\n                }\n            )\n        };\n        if (table.card.startsWith(\"Justice\")) {\n            return (\n                {\n                    cardName: \"Justice\",\n                    queryString: queryString,\n                    url: url,\n                }\n            )\n        };\n        return (\n            {\n                cardName: table.card,\n                queryString: queryString,\n                url: url,\n            }\n        )\n    });\n    return deck;\n}\n\nfunction makeQueryString(str) {\n    if (str.startsWith(\"Strength\")) str = \"Strength\";\n    if (str.startsWith(\"Justice\")) str = \"Justice\";\n    str = str.replaceAll(\" \", \"_\")\n    str = str + \"_(Tarot_card)\";\n    return str;\n}\n\nasync function getImgUrl(search) {\n    const page = await wiki().page(search);\n    const rawImg = await page.rawImages();\n    // console.log(rawImg)\n    for (let i = 0; i < rawImg.length; i++) {\n        // console.log(rawImg[i].title);\n        if (rawImg[i].title.includes(\"RWS\")) {\n            // console.log(rawImg[i].imageinfo[0].url)\n            return(rawImg[i].imageinfo[0].url);\n        }\n    }\n};\nexport default getMajorArcana;\n"]},"metadata":{},"sourceType":"module"}