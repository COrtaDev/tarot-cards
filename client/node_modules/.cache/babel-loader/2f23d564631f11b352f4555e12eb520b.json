{"ast":null,"code":"'use strict';\n/**\n * Checks if a given namespace is allowed by the given variable.\n *\n * @param {String} name namespace that should be included.\n * @param {String} variable Value that needs to be tested.\n * @returns {Boolean} Indication if namespace is enabled.\n * @public\n */\n\nmodule.exports = function enabled(name, variable) {\n  if (!variable) return false;\n  var variables = variable.split(/[\\s,]+/),\n      i = 0;\n\n  for (; i < variables.length; i++) {\n    variable = variables[i].replace('*', '.*?');\n\n    if ('-' === variable.charAt(0)) {\n      if (new RegExp('^' + variable.substr(1) + '$').test(name)) {\n        return false;\n      }\n\n      continue;\n    }\n\n    if (new RegExp('^' + variable + '$').test(name)) {\n      return true;\n    }\n  }\n\n  return false;\n};","map":{"version":3,"sources":["/home/conrad/Documents/tarot/tarot-cards/node_modules/enabled/index.js"],"names":["module","exports","enabled","name","variable","variables","split","i","length","replace","charAt","RegExp","substr","test"],"mappings":"AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACAA,MAAM,CAACC,OAAP,GAAiB,SAASC,OAAT,CAAiBC,IAAjB,EAAuBC,QAAvB,EAAiC;AAChD,MAAI,CAACA,QAAL,EAAe,OAAO,KAAP;AAEf,MAAIC,SAAS,GAAGD,QAAQ,CAACE,KAAT,CAAe,QAAf,CAAhB;AAAA,MACIC,CAAC,GAAG,CADR;;AAGA,SAAOA,CAAC,GAAGF,SAAS,CAACG,MAArB,EAA6BD,CAAC,EAA9B,EAAkC;AAChCH,IAAAA,QAAQ,GAAGC,SAAS,CAACE,CAAD,CAAT,CAAaE,OAAb,CAAqB,GAArB,EAA0B,KAA1B,CAAX;;AAEA,QAAI,QAAQL,QAAQ,CAACM,MAAT,CAAgB,CAAhB,CAAZ,EAAgC;AAC9B,UAAK,IAAIC,MAAJ,CAAW,MAAKP,QAAQ,CAACQ,MAAT,CAAgB,CAAhB,CAAL,GAAyB,GAApC,CAAD,CAA2CC,IAA3C,CAAgDV,IAAhD,CAAJ,EAA2D;AACzD,eAAO,KAAP;AACD;;AAED;AACD;;AAED,QAAK,IAAIQ,MAAJ,CAAW,MAAKP,QAAL,GAAe,GAA1B,CAAD,CAAiCS,IAAjC,CAAsCV,IAAtC,CAAJ,EAAiD;AAC/C,aAAO,IAAP;AACD;AACF;;AAED,SAAO,KAAP;AACD,CAvBD","sourcesContent":["'use strict';\n\n/**\n * Checks if a given namespace is allowed by the given variable.\n *\n * @param {String} name namespace that should be included.\n * @param {String} variable Value that needs to be tested.\n * @returns {Boolean} Indication if namespace is enabled.\n * @public\n */\nmodule.exports = function enabled(name, variable) {\n  if (!variable) return false;\n\n  var variables = variable.split(/[\\s,]+/)\n    , i = 0;\n\n  for (; i < variables.length; i++) {\n    variable = variables[i].replace('*', '.*?');\n\n    if ('-' === variable.charAt(0)) {\n      if ((new RegExp('^'+ variable.substr(1) +'$')).test(name)) {\n        return false;\n      }\n\n      continue;\n    }\n\n    if ((new RegExp('^'+ variable +'$')).test(name)) {\n      return true;\n    }\n  }\n\n  return false;\n};\n"]},"metadata":{},"sourceType":"script"}