{"ast":null,"code":"/**\n * Methods for traversing the DOM structure.\n *\n * @module cheerio/traversing\n */\nvar select = require('cheerio-select-tmp');\n\nvar utils = require('../utils');\n\nvar domEach = utils.domEach;\n\nvar uniqueSort = require('htmlparser2').DomUtils.uniqueSort;\n\nvar isTag = utils.isTag;\n/**\n * Get the descendants of each element in the current set of matched elements,\n * filtered by a selector, jQuery object, or element.\n *\n * @example\n *\n * $('#fruits').find('li').length\n * //=> 3\n * $('#fruits').find($('.apple')).length\n * //=> 1\n *\n * @param {string|cheerio|node} selectorOrHaystack - Element to look for.\n *\n * @see {@link http://api.jquery.com/find/}\n */\n\nexports.find = function (selectorOrHaystack) {\n  var elems = this.toArray().reduce(function (newElems, elem) {\n    return newElems.concat(elem.children.filter(isTag));\n  }, []);\n  var contains = this.constructor.contains;\n  var haystack;\n\n  if (selectorOrHaystack && typeof selectorOrHaystack !== 'string') {\n    if (selectorOrHaystack.cheerio) {\n      haystack = selectorOrHaystack.get();\n    } else {\n      haystack = [selectorOrHaystack];\n    }\n\n    return this._make(haystack.filter(function (elem) {\n      var idx;\n      var len;\n\n      for (idx = 0, len = this.length; idx < len; ++idx) {\n        if (contains(this[idx], elem)) {\n          return true;\n        }\n      }\n    }, this));\n  }\n\n  var options = {\n    __proto__: this.options,\n    context: this.toArray()\n  };\n  return this._make(select.select(selectorOrHaystack || '', elems, options));\n};\n/**\n * Get the parent of each element in the current set of matched elements,\n * optionally filtered by a selector.\n *\n * @example\n *\n * $('.pear').parent().attr('id')\n * //=> fruits\n *\n * @param {string} [selector] - If specified filter for parent.\n *\n * @see {@link http://api.jquery.com/parent/}\n */\n\n\nexports.parent = function (selector) {\n  var set = [];\n  domEach(this, function (idx, elem) {\n    var parentElem = elem.parent;\n\n    if (parentElem && parentElem.type !== 'root' && set.indexOf(parentElem) < 0) {\n      set.push(parentElem);\n    }\n  });\n\n  if (arguments.length) {\n    set = exports.filter.call(set, selector, this);\n  }\n\n  return this._make(set);\n};\n/**\n * Get a set of parents filtered by `selector` of each element in the current\n * set of match elements.\n *\n * @example\n *\n * $('.orange').parents().length\n * // => 2\n * $('.orange').parents('#fruits').length\n * // => 1\n *\n * @param {string} [selector] - If specified filter for parents.\n *\n * @see {@link http://api.jquery.com/parents/}\n */\n\n\nexports.parents = function (selector) {\n  var parentNodes = []; // When multiple DOM elements are in the original set, the resulting set will\n  // be in *reverse* order of the original elements as well, with duplicates\n  // removed.\n\n  this.get().reverse().forEach(function (elem) {\n    traverseParents(this, elem.parent, selector, Infinity).forEach(function (node) {\n      if (parentNodes.indexOf(node) === -1) {\n        parentNodes.push(node);\n      }\n    });\n  }, this);\n  return this._make(parentNodes);\n};\n/**\n * Get the ancestors of each element in the current set of matched elements, up\n * to but not including the element matched by the selector, DOM node, or\n * cheerio object.\n *\n * @example\n *\n * $('.orange').parentsUntil('#food').length\n * // => 1\n *\n * @param {string|node|cheerio} selector - Selector for element to stop at.\n * @param {string|Function} [filter] - Optional filter for parents.\n *\n * @see {@link http://api.jquery.com/parentsUntil/}\n */\n\n\nexports.parentsUntil = function (selector, filter) {\n  var parentNodes = [];\n  var untilNode;\n  var untilNodes;\n\n  if (typeof selector === 'string') {\n    untilNode = select.select(selector, this.parents().toArray(), this.options)[0];\n  } else if (selector && selector.cheerio) {\n    untilNodes = selector.toArray();\n  } else if (selector) {\n    untilNode = selector;\n  } // When multiple DOM elements are in the original set, the resulting set will\n  // be in *reverse* order of the original elements as well, with duplicates\n  // removed.\n\n\n  this.toArray().reverse().forEach(function (elem) {\n    while (elem = elem.parent) {\n      if (untilNode && elem !== untilNode || untilNodes && untilNodes.indexOf(elem) === -1 || !untilNode && !untilNodes) {\n        if (isTag(elem) && parentNodes.indexOf(elem) === -1) {\n          parentNodes.push(elem);\n        }\n      } else {\n        break;\n      }\n    }\n  }, this);\n  return this._make(filter ? select.select(filter, parentNodes, this.options) : parentNodes);\n};\n/**\n * For each element in the set, get the first element that matches the selector\n * by testing the element itself and traversing up through its ancestors in\n * the DOM tree.\n *\n * @example\n *\n * $('.orange').closest()\n * // => []\n * $('.orange').closest('.apple')\n * // => []\n * $('.orange').closest('li')\n * // => [<li class=\"orange\">Orange</li>]\n * $('.orange').closest('#fruits')\n * // => [<ul id=\"fruits\"> ... </ul>]\n *\n * @param {string} [selector] - Selector for the element to find.\n *\n * @see {@link http://api.jquery.com/closest/}\n */\n\n\nexports.closest = function (selector) {\n  var set = [];\n\n  if (!selector) {\n    return this._make(set);\n  }\n\n  domEach(this, function (idx, elem) {\n    var closestElem = traverseParents(this, elem, selector, 1)[0]; // Do not add duplicate elements to the set\n\n    if (closestElem && set.indexOf(closestElem) < 0) {\n      set.push(closestElem);\n    }\n  });\n  return this._make(set);\n};\n/**\n * Gets the next sibling of the first selected element, optionally filtered by\n * a selector.\n *\n * @example\n *\n * $('.apple').next().hasClass('orange')\n * //=> true\n *\n * @param {string} [selector] - If specified filter for sibling.\n *\n * @see {@link http://api.jquery.com/next/}\n */\n\n\nexports.next = function (selector) {\n  if (!this[0]) {\n    return this;\n  }\n\n  var elems = [];\n  this.toArray().forEach(function (elem) {\n    while (elem = elem.next) {\n      if (isTag(elem)) {\n        elems.push(elem);\n        return;\n      }\n    }\n  });\n  return selector ? exports.filter.call(elems, selector, this) : this._make(elems);\n};\n/**\n * Gets all the following siblings of the first selected element, optionally\n * filtered by a selector.\n *\n * @example\n *\n * $('.apple').nextAll()\n * //=> [<li class=\"orange\">Orange</li>, <li class=\"pear\">Pear</li>]\n * $('.apple').nextAll('.orange')\n * //=> [<li class=\"orange\">Orange</li>]\n *\n * @param {string} [selector] - If specified filter for siblings.\n *\n * @see {@link http://api.jquery.com/nextAll/}\n */\n\n\nexports.nextAll = function (selector) {\n  if (!this[0]) {\n    return this;\n  }\n\n  var elems = [];\n  this.toArray().forEach(function (elem) {\n    while (elem = elem.next) {\n      if (isTag(elem) && elems.indexOf(elem) === -1) {\n        elems.push(elem);\n      }\n    }\n  });\n  return selector ? exports.filter.call(elems, selector, this) : this._make(elems);\n};\n/**\n * Gets all the following siblings up to but not including the element matched\n * by the selector, optionally filtered by another selector.\n *\n * @example\n *\n * $('.apple').nextUntil('.pear')\n * //=> [<li class=\"orange\">Orange</li>]\n *\n * @param {string|cheerio|node} selector - Selector for element to stop at.\n * @param {string} [filterSelector] - If specified filter for siblings.\n *\n * @see {@link http://api.jquery.com/nextUntil/}\n */\n\n\nexports.nextUntil = function (selector, filterSelector) {\n  if (!this[0]) {\n    return this;\n  }\n\n  var elems = [];\n  var untilNode;\n  var untilNodes;\n\n  if (typeof selector === 'string') {\n    untilNode = select.select(selector, this.nextAll().get(), this.options)[0];\n  } else if (selector && selector.cheerio) {\n    untilNodes = selector.get();\n  } else if (selector) {\n    untilNode = selector;\n  }\n\n  this.toArray().forEach(function (elem) {\n    while (elem = elem.next) {\n      if (untilNode && elem !== untilNode || untilNodes && untilNodes.indexOf(elem) === -1 || !untilNode && !untilNodes) {\n        if (isTag(elem) && elems.indexOf(elem) === -1) {\n          elems.push(elem);\n        }\n      } else {\n        break;\n      }\n    }\n  });\n  return filterSelector ? exports.filter.call(elems, filterSelector, this) : this._make(elems);\n};\n/**\n * Gets the previous sibling of the first selected element optionally filtered\n * by a selector.\n *\n * @example\n *\n * $('.orange').prev().hasClass('apple')\n * //=> true\n *\n * @param {string} [selector] - If specified filter for siblings.\n *\n * @see {@link http://api.jquery.com/prev/}\n */\n\n\nexports.prev = function (selector) {\n  if (!this[0]) {\n    return this;\n  }\n\n  var elems = [];\n  this.toArray().forEach(function (elem) {\n    while (elem = elem.prev) {\n      if (isTag(elem)) {\n        elems.push(elem);\n        return;\n      }\n    }\n  });\n  return selector ? exports.filter.call(elems, selector, this) : this._make(elems);\n};\n/**\n * Gets all the preceding siblings of the first selected element, optionally\n * filtered by a selector.\n *\n * @example\n *\n * $('.pear').prevAll()\n * //=> [<li class=\"orange\">Orange</li>, <li class=\"apple\">Apple</li>]\n * $('.pear').prevAll('.orange')\n * //=> [<li class=\"orange\">Orange</li>]\n *\n * @param {string} [selector] - If specified filter for siblings.\n *\n * @see {@link http://api.jquery.com/prevAll/}\n */\n\n\nexports.prevAll = function (selector) {\n  if (!this[0]) {\n    return this;\n  }\n\n  var elems = [];\n  this.toArray().forEach(function (elem) {\n    while (elem = elem.prev) {\n      if (isTag(elem) && elems.indexOf(elem) === -1) {\n        elems.push(elem);\n      }\n    }\n  });\n  return selector ? exports.filter.call(elems, selector, this) : this._make(elems);\n};\n/**\n * Gets all the preceding siblings up to but not including the element matched\n * by the selector, optionally filtered by another selector.\n *\n * @example\n *\n * $('.pear').prevUntil('.apple')\n * //=> [<li class=\"orange\">Orange</li>]\n *\n * @param {string|cheerio|node} selector - Selector for element to stop at.\n * @param {string} [filterSelector] - If specified filter for siblings.\n *\n * @see {@link http://api.jquery.com/prevUntil/}\n */\n\n\nexports.prevUntil = function (selector, filterSelector) {\n  if (!this[0]) {\n    return this;\n  }\n\n  var elems = [];\n  var untilNode;\n  var untilNodes;\n\n  if (typeof selector === 'string') {\n    untilNode = select.select(selector, this.prevAll().get(), this.options)[0];\n  } else if (selector && selector.cheerio) {\n    untilNodes = selector.get();\n  } else if (selector) {\n    untilNode = selector;\n  }\n\n  this.toArray().forEach(function (elem) {\n    while (elem = elem.prev) {\n      if (untilNode && elem !== untilNode || untilNodes && untilNodes.indexOf(elem) === -1 || !untilNode && !untilNodes) {\n        if (isTag(elem) && elems.indexOf(elem) === -1) {\n          elems.push(elem);\n        }\n      } else {\n        break;\n      }\n    }\n  });\n  return filterSelector ? exports.filter.call(elems, filterSelector, this) : this._make(elems);\n};\n/**\n * Gets the first selected element's siblings, excluding itself.\n *\n * @example\n *\n * $('.pear').siblings().length\n * //=> 2\n *\n * $('.pear').siblings('.orange').length\n * //=> 1\n *\n * @param {string} [selector] - If specified filter for siblings.\n *\n * @see {@link http://api.jquery.com/siblings/}\n */\n\n\nexports.siblings = function (selector) {\n  var parent = this.parent();\n  var elems = (parent ? parent.children() : this.siblingsAndMe()).toArray().filter(function (elem) {\n    return isTag(elem) && !this.is(elem);\n  }, this);\n\n  if (selector !== undefined) {\n    return exports.filter.call(elems, selector, this);\n  }\n\n  return this._make(elems);\n};\n/**\n * Gets the children of the first selected element.\n *\n * @example\n *\n * $('#fruits').children().length\n * //=> 3\n *\n * $('#fruits').children('.pear').text()\n * //=> Pear\n *\n * @param {string} [selector] - If specified filter for children.\n *\n * @see {@link http://api.jquery.com/children/}\n */\n\n\nexports.children = function (selector) {\n  var elems = this.toArray().reduce(function (newElems, elem) {\n    return newElems.concat(elem.children.filter(isTag));\n  }, []);\n  if (selector === undefined) return this._make(elems);\n  return exports.filter.call(elems, selector, this);\n};\n/**\n * Gets the children of each element in the set of matched elements, including\n * text and comment nodes.\n *\n * @example\n *\n * $('#fruits').contents().length\n * //=> 3\n *\n * @see {@link http://api.jquery.com/contents/}\n */\n\n\nexports.contents = function () {\n  var elems = this.toArray().reduce(function (newElems, elem) {\n    return newElems.concat(elem.children);\n  }, []);\n  return this._make(elems);\n};\n/**\n * Iterates over a cheerio object, executing a function for each matched\n * element. When the callback is fired, the function is fired in the context of\n * the DOM element, so `this` refers to the current element, which is\n * equivalent to the function parameter `element`. To break out of the `each`\n * loop early, return with `false`.\n *\n * @example\n *\n * const fruits = [];\n *\n * $('li').each(function(i, elem) {\n *   fruits[i] = $(this).text();\n * });\n *\n * fruits.join(', ');\n * //=> Apple, Orange, Pear\n *\n * @param {Function} fn - Function to execute.\n *\n * @see {@link http://api.jquery.com/each/}\n */\n\n\nexports.each = function (fn) {\n  var i = 0;\n  var len = this.length;\n\n  while (i < len && fn.call(this[i], i, this[i]) !== false) ++i;\n\n  return this;\n};\n/**\n * Pass each element in the current matched set through a function, producing a\n * new Cheerio object containing the return values. The function can return an\n * individual data item or an array of data items to be inserted into the\n * resulting set. If an array is returned, the elements inside the array are\n * inserted into the set. If the function returns null or undefined, no element\n * will be inserted.\n *\n * @example\n *\n * $('li').map(function(i, el) {\n *   // this === el\n *   return $(this).text();\n * }).get().join(' ');\n * //=> \"apple orange pear\"\n *\n * @param {Function} fn - Function to execute.\n *\n * @see {@link http://api.jquery.com/map/}\n */\n\n\nexports.map = function (fn) {\n  var elems = [];\n\n  for (var i = 0; i < this.length; i++) {\n    var el = this[i];\n    var val = fn.call(el, i, el);\n\n    if (val != null) {\n      elems = elems.concat(val);\n    }\n  }\n\n  return this._make(elems);\n};\n\nfunction getFilterFn(match) {\n  if (typeof match === 'function') {\n    return function (el, i) {\n      return match.call(el, i, el);\n    };\n  } else if (match.cheerio) {\n    return match.is.bind(match);\n  }\n\n  return function (el) {\n    return match === el;\n  };\n}\n/**\n * Iterates over a cheerio object, reducing the set of selector elements to\n * those that match the selector or pass the function's test. When a Cheerio\n * selection is specified, return only the elements contained in that\n * selection. When an element is specified, return only that element (if it is\n * contained in the original selection). If using the function method, the\n * function is executed in the context of the selected element, so `this`\n * refers to the current element.\n *\n * @function\n * @param {string | Function} match - Value to look for, following the rules above.\n * @param {node[]} container - Optional node to filter instead.\n *\n * @example <caption>Selector</caption>\n *\n * $('li').filter('.orange').attr('class');\n * //=> orange\n *\n * @example <caption>Function</caption>\n *\n * $('li').filter(function(i, el) {\n *   // this === el\n *   return $(this).attr('class') === 'orange';\n * }).attr('class')\n * //=> orange\n *\n * @see {@link http://api.jquery.com/filter/}\n */\n\n\nexports.filter = function (match, container) {\n  container = container || this;\n  var elements = this.toArray ? this.toArray() : this;\n\n  if (typeof match === 'string') {\n    elements = select.filter(match, elements, container.options);\n  } else {\n    elements = elements.filter(getFilterFn(match));\n  }\n\n  return container._make(elements);\n};\n/**\n * Remove elements from the set of matched elements. Given a jQuery object that\n * represents a set of DOM elements, the `.not()` method constructs a new\n * jQuery object from a subset of the matching elements. The supplied selector\n * is tested against each element; the elements that don't match the selector\n * will be included in the result. The `.not()` method can take a function as\n * its argument in the same way that `.filter()` does. Elements for which the\n * function returns true are excluded from the filtered set; all other elements\n * are included.\n *\n * @function\n * @param {string | Function} match - Value to look for, following the rules above.\n * @param {node[]} container - Optional node to filter instead.\n *\n * @example <caption>Selector</caption>\n *\n * $('li').not('.apple').length;\n * //=> 2\n *\n * @example <caption>Function</caption>\n *\n * $('li').not(function(i, el) {\n *   // this === el\n *   return $(this).attr('class') === 'orange';\n * }).length;\n * //=> 2\n *\n * @see {@link http://api.jquery.com/not/}\n */\n\n\nexports.not = function (match, container) {\n  container = container || this;\n  var elements = container.toArray ? container.toArray() : container;\n  var matches;\n  var filterFn;\n\n  if (typeof match === 'string') {\n    matches = new Set(select.filter(match, elements, this.options));\n    elements = elements.filter(function (el) {\n      return !matches.has(el);\n    });\n  } else {\n    filterFn = getFilterFn(match);\n    elements = elements.filter(function (el, i) {\n      return !filterFn(el, i);\n    });\n  }\n\n  return container._make(elements);\n};\n/**\n * Filters the set of matched elements to only those which have the given DOM\n * element as a descendant or which have a descendant that matches the given\n * selector. Equivalent to `.filter(':has(selector)')`.\n *\n * @example <caption>Selector</caption>\n *\n * $('ul').has('.pear').attr('id');\n * //=> fruits\n *\n * @example <caption>Element</caption>\n *\n * $('ul').has($('.pear')[0]).attr('id');\n * //=> fruits\n *\n * @param {string|cheerio|node} selectorOrHaystack - Element to look for.\n *\n * @see {@link http://api.jquery.com/has/}\n */\n\n\nexports.has = function (selectorOrHaystack) {\n  var that = this;\n  return exports.filter.call(this, function () {\n    return that._make(this).find(selectorOrHaystack).length > 0;\n  });\n};\n/**\n * Will select the first element of a cheerio object.\n *\n * @example\n *\n * $('#fruits').children().first().text()\n * //=> Apple\n *\n * @see {@link http://api.jquery.com/first/}\n */\n\n\nexports.first = function () {\n  return this.length > 1 ? this._make(this[0]) : this;\n};\n/**\n * Will select the last element of a cheerio object.\n *\n * @example\n *\n * $('#fruits').children().last().text()\n * //=> Pear\n *\n * @see {@link http://api.jquery.com/last/}\n */\n\n\nexports.last = function () {\n  return this.length > 1 ? this._make(this[this.length - 1]) : this;\n};\n/**\n * Reduce the set of matched elements to the one at the specified index. Use\n * `.eq(-i)` to count backwards from the last selected element.\n *\n * @example\n *\n * $('li').eq(0).text()\n * //=> Apple\n *\n * $('li').eq(-1).text()\n * //=> Pear\n *\n * @param {number} i - Index of the element to select.\n *\n * @see {@link http://api.jquery.com/eq/}\n */\n\n\nexports.eq = function (i) {\n  i = +i; // Use the first identity optimization if possible\n\n  if (i === 0 && this.length <= 1) return this;\n  if (i < 0) i = this.length + i;\n  return this[i] ? this._make(this[i]) : this._make([]);\n};\n/**\n * Retrieve the DOM elements matched by the Cheerio object. If an index is\n * specified, retrieve one of the elements matched by the Cheerio object.\n *\n * @example\n *\n * $('li').get(0).tagName\n * //=> li\n *\n * If no index is specified, retrieve all elements matched by the Cheerio object:\n *\n * @example\n *\n * $('li').get().length\n * //=> 3\n *\n * @param {number} [i] - Element to retrieve.\n *\n * @see {@link http://api.jquery.com/get/}\n */\n\n\nexports.get = function (i) {\n  if (i == null) {\n    return Array.prototype.slice.call(this);\n  }\n\n  return this[i < 0 ? this.length + i : i];\n};\n/**\n * Search for a given element from among the matched elements.\n *\n * @example\n *\n * $('.pear').index()\n * //=> 2\n * $('.orange').index('li')\n * //=> 1\n * $('.apple').index($('#fruit, li'))\n * //=> 1\n *\n * @param {string|cheerio|node} [selectorOrNeedle] - Element to look for.\n *\n * @see {@link http://api.jquery.com/index/}\n */\n\n\nexports.index = function (selectorOrNeedle) {\n  var $haystack;\n  var needle;\n\n  if (arguments.length === 0) {\n    $haystack = this.parent().children();\n    needle = this[0];\n  } else if (typeof selectorOrNeedle === 'string') {\n    $haystack = this._make(selectorOrNeedle);\n    needle = this[0];\n  } else {\n    $haystack = this;\n    needle = selectorOrNeedle.cheerio ? selectorOrNeedle[0] : selectorOrNeedle;\n  }\n\n  return $haystack.get().indexOf(needle);\n};\n/**\n * Gets the elements matching the specified range.\n *\n * @example\n *\n * $('li').slice(1).eq(0).text()\n * //=> 'Orange'\n *\n * $('li').slice(1, 2).length\n * //=> 1\n *\n * @see {@link http://api.jquery.com/slice/}\n */\n\n\nexports.slice = function () {\n  return this._make([].slice.apply(this, arguments));\n};\n\nfunction traverseParents(self, elem, selector, limit) {\n  var elems = [];\n\n  while (elem && elems.length < limit && elem.type !== 'root') {\n    if (!selector || exports.filter.call([elem], selector, self).length) {\n      elems.push(elem);\n    }\n\n    elem = elem.parent;\n  }\n\n  return elems;\n}\n/**\n * End the most recent filtering operation in the current chain and return the\n * set of matched elements to its previous state.\n *\n * @example\n *\n * $('li').eq(0).end().length\n * //=> 3\n *\n * @see {@link http://api.jquery.com/end/}\n */\n\n\nexports.end = function () {\n  return this.prevObject || this._make([]);\n};\n/**\n * Add elements to the set of matched elements.\n *\n * @example\n *\n * $('.apple').add('.orange').length\n * //=> 2\n *\n * @param {string|cheerio} other - Elements to add.\n * @param {cheerio} [context] - Optionally the context of the new selection.\n *\n * @see {@link http://api.jquery.com/add/}\n */\n\n\nexports.add = function (other, context) {\n  var selection = this._make(other, context);\n\n  var contents = uniqueSort(selection.get().concat(this.get()));\n\n  for (var i = 0; i < contents.length; ++i) {\n    selection[i] = contents[i];\n  }\n\n  selection.length = contents.length;\n  return selection;\n};\n/**\n * Add the previous set of elements on the stack to the current set, optionally\n * filtered by a selector.\n *\n * @example\n *\n * $('li').eq(0).addBack('.orange').length\n * //=> 2\n *\n * @param {string} selector - Selector for the elements to add.\n *\n * @see {@link http://api.jquery.com/addBack/}\n */\n\n\nexports.addBack = function (selector) {\n  return this.add(arguments.length ? this.prevObject.filter(selector) : this.prevObject);\n};","map":{"version":3,"sources":["/home/conrad/Documents/tarot/tarot-cards/node_modules/cheerio/lib/api/traversing.js"],"names":["select","require","utils","domEach","uniqueSort","DomUtils","isTag","exports","find","selectorOrHaystack","elems","toArray","reduce","newElems","elem","concat","children","filter","contains","constructor","haystack","cheerio","get","_make","idx","len","length","options","__proto__","context","parent","selector","set","parentElem","type","indexOf","push","arguments","call","parents","parentNodes","reverse","forEach","traverseParents","Infinity","node","parentsUntil","untilNode","untilNodes","closest","closestElem","next","nextAll","nextUntil","filterSelector","prev","prevAll","prevUntil","siblings","siblingsAndMe","is","undefined","contents","each","fn","i","map","el","val","getFilterFn","match","bind","container","elements","not","matches","filterFn","Set","has","that","first","last","eq","Array","prototype","slice","index","selectorOrNeedle","$haystack","needle","apply","self","limit","end","prevObject","add","other","selection","addBack"],"mappings":"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","sourcesContent":["/**\n * Methods for traversing the DOM structure.\n *\n * @module cheerio/traversing\n */\n\nvar select = require('cheerio-select-tmp');\nvar utils = require('../utils');\nvar domEach = utils.domEach;\nvar uniqueSort = require('htmlparser2').DomUtils.uniqueSort;\nvar isTag = utils.isTag;\n\n/**\n * Get the descendants of each element in the current set of matched elements,\n * filtered by a selector, jQuery object, or element.\n *\n * @example\n *\n * $('#fruits').find('li').length\n * //=> 3\n * $('#fruits').find($('.apple')).length\n * //=> 1\n *\n * @param {string|cheerio|node} selectorOrHaystack - Element to look for.\n *\n * @see {@link http://api.jquery.com/find/}\n */\nexports.find = function (selectorOrHaystack) {\n  var elems = this.toArray().reduce(function (newElems, elem) {\n    return newElems.concat(elem.children.filter(isTag));\n  }, []);\n  var contains = this.constructor.contains;\n  var haystack;\n\n  if (selectorOrHaystack && typeof selectorOrHaystack !== 'string') {\n    if (selectorOrHaystack.cheerio) {\n      haystack = selectorOrHaystack.get();\n    } else {\n      haystack = [selectorOrHaystack];\n    }\n\n    return this._make(\n      haystack.filter(function (elem) {\n        var idx;\n        var len;\n        for (idx = 0, len = this.length; idx < len; ++idx) {\n          if (contains(this[idx], elem)) {\n            return true;\n          }\n        }\n      }, this)\n    );\n  }\n\n  var options = { __proto__: this.options, context: this.toArray() };\n\n  return this._make(select.select(selectorOrHaystack || '', elems, options));\n};\n\n/**\n * Get the parent of each element in the current set of matched elements,\n * optionally filtered by a selector.\n *\n * @example\n *\n * $('.pear').parent().attr('id')\n * //=> fruits\n *\n * @param {string} [selector] - If specified filter for parent.\n *\n * @see {@link http://api.jquery.com/parent/}\n */\nexports.parent = function (selector) {\n  var set = [];\n\n  domEach(this, function (idx, elem) {\n    var parentElem = elem.parent;\n    if (\n      parentElem &&\n      parentElem.type !== 'root' &&\n      set.indexOf(parentElem) < 0\n    ) {\n      set.push(parentElem);\n    }\n  });\n\n  if (arguments.length) {\n    set = exports.filter.call(set, selector, this);\n  }\n\n  return this._make(set);\n};\n\n/**\n * Get a set of parents filtered by `selector` of each element in the current\n * set of match elements.\n *\n * @example\n *\n * $('.orange').parents().length\n * // => 2\n * $('.orange').parents('#fruits').length\n * // => 1\n *\n * @param {string} [selector] - If specified filter for parents.\n *\n * @see {@link http://api.jquery.com/parents/}\n */\nexports.parents = function (selector) {\n  var parentNodes = [];\n\n  // When multiple DOM elements are in the original set, the resulting set will\n  // be in *reverse* order of the original elements as well, with duplicates\n  // removed.\n  this.get()\n    .reverse()\n    .forEach(function (elem) {\n      traverseParents(this, elem.parent, selector, Infinity).forEach(function (\n        node\n      ) {\n        if (parentNodes.indexOf(node) === -1) {\n          parentNodes.push(node);\n        }\n      });\n    }, this);\n\n  return this._make(parentNodes);\n};\n\n/**\n * Get the ancestors of each element in the current set of matched elements, up\n * to but not including the element matched by the selector, DOM node, or\n * cheerio object.\n *\n * @example\n *\n * $('.orange').parentsUntil('#food').length\n * // => 1\n *\n * @param {string|node|cheerio} selector - Selector for element to stop at.\n * @param {string|Function} [filter] - Optional filter for parents.\n *\n * @see {@link http://api.jquery.com/parentsUntil/}\n */\nexports.parentsUntil = function (selector, filter) {\n  var parentNodes = [];\n  var untilNode;\n  var untilNodes;\n\n  if (typeof selector === 'string') {\n    untilNode = select.select(\n      selector,\n      this.parents().toArray(),\n      this.options\n    )[0];\n  } else if (selector && selector.cheerio) {\n    untilNodes = selector.toArray();\n  } else if (selector) {\n    untilNode = selector;\n  }\n\n  // When multiple DOM elements are in the original set, the resulting set will\n  // be in *reverse* order of the original elements as well, with duplicates\n  // removed.\n\n  this.toArray()\n    .reverse()\n    .forEach(function (elem) {\n      while ((elem = elem.parent)) {\n        if (\n          (untilNode && elem !== untilNode) ||\n          (untilNodes && untilNodes.indexOf(elem) === -1) ||\n          (!untilNode && !untilNodes)\n        ) {\n          if (isTag(elem) && parentNodes.indexOf(elem) === -1) {\n            parentNodes.push(elem);\n          }\n        } else {\n          break;\n        }\n      }\n    }, this);\n\n  return this._make(\n    filter ? select.select(filter, parentNodes, this.options) : parentNodes\n  );\n};\n\n/**\n * For each element in the set, get the first element that matches the selector\n * by testing the element itself and traversing up through its ancestors in\n * the DOM tree.\n *\n * @example\n *\n * $('.orange').closest()\n * // => []\n * $('.orange').closest('.apple')\n * // => []\n * $('.orange').closest('li')\n * // => [<li class=\"orange\">Orange</li>]\n * $('.orange').closest('#fruits')\n * // => [<ul id=\"fruits\"> ... </ul>]\n *\n * @param {string} [selector] - Selector for the element to find.\n *\n * @see {@link http://api.jquery.com/closest/}\n */\nexports.closest = function (selector) {\n  var set = [];\n\n  if (!selector) {\n    return this._make(set);\n  }\n\n  domEach(this, function (idx, elem) {\n    var closestElem = traverseParents(this, elem, selector, 1)[0];\n\n    // Do not add duplicate elements to the set\n    if (closestElem && set.indexOf(closestElem) < 0) {\n      set.push(closestElem);\n    }\n  });\n\n  return this._make(set);\n};\n\n/**\n * Gets the next sibling of the first selected element, optionally filtered by\n * a selector.\n *\n * @example\n *\n * $('.apple').next().hasClass('orange')\n * //=> true\n *\n * @param {string} [selector] - If specified filter for sibling.\n *\n * @see {@link http://api.jquery.com/next/}\n */\nexports.next = function (selector) {\n  if (!this[0]) {\n    return this;\n  }\n  var elems = [];\n\n  this.toArray().forEach(function (elem) {\n    while ((elem = elem.next)) {\n      if (isTag(elem)) {\n        elems.push(elem);\n        return;\n      }\n    }\n  });\n\n  return selector\n    ? exports.filter.call(elems, selector, this)\n    : this._make(elems);\n};\n\n/**\n * Gets all the following siblings of the first selected element, optionally\n * filtered by a selector.\n *\n * @example\n *\n * $('.apple').nextAll()\n * //=> [<li class=\"orange\">Orange</li>, <li class=\"pear\">Pear</li>]\n * $('.apple').nextAll('.orange')\n * //=> [<li class=\"orange\">Orange</li>]\n *\n * @param {string} [selector] - If specified filter for siblings.\n *\n * @see {@link http://api.jquery.com/nextAll/}\n */\nexports.nextAll = function (selector) {\n  if (!this[0]) {\n    return this;\n  }\n  var elems = [];\n\n  this.toArray().forEach(function (elem) {\n    while ((elem = elem.next)) {\n      if (isTag(elem) && elems.indexOf(elem) === -1) {\n        elems.push(elem);\n      }\n    }\n  });\n\n  return selector\n    ? exports.filter.call(elems, selector, this)\n    : this._make(elems);\n};\n\n/**\n * Gets all the following siblings up to but not including the element matched\n * by the selector, optionally filtered by another selector.\n *\n * @example\n *\n * $('.apple').nextUntil('.pear')\n * //=> [<li class=\"orange\">Orange</li>]\n *\n * @param {string|cheerio|node} selector - Selector for element to stop at.\n * @param {string} [filterSelector] - If specified filter for siblings.\n *\n * @see {@link http://api.jquery.com/nextUntil/}\n */\nexports.nextUntil = function (selector, filterSelector) {\n  if (!this[0]) {\n    return this;\n  }\n  var elems = [];\n  var untilNode;\n  var untilNodes;\n\n  if (typeof selector === 'string') {\n    untilNode = select.select(selector, this.nextAll().get(), this.options)[0];\n  } else if (selector && selector.cheerio) {\n    untilNodes = selector.get();\n  } else if (selector) {\n    untilNode = selector;\n  }\n\n  this.toArray().forEach(function (elem) {\n    while ((elem = elem.next)) {\n      if (\n        (untilNode && elem !== untilNode) ||\n        (untilNodes && untilNodes.indexOf(elem) === -1) ||\n        (!untilNode && !untilNodes)\n      ) {\n        if (isTag(elem) && elems.indexOf(elem) === -1) {\n          elems.push(elem);\n        }\n      } else {\n        break;\n      }\n    }\n  });\n\n  return filterSelector\n    ? exports.filter.call(elems, filterSelector, this)\n    : this._make(elems);\n};\n\n/**\n * Gets the previous sibling of the first selected element optionally filtered\n * by a selector.\n *\n * @example\n *\n * $('.orange').prev().hasClass('apple')\n * //=> true\n *\n * @param {string} [selector] - If specified filter for siblings.\n *\n * @see {@link http://api.jquery.com/prev/}\n */\nexports.prev = function (selector) {\n  if (!this[0]) {\n    return this;\n  }\n  var elems = [];\n\n  this.toArray().forEach(function (elem) {\n    while ((elem = elem.prev)) {\n      if (isTag(elem)) {\n        elems.push(elem);\n        return;\n      }\n    }\n  });\n\n  return selector\n    ? exports.filter.call(elems, selector, this)\n    : this._make(elems);\n};\n\n/**\n * Gets all the preceding siblings of the first selected element, optionally\n * filtered by a selector.\n *\n * @example\n *\n * $('.pear').prevAll()\n * //=> [<li class=\"orange\">Orange</li>, <li class=\"apple\">Apple</li>]\n * $('.pear').prevAll('.orange')\n * //=> [<li class=\"orange\">Orange</li>]\n *\n * @param {string} [selector] - If specified filter for siblings.\n *\n * @see {@link http://api.jquery.com/prevAll/}\n */\nexports.prevAll = function (selector) {\n  if (!this[0]) {\n    return this;\n  }\n  var elems = [];\n\n  this.toArray().forEach(function (elem) {\n    while ((elem = elem.prev)) {\n      if (isTag(elem) && elems.indexOf(elem) === -1) {\n        elems.push(elem);\n      }\n    }\n  });\n\n  return selector\n    ? exports.filter.call(elems, selector, this)\n    : this._make(elems);\n};\n\n/**\n * Gets all the preceding siblings up to but not including the element matched\n * by the selector, optionally filtered by another selector.\n *\n * @example\n *\n * $('.pear').prevUntil('.apple')\n * //=> [<li class=\"orange\">Orange</li>]\n *\n * @param {string|cheerio|node} selector - Selector for element to stop at.\n * @param {string} [filterSelector] - If specified filter for siblings.\n *\n * @see {@link http://api.jquery.com/prevUntil/}\n */\nexports.prevUntil = function (selector, filterSelector) {\n  if (!this[0]) {\n    return this;\n  }\n  var elems = [];\n  var untilNode;\n  var untilNodes;\n\n  if (typeof selector === 'string') {\n    untilNode = select.select(selector, this.prevAll().get(), this.options)[0];\n  } else if (selector && selector.cheerio) {\n    untilNodes = selector.get();\n  } else if (selector) {\n    untilNode = selector;\n  }\n\n  this.toArray().forEach(function (elem) {\n    while ((elem = elem.prev)) {\n      if (\n        (untilNode && elem !== untilNode) ||\n        (untilNodes && untilNodes.indexOf(elem) === -1) ||\n        (!untilNode && !untilNodes)\n      ) {\n        if (isTag(elem) && elems.indexOf(elem) === -1) {\n          elems.push(elem);\n        }\n      } else {\n        break;\n      }\n    }\n  });\n\n  return filterSelector\n    ? exports.filter.call(elems, filterSelector, this)\n    : this._make(elems);\n};\n\n/**\n * Gets the first selected element's siblings, excluding itself.\n *\n * @example\n *\n * $('.pear').siblings().length\n * //=> 2\n *\n * $('.pear').siblings('.orange').length\n * //=> 1\n *\n * @param {string} [selector] - If specified filter for siblings.\n *\n * @see {@link http://api.jquery.com/siblings/}\n */\nexports.siblings = function (selector) {\n  var parent = this.parent();\n\n  var elems = (parent ? parent.children() : this.siblingsAndMe())\n    .toArray()\n    .filter(function (elem) {\n      return isTag(elem) && !this.is(elem);\n    }, this);\n\n  if (selector !== undefined) {\n    return exports.filter.call(elems, selector, this);\n  }\n  return this._make(elems);\n};\n\n/**\n * Gets the children of the first selected element.\n *\n * @example\n *\n * $('#fruits').children().length\n * //=> 3\n *\n * $('#fruits').children('.pear').text()\n * //=> Pear\n *\n * @param {string} [selector] - If specified filter for children.\n *\n * @see {@link http://api.jquery.com/children/}\n */\nexports.children = function (selector) {\n  var elems = this.toArray().reduce(function (newElems, elem) {\n    return newElems.concat(elem.children.filter(isTag));\n  }, []);\n\n  if (selector === undefined) return this._make(elems);\n\n  return exports.filter.call(elems, selector, this);\n};\n\n/**\n * Gets the children of each element in the set of matched elements, including\n * text and comment nodes.\n *\n * @example\n *\n * $('#fruits').contents().length\n * //=> 3\n *\n * @see {@link http://api.jquery.com/contents/}\n */\nexports.contents = function () {\n  var elems = this.toArray().reduce(function (newElems, elem) {\n    return newElems.concat(elem.children);\n  }, []);\n  return this._make(elems);\n};\n\n/**\n * Iterates over a cheerio object, executing a function for each matched\n * element. When the callback is fired, the function is fired in the context of\n * the DOM element, so `this` refers to the current element, which is\n * equivalent to the function parameter `element`. To break out of the `each`\n * loop early, return with `false`.\n *\n * @example\n *\n * const fruits = [];\n *\n * $('li').each(function(i, elem) {\n *   fruits[i] = $(this).text();\n * });\n *\n * fruits.join(', ');\n * //=> Apple, Orange, Pear\n *\n * @param {Function} fn - Function to execute.\n *\n * @see {@link http://api.jquery.com/each/}\n */\nexports.each = function (fn) {\n  var i = 0;\n  var len = this.length;\n  while (i < len && fn.call(this[i], i, this[i]) !== false) ++i;\n  return this;\n};\n\n/**\n * Pass each element in the current matched set through a function, producing a\n * new Cheerio object containing the return values. The function can return an\n * individual data item or an array of data items to be inserted into the\n * resulting set. If an array is returned, the elements inside the array are\n * inserted into the set. If the function returns null or undefined, no element\n * will be inserted.\n *\n * @example\n *\n * $('li').map(function(i, el) {\n *   // this === el\n *   return $(this).text();\n * }).get().join(' ');\n * //=> \"apple orange pear\"\n *\n * @param {Function} fn - Function to execute.\n *\n * @see {@link http://api.jquery.com/map/}\n */\nexports.map = function (fn) {\n  var elems = [];\n  for (var i = 0; i < this.length; i++) {\n    var el = this[i];\n    var val = fn.call(el, i, el);\n    if (val != null) {\n      elems = elems.concat(val);\n    }\n  }\n  return this._make(elems);\n};\n\nfunction getFilterFn(match) {\n  if (typeof match === 'function') {\n    return function (el, i) {\n      return match.call(el, i, el);\n    };\n  } else if (match.cheerio) {\n    return match.is.bind(match);\n  }\n  return function (el) {\n    return match === el;\n  };\n}\n\n/**\n * Iterates over a cheerio object, reducing the set of selector elements to\n * those that match the selector or pass the function's test. When a Cheerio\n * selection is specified, return only the elements contained in that\n * selection. When an element is specified, return only that element (if it is\n * contained in the original selection). If using the function method, the\n * function is executed in the context of the selected element, so `this`\n * refers to the current element.\n *\n * @function\n * @param {string | Function} match - Value to look for, following the rules above.\n * @param {node[]} container - Optional node to filter instead.\n *\n * @example <caption>Selector</caption>\n *\n * $('li').filter('.orange').attr('class');\n * //=> orange\n *\n * @example <caption>Function</caption>\n *\n * $('li').filter(function(i, el) {\n *   // this === el\n *   return $(this).attr('class') === 'orange';\n * }).attr('class')\n * //=> orange\n *\n * @see {@link http://api.jquery.com/filter/}\n */\nexports.filter = function (match, container) {\n  container = container || this;\n  var elements = this.toArray ? this.toArray() : this;\n\n  if (typeof match === 'string') {\n    elements = select.filter(match, elements, container.options);\n  } else {\n    elements = elements.filter(getFilterFn(match));\n  }\n\n  return container._make(elements);\n};\n\n/**\n * Remove elements from the set of matched elements. Given a jQuery object that\n * represents a set of DOM elements, the `.not()` method constructs a new\n * jQuery object from a subset of the matching elements. The supplied selector\n * is tested against each element; the elements that don't match the selector\n * will be included in the result. The `.not()` method can take a function as\n * its argument in the same way that `.filter()` does. Elements for which the\n * function returns true are excluded from the filtered set; all other elements\n * are included.\n *\n * @function\n * @param {string | Function} match - Value to look for, following the rules above.\n * @param {node[]} container - Optional node to filter instead.\n *\n * @example <caption>Selector</caption>\n *\n * $('li').not('.apple').length;\n * //=> 2\n *\n * @example <caption>Function</caption>\n *\n * $('li').not(function(i, el) {\n *   // this === el\n *   return $(this).attr('class') === 'orange';\n * }).length;\n * //=> 2\n *\n * @see {@link http://api.jquery.com/not/}\n */\nexports.not = function (match, container) {\n  container = container || this;\n  var elements = container.toArray ? container.toArray() : container;\n  var matches;\n  var filterFn;\n\n  if (typeof match === 'string') {\n    matches = new Set(select.filter(match, elements, this.options));\n    elements = elements.filter(function (el) {\n      return !matches.has(el);\n    });\n  } else {\n    filterFn = getFilterFn(match);\n    elements = elements.filter(function (el, i) {\n      return !filterFn(el, i);\n    });\n  }\n\n  return container._make(elements);\n};\n\n/**\n * Filters the set of matched elements to only those which have the given DOM\n * element as a descendant or which have a descendant that matches the given\n * selector. Equivalent to `.filter(':has(selector)')`.\n *\n * @example <caption>Selector</caption>\n *\n * $('ul').has('.pear').attr('id');\n * //=> fruits\n *\n * @example <caption>Element</caption>\n *\n * $('ul').has($('.pear')[0]).attr('id');\n * //=> fruits\n *\n * @param {string|cheerio|node} selectorOrHaystack - Element to look for.\n *\n * @see {@link http://api.jquery.com/has/}\n */\nexports.has = function (selectorOrHaystack) {\n  var that = this;\n  return exports.filter.call(this, function () {\n    return that._make(this).find(selectorOrHaystack).length > 0;\n  });\n};\n\n/**\n * Will select the first element of a cheerio object.\n *\n * @example\n *\n * $('#fruits').children().first().text()\n * //=> Apple\n *\n * @see {@link http://api.jquery.com/first/}\n */\nexports.first = function () {\n  return this.length > 1 ? this._make(this[0]) : this;\n};\n\n/**\n * Will select the last element of a cheerio object.\n *\n * @example\n *\n * $('#fruits').children().last().text()\n * //=> Pear\n *\n * @see {@link http://api.jquery.com/last/}\n */\nexports.last = function () {\n  return this.length > 1 ? this._make(this[this.length - 1]) : this;\n};\n\n/**\n * Reduce the set of matched elements to the one at the specified index. Use\n * `.eq(-i)` to count backwards from the last selected element.\n *\n * @example\n *\n * $('li').eq(0).text()\n * //=> Apple\n *\n * $('li').eq(-1).text()\n * //=> Pear\n *\n * @param {number} i - Index of the element to select.\n *\n * @see {@link http://api.jquery.com/eq/}\n */\nexports.eq = function (i) {\n  i = +i;\n\n  // Use the first identity optimization if possible\n  if (i === 0 && this.length <= 1) return this;\n\n  if (i < 0) i = this.length + i;\n  return this[i] ? this._make(this[i]) : this._make([]);\n};\n\n/**\n * Retrieve the DOM elements matched by the Cheerio object. If an index is\n * specified, retrieve one of the elements matched by the Cheerio object.\n *\n * @example\n *\n * $('li').get(0).tagName\n * //=> li\n *\n * If no index is specified, retrieve all elements matched by the Cheerio object:\n *\n * @example\n *\n * $('li').get().length\n * //=> 3\n *\n * @param {number} [i] - Element to retrieve.\n *\n * @see {@link http://api.jquery.com/get/}\n */\nexports.get = function (i) {\n  if (i == null) {\n    return Array.prototype.slice.call(this);\n  }\n  return this[i < 0 ? this.length + i : i];\n};\n\n/**\n * Search for a given element from among the matched elements.\n *\n * @example\n *\n * $('.pear').index()\n * //=> 2\n * $('.orange').index('li')\n * //=> 1\n * $('.apple').index($('#fruit, li'))\n * //=> 1\n *\n * @param {string|cheerio|node} [selectorOrNeedle] - Element to look for.\n *\n * @see {@link http://api.jquery.com/index/}\n */\nexports.index = function (selectorOrNeedle) {\n  var $haystack;\n  var needle;\n\n  if (arguments.length === 0) {\n    $haystack = this.parent().children();\n    needle = this[0];\n  } else if (typeof selectorOrNeedle === 'string') {\n    $haystack = this._make(selectorOrNeedle);\n    needle = this[0];\n  } else {\n    $haystack = this;\n    needle = selectorOrNeedle.cheerio ? selectorOrNeedle[0] : selectorOrNeedle;\n  }\n\n  return $haystack.get().indexOf(needle);\n};\n\n/**\n * Gets the elements matching the specified range.\n *\n * @example\n *\n * $('li').slice(1).eq(0).text()\n * //=> 'Orange'\n *\n * $('li').slice(1, 2).length\n * //=> 1\n *\n * @see {@link http://api.jquery.com/slice/}\n */\nexports.slice = function () {\n  return this._make([].slice.apply(this, arguments));\n};\n\nfunction traverseParents(self, elem, selector, limit) {\n  var elems = [];\n  while (elem && elems.length < limit && elem.type !== 'root') {\n    if (!selector || exports.filter.call([elem], selector, self).length) {\n      elems.push(elem);\n    }\n    elem = elem.parent;\n  }\n  return elems;\n}\n\n/**\n * End the most recent filtering operation in the current chain and return the\n * set of matched elements to its previous state.\n *\n * @example\n *\n * $('li').eq(0).end().length\n * //=> 3\n *\n * @see {@link http://api.jquery.com/end/}\n */\nexports.end = function () {\n  return this.prevObject || this._make([]);\n};\n\n/**\n * Add elements to the set of matched elements.\n *\n * @example\n *\n * $('.apple').add('.orange').length\n * //=> 2\n *\n * @param {string|cheerio} other - Elements to add.\n * @param {cheerio} [context] - Optionally the context of the new selection.\n *\n * @see {@link http://api.jquery.com/add/}\n */\nexports.add = function (other, context) {\n  var selection = this._make(other, context);\n  var contents = uniqueSort(selection.get().concat(this.get()));\n\n  for (var i = 0; i < contents.length; ++i) {\n    selection[i] = contents[i];\n  }\n  selection.length = contents.length;\n\n  return selection;\n};\n\n/**\n * Add the previous set of elements on the stack to the current set, optionally\n * filtered by a selector.\n *\n * @example\n *\n * $('li').eq(0).addBack('.orange').length\n * //=> 2\n *\n * @param {string} selector - Selector for the elements to add.\n *\n * @see {@link http://api.jquery.com/addBack/}\n */\nexports.addBack = function (selector) {\n  return this.add(\n    arguments.length ? this.prevObject.filter(selector) : this.prevObject\n  );\n};\n"]},"metadata":{},"sourceType":"script"}