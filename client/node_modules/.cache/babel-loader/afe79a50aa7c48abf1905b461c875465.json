{"ast":null,"code":"/**\n * profiler.js: TODO: add file header description.\n *\n * (C) 2010 Charlie Robbins\n * MIT LICENCE\n */\n'use strict';\n/**\n * TODO: add class description.\n * @type {Profiler}\n * @private\n */\n\nfunction _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nmodule.exports = /*#__PURE__*/function () {\n  /**\n   * Constructor function for the Profiler instance used by\n   * `Logger.prototype.startTimer`. When done is called the timer will finish\n   * and log the duration.\n   * @param {!Logger} logger - TODO: add param description.\n   * @private\n   */\n  function Profiler(logger) {\n    _classCallCheck(this, Profiler);\n\n    if (!logger) {\n      throw new Error('Logger is required for profiling.');\n    }\n\n    this.logger = logger;\n    this.start = Date.now();\n  }\n  /**\n   * Ends the current timer (i.e. Profiler) instance and logs the `msg` along\n   * with the duration since creation.\n   * @returns {mixed} - TODO: add return description.\n   * @private\n   */\n\n\n  _createClass(Profiler, [{\n    key: \"done\",\n    value: function done() {\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      if (typeof args[args.length - 1] === 'function') {\n        // eslint-disable-next-line no-console\n        console.warn('Callback function no longer supported as of winston@3.0.0');\n        args.pop();\n      }\n\n      var info = _typeof(args[args.length - 1]) === 'object' ? args.pop() : {};\n      info.level = info.level || 'info';\n      info.durationMs = Date.now() - this.start;\n      return this.logger.write(info);\n    }\n  }]);\n\n  return Profiler;\n}();","map":{"version":3,"sources":["/home/conrad/Documents/tarot/tarot-cards/node_modules/winston/dist/winston/profiler.js"],"names":["_typeof","obj","Symbol","iterator","constructor","prototype","_classCallCheck","instance","Constructor","TypeError","_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","_createClass","protoProps","staticProps","module","exports","Profiler","logger","Error","start","Date","now","value","done","_len","arguments","args","Array","_key","console","warn","pop","info","level","durationMs","write"],"mappings":"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","sourcesContent":["/**\n * profiler.js: TODO: add file header description.\n *\n * (C) 2010 Charlie Robbins\n * MIT LICENCE\n */\n'use strict';\n/**\n * TODO: add class description.\n * @type {Profiler}\n * @private\n */\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nmodule.exports = /*#__PURE__*/function () {\n  /**\n   * Constructor function for the Profiler instance used by\n   * `Logger.prototype.startTimer`. When done is called the timer will finish\n   * and log the duration.\n   * @param {!Logger} logger - TODO: add param description.\n   * @private\n   */\n  function Profiler(logger) {\n    _classCallCheck(this, Profiler);\n\n    if (!logger) {\n      throw new Error('Logger is required for profiling.');\n    }\n\n    this.logger = logger;\n    this.start = Date.now();\n  }\n  /**\n   * Ends the current timer (i.e. Profiler) instance and logs the `msg` along\n   * with the duration since creation.\n   * @returns {mixed} - TODO: add return description.\n   * @private\n   */\n\n\n  _createClass(Profiler, [{\n    key: \"done\",\n    value: function done() {\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      if (typeof args[args.length - 1] === 'function') {\n        // eslint-disable-next-line no-console\n        console.warn('Callback function no longer supported as of winston@3.0.0');\n        args.pop();\n      }\n\n      var info = _typeof(args[args.length - 1]) === 'object' ? args.pop() : {};\n      info.level = info.level || 'info';\n      info.durationMs = Date.now() - this.start;\n      return this.logger.write(info);\n    }\n  }]);\n\n  return Profiler;\n}();"]},"metadata":{},"sourceType":"script"}