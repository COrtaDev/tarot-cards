{"ast":null,"code":"/* eslint max-len: [\"error\", { \"code\": 150 }] */\n\n/**\n * Defines bot API\n */\n'use strict';\n\nconst Api = require('./api'),\n      _ = require('underscore'),\n      async = require('async'),\n      fs = require('fs'),\n      querystring = require('querystring'),\n      // the upper limit for bots (will be reduced by MW for users without a bot right)\nAPI_LIMIT = 5000; // get the object being the first key/value entry of a given object\n\n\nfunction getFirstItem(obj) {\n  const key = Object.keys(obj).shift();\n  return obj[key];\n} // bot public API\n\n\nfunction Bot(params) {\n  let env = process.env,\n      options; // read configuration from the file\n\n  if (typeof params === 'string') {\n    let configFile, configParsed;\n\n    try {\n      configFile = fs.readFileSync(params, 'utf-8');\n      configParsed = JSON.parse(configFile);\n    } catch (e) {\n      throw new Error(`Loading config failed: ${e.message}`);\n    }\n\n    if (typeof configParsed === 'object') {\n      options = configParsed;\n    }\n  } else if (typeof params === 'object') {\n    // configuration provided as an object\n    options = params;\n  }\n\n  if (!params) {\n    throw new Error('No configuration was provided!');\n  }\n\n  this.protocol = options.protocol;\n  this.server = options.server;\n  const protocol = options.protocol || 'http';\n  this.api = new Api({\n    protocol,\n    port: options.port,\n    server: options.server,\n    path: options.path || '',\n    proxy: options.proxy,\n    userAgent: options.userAgent,\n    concurrency: options.concurrency,\n    debug: options.debug === true || env.DEBUG === '1'\n  });\n  this.version = this.api.version; // store options\n\n  this.options = options; // in dry-run mode? (issue #48)\n\n  this.dryRun = options.dryRun === true || env.DRY_RUN === '1';\n\n  if (this.dryRun) {\n    this.log('Running in dry-run mode');\n  } // bind provider-specific \"namespaces\"\n\n\n  this.wikia.call = this.wikia.call.bind(this);\n}\n\nBot.prototype = {\n  log() {\n    this.api.info.apply(this.api, arguments);\n  },\n\n  logData(obj) {\n    this.log(JSON.stringify(obj, undefined, 2));\n  },\n\n  error() {\n    this.api.error.apply(this.api, arguments);\n  },\n\n  getConfig(key, def) {\n    return this.options[key] || def;\n  },\n\n  setConfig(key, val) {\n    this.options[key] = val;\n  },\n\n  getRand() {\n    return Math.random().toString().split('.').pop();\n  },\n\n  getAll(params, key, callback) {\n    let res = [],\n        // @see https://www.mediawiki.org/wiki/API:Query#Continuing_queries\n    continueParams = {\n      continue: ''\n    };\n    async.whilst(cb => {\n      cb(null, true);\n    }, // run as long as there's more data\n    cb => {\n      this.api.call(_.extend(params, continueParams), (err, data, next) => {\n        if (err) {\n          cb(err);\n        } else {\n          // append batch data\n          const batchData = typeof key === 'function' ? key(data) : data[key];\n          res = res.concat(batchData); // more pages?\n\n          continueParams = next;\n          cb(next ? null : true);\n        }\n      });\n    }, err => {\n      if (err instanceof Error) {\n        callback(err);\n      } else {\n        callback(null, res);\n      }\n    });\n  },\n\n  logIn(username, password, callback\n  /* or just callback */\n  ) {\n    // assign domain if applicable\n    let domain = this.options.domain || ''; // username and password params can be omitted\n\n    if (typeof username !== 'string') {\n      callback = username; // use data from config\n\n      username = this.options.username;\n      password = this.options.password;\n    }\n\n    this.log('Obtaining login token...');\n\n    const logInCallback = (err, data) => {\n      if (data === null || typeof data === 'undefined') {\n        this.error('Logging in failed: no data received');\n        callback(err || new Error('Logging in failed: no data received'));\n      } else if (!err && typeof data.lgusername !== 'undefined') {\n        this.log(`Logged in as ${data.lgusername}`);\n        callback(null, data);\n      } else if (typeof data.reason === 'undefined') {\n        this.error('Logging in failed');\n        this.error(data.result);\n        callback(err || new Error(`Logging in failed: ${data.result}`));\n      } else {\n        this.error('Logging in failed');\n        this.error(data.result);\n        this.error(data.reason);\n        callback(err || new Error(`Logging in failed: ${data.result} - ${data.reason}`));\n      }\n    }; // request a token\n\n\n    this.api.call({\n      action: 'login',\n      lgname: username,\n      lgpassword: password,\n      lgdomain: domain\n    }, (err, data) => {\n      if (err) {\n        callback(err);\n        return;\n      }\n\n      if (data.result === 'NeedToken') {\n        const token = data.token;\n        this.log(`Got token ${token}`); // log in using a token\n\n        this.api.call({\n          action: 'login',\n          lgname: username,\n          lgpassword: password,\n          lgtoken: token,\n          lgdomain: domain\n        }, logInCallback, 'POST');\n      } else {\n        logInCallback(err, data);\n      }\n    }, 'POST');\n  },\n\n  getCategories(prefix, callback) {\n    if (typeof prefix === 'function') {\n      callback = prefix;\n    }\n\n    this.getAll({\n      action: 'query',\n      list: 'allcategories',\n      acprefix: prefix || '',\n      aclimit: API_LIMIT\n    }, data => data.allcategories.map(cat => cat['*']), callback);\n  },\n\n  getUsers(data, callback) {\n    if (typeof data === 'function') {\n      callback = data;\n    }\n\n    data = data || {};\n    this.api.call({\n      action: 'query',\n      list: 'allusers',\n      auprefix: data.prefix || '',\n      auwitheditsonly: data.witheditsonly || false,\n      aulimit: API_LIMIT\n    }, function (err, _data) {\n      callback(err, _data && _data.allusers || []);\n    });\n  },\n\n  getAllPages(callback) {\n    this.log('Getting all pages...');\n    this.getAll({\n      action: 'query',\n      list: 'allpages',\n      apfilterredir: 'nonredirects',\n      // do not include redirects\n      aplimit: API_LIMIT\n    }, 'allpages', callback);\n  },\n\n  getPagesInCategory(category, callback) {\n    category = `Category:${category}`;\n    this.log(`Getting pages from ${category}...`);\n    this.getAll({\n      action: 'query',\n      list: 'categorymembers',\n      cmtitle: category,\n      cmlimit: API_LIMIT\n    }, 'categorymembers', callback);\n  },\n\n  getPagesInNamespace(namespace, callback) {\n    this.log(`Getting pages in namespace ${namespace}`);\n    this.getAll({\n      action: 'query',\n      list: 'allpages',\n      apnamespace: namespace,\n      apfilterredir: 'nonredirects',\n      // do not include redirects\n      aplimit: API_LIMIT\n    }, 'allpages', callback);\n  },\n\n  getPagesByPrefix(prefix, callback) {\n    this.log(`Getting pages by ${prefix} prefix...`);\n    this.api.call({\n      action: 'query',\n      list: 'allpages',\n      apprefix: prefix,\n      aplimit: API_LIMIT\n    }, function (err, data) {\n      callback(err, data && data.allpages || []);\n    });\n  },\n\n  getPagesTranscluding(template, callback) {\n    this.log(`Getting pages from ${template}...`);\n    this.getAll({\n      action: 'query',\n      prop: 'transcludedin',\n      titles: template\n    }, data => getFirstItem(getFirstItem(data)).transcludedin, callback);\n  },\n\n  getArticle(title, redirect, callback) {\n    let params = {\n      action: 'query',\n      prop: 'revisions',\n      rvprop: 'content',\n      rand: this.getRand()\n    };\n\n    if (typeof redirect === 'function') {\n      callback = redirect;\n      redirect = undefined;\n    } // @see https://www.mediawiki.org/wiki/API:Query#Resolving_redirects\n\n\n    if (redirect === true) {\n      params.redirects = '';\n    } // both page ID or title can be provided\n\n\n    if (typeof title === 'number') {\n      this.log(`Getting content of article #${title}...`);\n      params.pageids = title;\n    } else {\n      this.log(`Getting content of ${title}...`);\n      params.titles = title;\n    }\n\n    this.api.call(params, function (err, data) {\n      if (err) {\n        callback(err);\n        return;\n      }\n\n      const page = getFirstItem(data.pages),\n            revision = page.revisions && page.revisions.shift(),\n            content = revision && revision['*'],\n            redirectInfo = data.redirects && data.redirects.shift() || undefined;\n      callback(null, content, redirectInfo);\n    });\n  },\n\n  getArticleRevisions(title, callback) {\n    const params = {\n      action: 'query',\n      prop: 'revisions',\n      rvprop: ['ids', 'timestamp', 'size', 'flags', 'comment', 'user'].join('|'),\n      rvdir: 'newer',\n      // order by timestamp asc\n      rvlimit: API_LIMIT\n    }; // both page ID or title can be provided\n\n    if (typeof title === 'number') {\n      this.log(`Getting revisions of article #${title}...`);\n      params.pageids = title;\n    } else {\n      this.log(`Getting revisions of ${title}...`);\n      params.titles = title;\n    }\n\n    this.getAll(params, function (batch) {\n      const page = getFirstItem(batch.pages);\n      return page.revisions;\n    }, callback);\n  },\n\n  getArticleCategories(title, callback) {\n    this.api.call({\n      action: 'query',\n      prop: 'categories',\n      cllimit: API_LIMIT,\n      titles: title\n    }, function (err, data) {\n      if (err) {\n        callback(err);\n        return;\n      }\n\n      if (data === null) {\n        callback(new Error(`\"${title}\" page does not exist`));\n        return;\n      }\n\n      const page = getFirstItem(data.pages);\n      callback(null, (page.categories || []).map(cat => // { ns: 14, title: 'Kategoria:XX wiek' }\n      cat.title));\n    });\n  },\n\n  search(keyword, callback) {\n    this.getAll({\n      action: 'query',\n      list: 'search',\n      srsearch: keyword,\n      srprop: 'timestamp',\n      srlimit: 5000\n    }, 'search', callback);\n  },\n\n  // get token required to perform a given action\n  getToken(title, action, callback) {\n    this.log(`Getting ${action} token (for ${title})...`);\n    this.getMediaWikiVersion((err, version) => {\n      let compare = require('node-version-compare'),\n          params,\n          useTokenApi = compare(version, '1.24.0') > -1; // @see https://www.mediawiki.org/wiki/API:Tokens (for MW 1.24+)\n\n\n      if (useTokenApi) {\n        params = {\n          action: 'query',\n          meta: 'tokens',\n          type: 'csrf'\n        };\n      } else {\n        params = {\n          action: 'query',\n          prop: 'info',\n          intoken: action,\n          titles: title\n        };\n      }\n\n      this.api.call(params, (_err, data, next, raw) => {\n        let token;\n\n        if (_err) {\n          callback(_err);\n          return;\n        }\n\n        if (useTokenApi) {\n          token = data.tokens.csrftoken.toString(); // MW 1.24+\n        } else {\n          token = getFirstItem(data.pages)[action + 'token']; // older MW version\n        }\n\n        if (!token) {\n          const msg = raw.warnings.info['*'];\n          this.log(`getToken: ${msg}`);\n          err = new Error(`Can't get \"${action}\" token for \"${title}\" page - ${msg}`);\n          token = undefined;\n        }\n\n        callback(err, token);\n      });\n    });\n  },\n\n  // this should only be used internally (see #84)\n  doEdit(type, title, summary, params, callback) {\n    if (this.dryRun) {\n      callback(new Error('In dry-run mode'));\n      return;\n    } // @see http://www.mediawiki.org/wiki/API:Edit\n\n\n    this.getToken(title, 'edit', (err, token) => {\n      if (err) {\n        callback(err);\n        return;\n      }\n\n      this.log(`Editing '${title}' with a summary '${summary}' (${type})...`);\n\n      const editParams = _.extend({\n        action: 'edit',\n        bot: '',\n        title,\n        summary\n      }, params, {\n        token\n      });\n\n      this.api.call(editParams, (_err, data) => {\n        if (!_err && data.result && data.result === 'Success') {\n          this.log('Rev #%d created for \\'%s\\'', data.newrevid, data.title);\n          callback(null, data);\n        } else {\n          callback(_err || data);\n        }\n      }, 'POST');\n    });\n  },\n\n  edit(title, content, summary, minor, callback) {\n    let params = {\n      text: content\n    };\n\n    if (typeof minor === 'function') {\n      callback = minor;\n      minor = undefined;\n    }\n\n    if (minor) {\n      params.minor = '';\n    } else {\n      params.notminor = '';\n    }\n\n    this.doEdit('edit', title, summary, params, callback);\n  },\n\n  append(title, content, summary, callback) {\n    let params = {\n      appendtext: content\n    };\n    this.doEdit('append', title, summary, params, callback);\n  },\n\n  prepend(title, content, summary, callback) {\n    let params = {\n      prependtext: content\n    };\n    this.doEdit('prepend', title, summary, params, callback);\n  },\n\n  addFlowTopic(title, subject, content, callback) {\n    if (this.dryRun) {\n      callback(new Error('In dry-run mode'));\n      return;\n    } // @see http://www.mediawiki.org/wiki/API:Flow\n\n\n    this.getToken(title, 'flow', (err, token) => {\n      if (err) {\n        callback(err);\n        return;\n      }\n\n      this.log(`Adding a topic to page '${title}' with subject '${subject}'...`);\n      const params = {\n        action: 'flow',\n        submodule: 'new-topic',\n        page: title,\n        nttopic: subject,\n        ntcontent: content,\n        ntformat: 'wikitext',\n        bot: '',\n        token: token\n      };\n      this.api.call(params, (_err, data) => {\n        if (!_err && data['new-topic'] && data['new-topic'].status && data['new-topic'].status === 'ok') {\n          this.log('Workflow \\'%s\\' created on \\'%s\\'', data['new-topic'].workflow, title);\n          callback(null, data);\n        } else {\n          callback(_err);\n        }\n      }, 'POST');\n    });\n  },\n\n  'delete'(title, reason, callback) {\n    if (this.dryRun) {\n      callback(new Error('In dry-run mode'));\n      return;\n    } // @see http://www.mediawiki.org/wiki/API:Delete\n\n\n    this.getToken(title, 'delete', (err, token) => {\n      if (err) {\n        callback(err);\n        return;\n      }\n\n      this.log('Deleting \\'%s\\' because \\'%s\\'...', title, reason);\n      this.api.call({\n        action: 'delete',\n        title,\n        reason,\n        token\n      }, (_err, data) => {\n        if (!_err && data.title && data.reason) {\n          callback(null, data);\n        } else {\n          callback(_err);\n        }\n      }, 'POST');\n    });\n  },\n\n  purge(titles, callback) {\n    // @see https://www.mediawiki.org/wiki/API:Purge\n    const params = {\n      action: 'purge'\n    };\n\n    if (this.dryRun) {\n      callback(new Error('In dry-run mode'));\n      return;\n    }\n\n    if (typeof titles === 'string' && titles.indexOf('Category:') === 0) {\n      // @see https://docs.moodle.org/archive/pl/api.php?action=help&modules=purge\n      // @see https://docs.moodle.org/archive/pl/api.php?action=help&modules=query%2Bcategorymembers\n      // since MW 1.21 - @see https://github.com/wikimedia/mediawiki/commit/62216932c197f1c248ca2d95bc230f87a79ccd71\n      this.log('Purging all articles in category \\'%s\\'...', titles);\n      params.generator = 'categorymembers';\n      params.gcmtitle = titles;\n    } else {\n      // cast a single item to an array\n      titles = Array.isArray(titles) ? titles : [titles]; // both page IDs or titles can be provided\n\n      if (typeof titles[0] === 'number') {\n        this.log('Purging the list of article IDs: #%s...', titles.join(', #'));\n        params.pageids = titles.join('|');\n      } else {\n        this.log('Purging the list of articles: \\'%s\\'...', titles.join('\\', \\''));\n        params.titles = titles.join('|');\n      }\n    }\n\n    this.api.call(params, (err, data) => {\n      if (!err) {\n        data.forEach(page => {\n          if (typeof page.purged !== 'undefined') {\n            this.log('Purged \"%s\"', page.title);\n          }\n        });\n      }\n\n      callback(err, data);\n    }, 'POST');\n  },\n\n  sendEmail(username, subject, text, callback) {\n    if (this.dryRun) {\n      callback(new Error('In dry-run mode'));\n      return;\n    } // @see http://www.mediawiki.org/wiki/API:Email\n\n\n    this.getToken(`User:${username}`, 'email', (err, token) => {\n      if (err) {\n        callback(err);\n        return;\n      }\n\n      this.log('Sending an email to \\'%s\\' with subject \\'%s\\'...', username, subject);\n      this.api.call({\n        action: 'emailuser',\n        target: username,\n        subject,\n        text,\n        ccme: '',\n        token\n      }, (_err, data) => {\n        if (!_err && data.result && data.result === 'Success') {\n          this.log('Email sent');\n          callback(null, data);\n        } else {\n          callback(_err);\n        }\n      }, 'POST');\n    });\n  },\n\n  getUserContribs(options, callback) {\n    options = options || {};\n    this.api.call({\n      action: 'query',\n      list: 'usercontribs',\n      ucuser: options.user,\n      ucstart: options.start,\n      uclimit: API_LIMIT,\n      ucnamespace: options.namespace || ''\n    }, function (err, data, next) {\n      callback(err, data && data.usercontribs || [], next && next.ucstart || false);\n    });\n  },\n\n  whoami(callback) {\n    // @see http://www.mediawiki.org/wiki/API:Meta#userinfo_.2F_ui\n    const props = ['groups', 'rights', 'ratelimits', 'editcount', 'realname', 'email'];\n    this.api.call({\n      action: 'query',\n      meta: 'userinfo',\n      uiprop: props.join('|')\n    }, function (err, data) {\n      if (!err && data && data.userinfo) {\n        callback(null, data.userinfo);\n      } else {\n        callback(err);\n      }\n    });\n  },\n\n  whois(username, callback) {\n    this.whoare([username], function (err, usersinfo) {\n      callback(err, usersinfo && usersinfo[0]);\n    });\n  },\n\n  whoare(usernames, callback) {\n    // @see https://www.mediawiki.org/wiki/API:Users\n    const props = ['blockinfo', 'groups', 'implicitgroups', 'rights', 'editcount', 'registration', 'emailable', 'gender'];\n    this.api.call({\n      action: 'query',\n      list: 'users',\n      ususers: usernames.join('|'),\n      usprop: props.join('|')\n    }, function (err, data) {\n      if (!err && data && data.users) {\n        callback(null, data.users);\n      } else {\n        callback(err);\n      }\n    });\n  },\n\n  createAccount(username, password, callback) {\n    // @see https://www.mediawiki.org/wiki/API:Account_creation\n    this.log(`creating account ${username}`);\n    this.api.call({\n      action: 'query',\n      meta: 'tokens',\n      type: 'createaccount'\n    }, (err, data) => {\n      this.api.call({\n        action: 'createaccount',\n        createreturnurl: `${this.api.protocol}://${this.api.server}:${this.api.port}/`,\n        createtoken: data.tokens.createaccounttoken,\n        username: username,\n        password: password,\n        retype: password\n      }, (_err, _data) => {\n        if (_err) {\n          callback(_err);\n          return;\n        }\n\n        callback(_data);\n      }, 'POST');\n    });\n  },\n\n  move(from, to, summary, callback) {\n    if (this.dryRun) {\n      callback(new Error('In dry-run mode'));\n      return;\n    } // @see http://www.mediawiki.org/wiki/API:Move\n\n\n    this.getToken(from, 'move', (err, token) => {\n      if (err) {\n        callback(err);\n        return;\n      }\n\n      this.log('Moving \\'%s\\' to \\'%s\\' because \\'%s\\'...', from, to, summary);\n      this.api.call({\n        action: 'move',\n        from,\n        to,\n        bot: '',\n        reason: summary,\n        token\n      }, (_err, data) => {\n        if (!_err && data.from && data.to && data.reason) {\n          callback(null, data);\n        } else {\n          callback(_err);\n        }\n      }, 'POST');\n    });\n  },\n\n  getImages(start, callback) {\n    this.api.call({\n      action: 'query',\n      list: 'allimages',\n      aifrom: start,\n      ailimit: API_LIMIT\n    }, function (err, data, next) {\n      callback(err, data && data.allimages || [], next && next.aifrom || false);\n    });\n  },\n\n  getImagesFromArticle(title, callback) {\n    this.api.call({\n      action: 'query',\n      prop: 'images',\n      titles: title\n    }, function (err, data) {\n      const page = getFirstItem(data && data.pages || []);\n      callback(err, page && page.images || []);\n    });\n  },\n\n  getImagesFromArticleWithOptions(title, options, callback) {\n    let requestOptions = {\n      action: 'query',\n      prop: 'images',\n      titles: title\n    };\n\n    if (!options || typeof options !== 'object') {\n      callback(new Error('Incorrect options parameter'));\n    }\n\n    Object.keys(options).forEach(function (x) {\n      requestOptions[x] = options[x];\n    });\n    this.api.call(requestOptions, function (err, data) {\n      const page = getFirstItem(data && data.pages || []);\n      callback(err, page && page.images || []);\n    });\n  },\n\n  getImageUsage(filename, callback) {\n    this.api.call({\n      action: 'query',\n      list: 'imageusage',\n      iutitle: filename,\n      iulimit: API_LIMIT\n    }, function (err, data) {\n      callback(err, data && data.imageusage || []);\n    });\n  },\n\n  getImageInfo(filename, callback) {\n    const props = ['timestamp', 'user', 'metadata', 'size', 'url'];\n    this.api.call({\n      action: 'query',\n      titles: filename,\n      prop: 'imageinfo',\n      iiprop: props.join('|')\n    }, function (err, data) {\n      const image = getFirstItem(data && data.pages || []),\n            imageinfo = image && image.imageinfo && image.imageinfo[0]; // process EXIF metadata into key / value structure\n\n      if (!err && imageinfo && imageinfo.metadata) {\n        imageinfo.exif = {};\n        imageinfo.metadata.forEach(function (entry) {\n          imageinfo.exif[entry.name] = entry.value;\n        });\n      }\n\n      callback(err, imageinfo);\n    });\n  },\n\n  getLog(type, start, callback) {\n    let params = {\n      action: 'query',\n      list: 'logevents',\n      lestart: start,\n      lelimit: API_LIMIT\n    };\n\n    if (type.indexOf('/') > 0) {\n      // Filter log entries to only this type.\n      params.leaction = type;\n    } else {\n      // Filter log actions to only this action. Overrides letype. In the list of possible values,\n      // values with the asterisk wildcard such as action/* can have different strings after the slash (/).\n      params.letype = type;\n    }\n\n    this.api.call(params, function (err, data, next) {\n      if (next && next.lecontinue) {\n        // 20150101124329|22700494\n        next = next.lecontinue.split('|').shift();\n      }\n\n      callback(err, data && data.logevents || [], next);\n    });\n  },\n\n  expandTemplates(text, title, callback) {\n    this.api.call({\n      action: 'expandtemplates',\n      text,\n      title,\n      generatexml: 1\n    }, function (err, data, next, raw) {\n      const xml = getFirstItem(raw.parsetree);\n      callback(err, xml);\n    }, 'POST');\n  },\n\n  parse(text, title, callback) {\n    this.api.call({\n      action: 'parse',\n      text,\n      title,\n      contentmodel: 'wikitext',\n      generatexml: 1\n    }, function (err, data, next, raw) {\n      if (err) {\n        callback(err);\n        return;\n      }\n\n      const xml = getFirstItem(raw.parse.text),\n            images = raw.parse.images;\n      callback(err, xml, images);\n    }, 'POST');\n  },\n\n  getRecentChanges(start, callback) {\n    const props = ['title', 'timestamp', 'comments', 'user', 'flags', 'sizes'];\n    this.api.call({\n      action: 'query',\n      list: 'recentchanges',\n      rcprop: props.join('|'),\n      rcstart: start || '',\n      rclimit: API_LIMIT\n    }, function (err, data, next) {\n      callback(err, data && data.recentchanges || [], next && next.rcstart || false);\n    });\n  },\n\n  getSiteInfo(props, callback) {\n    // @see http://www.mediawiki.org/wiki/API:Siteinfo\n    if (typeof props === 'string') {\n      props = [props];\n    }\n\n    this.api.call({\n      action: 'query',\n      meta: 'siteinfo',\n      siprop: props.join('|')\n    }, function (err, data) {\n      callback(err, data);\n    });\n  },\n\n  getSiteStats(callback) {\n    const prop = 'statistics';\n    this.getSiteInfo(prop, function (err, info) {\n      callback(err, info && info[prop]);\n    });\n  },\n\n  getMediaWikiVersion(callback) {\n    // cache it for each instance of the client\n    // we will call it multiple times for features detection\n    if (typeof this._mwVersion !== 'undefined') {\n      // eslint-disable-line no-underscore-dangle\n      callback(null, this._mwVersion); // eslint-disable-line no-underscore-dangle\n\n      return;\n    }\n\n    this.getSiteInfo(['general'], (err, info) => {\n      let version;\n\n      if (err) {\n        callback(err);\n        return;\n      }\n\n      version = info && info.general && info.general.generator; // e.g. \"MediaWiki 1.27.0-wmf.19\"\n\n      version = version.match(/[\\d.]+/)[0]; // 1.27.0\n\n      this.log('Detected MediaWiki v%s', version); // cache it\n\n      this._mwVersion = version; // eslint-disable-line no-underscore-dangle\n\n      callback(null, this._mwVersion); // eslint-disable-line no-underscore-dangle\n    });\n  },\n\n  getQueryPage(queryPage, callback) {\n    // @see http://www.mediawiki.org/wiki/API:Querypage\n    this.api.call({\n      action: 'query',\n      list: 'querypage',\n      qppage: queryPage,\n      qplimit: API_LIMIT\n    }, (err, data) => {\n      if (!err && data && data.querypage) {\n        this.log('%s data was generated %s', queryPage, data.querypage.cachedtimestamp);\n        callback(null, data.querypage.results || []);\n      } else {\n        callback(err, []);\n      }\n    });\n  },\n\n  upload(filename, content, extraParams, callback) {\n    let params = {\n      action: 'upload',\n      ignorewarnings: '',\n      filename,\n      file: typeof content === 'string' ? Buffer.from(content, 'binary') : content,\n      text: ''\n    };\n\n    if (this.dryRun) {\n      callback(new Error('In dry-run mode'));\n      return;\n    }\n\n    if (typeof extraParams === 'object') {\n      params = _.extend(params, extraParams);\n    } else {\n      // it's summary (comment)\n      params.comment = extraParams;\n    } // @see http://www.mediawiki.org/wiki/API:Upload\n\n\n    this.getToken(`File:${filename}`, 'edit', (err, token) => {\n      if (err) {\n        callback(err);\n        return;\n      }\n\n      this.log('Uploading %s kB as File:%s...', (content.length / 1024).toFixed(2), filename);\n      params.token = token;\n      this.api.call(params, (_err, data) => {\n        if (data && data.result && data.result === 'Success') {\n          this.log('Uploaded as <%s>', data.imageinfo.descriptionurl);\n          callback(null, data);\n        } else {\n          callback(_err);\n        }\n      }, 'UPLOAD'\n      /* fake method to set a proper content type for file uploads */\n      );\n    });\n  },\n\n  uploadByUrl(filename, url, summary, callback) {\n    this.api.fetchUrl(url, (error, content) => {\n      if (error) {\n        callback(error, content);\n        return;\n      }\n\n      this.upload(filename, content, summary, callback);\n    }, 'binary'\n    /* use binary-safe fetch */\n    );\n  },\n\n  // Wikia-specific API entry-point\n  uploadVideo(fileName, url, callback) {\n    const parseVideoUrl = require('./utils').parseVideoUrl;\n\n    const parsed = parseVideoUrl(url);\n\n    if (parsed === null) {\n      callback(new Error('Not supported URL provided'));\n      return;\n    }\n\n    let provider = parsed[0],\n        videoId = parsed[1];\n    this.getToken(`File:${fileName}`, 'edit', (err, token) => {\n      if (err) {\n        callback(err);\n        return;\n      }\n\n      this.log('Uploading <%s> (%s provider with video ID %s)', url, provider, videoId);\n      this.api.call({\n        action: 'addmediapermanent',\n        title: fileName,\n        provider: provider,\n        videoId: videoId,\n        token: token\n      }, callback, 'POST'\n      /* The addmediapermanent module requires a POST request */\n      );\n    });\n  },\n\n  getExternalLinks(title, callback) {\n    this.api.call({\n      action: 'query',\n      prop: 'extlinks',\n      titles: title,\n      ellimit: API_LIMIT\n    }, function (err, data) {\n      callback(err, data && getFirstItem(data.pages).extlinks || []);\n    });\n  },\n\n  getBacklinks(title, callback) {\n    this.api.call({\n      action: 'query',\n      list: 'backlinks',\n      blnamespace: 0,\n      bltitle: title,\n      bllimit: API_LIMIT\n    }, function (err, data) {\n      callback(err, data && data.backlinks || []);\n    });\n  },\n\n  // utils section\n  getTemplateParamFromXml(tmplXml, paramName) {\n    paramName = paramName.trim().replace('-', '\\\\-');\n    const re = new RegExp(`<part><name>${paramName}\\\\s*</name>=<value>([^>]+)</value>`),\n          matches = tmplXml.match(re);\n    return matches && matches[1].trim() || false;\n  },\n\n  fetchUrl(url, callback, encoding) {\n    this.api.fetchUrl(url, callback, encoding);\n  },\n\n  diff(prev, current) {\n    let colors = require('ansicolors'),\n        jsdiff = require('diff'),\n        diff = jsdiff.diffChars(prev, current),\n        res = '';\n\n    diff.forEach(function (part) {\n      const color = part.added ? 'green' : part.removed ? 'red' : 'brightBlack';\n      res += colors[color](part.value);\n    });\n    return res;\n  }\n\n}; // Wikia-specific methods (issue #56)\n// @see http://www.wikia.com/api/v1\n\nBot.prototype.wikia = {\n  API_PREFIX: '/api/v1',\n\n  call(path, params, callback) {\n    let url = this.api.protocol + '://' + this.api.server + this.wikia.API_PREFIX + path;\n\n    if (typeof params === 'function') {\n      callback = params;\n      this.log('Wikia API call:', path);\n    } else if (typeof params === 'object') {\n      url += `?${querystring.stringify(params)}`;\n      this.log('Wikia API call:', path, params);\n    }\n\n    this.fetchUrl(url, function (err, res) {\n      const data = JSON.parse(res);\n      callback(err, data);\n    });\n  },\n\n  getWikiVariables(callback) {\n    this.call('/Mercury/WikiVariables', function (err, res) {\n      callback(err, res.data);\n    });\n  },\n\n  getUser(ids, callback) {\n    this.getUsers([ids], function (err, users) {\n      callback(err, users && users[0]);\n    });\n  },\n\n  getUsers(ids, callback) {\n    this.call('/User/Details', {\n      ids: ids.join(','),\n      size: 50\n    }, function (err, res) {\n      callback(err, res.items);\n    });\n  }\n\n};\nmodule.exports = Bot;","map":{"version":3,"sources":["/home/conrad/Documents/tarot/tarot-cards/node_modules/nodemw/lib/bot.js"],"names":["Api","require","_","async","fs","querystring","API_LIMIT","getFirstItem","obj","key","Object","keys","shift","Bot","params","env","process","options","configFile","configParsed","readFileSync","JSON","parse","e","Error","message","protocol","server","api","port","path","proxy","userAgent","concurrency","debug","DEBUG","version","dryRun","DRY_RUN","log","wikia","call","bind","prototype","info","apply","arguments","logData","stringify","undefined","error","getConfig","def","setConfig","val","getRand","Math","random","toString","split","pop","getAll","callback","res","continueParams","continue","whilst","cb","extend","err","data","next","batchData","concat","logIn","username","password","domain","logInCallback","lgusername","reason","result","action","lgname","lgpassword","lgdomain","token","lgtoken","getCategories","prefix","list","acprefix","aclimit","allcategories","map","cat","getUsers","auprefix","auwitheditsonly","witheditsonly","aulimit","_data","allusers","getAllPages","apfilterredir","aplimit","getPagesInCategory","category","cmtitle","cmlimit","getPagesInNamespace","namespace","apnamespace","getPagesByPrefix","apprefix","allpages","getPagesTranscluding","template","prop","titles","transcludedin","getArticle","title","redirect","rvprop","rand","redirects","pageids","page","pages","revision","revisions","content","redirectInfo","getArticleRevisions","join","rvdir","rvlimit","batch","getArticleCategories","cllimit","categories","search","keyword","srsearch","srprop","srlimit","getToken","getMediaWikiVersion","compare","useTokenApi","meta","type","intoken","_err","raw","tokens","csrftoken","msg","warnings","doEdit","summary","editParams","bot","newrevid","edit","minor","text","notminor","append","appendtext","prepend","prependtext","addFlowTopic","subject","submodule","nttopic","ntcontent","ntformat","status","workflow","purge","indexOf","generator","gcmtitle","Array","isArray","forEach","purged","sendEmail","target","ccme","getUserContribs","ucuser","user","ucstart","start","uclimit","ucnamespace","usercontribs","whoami","props","uiprop","userinfo","whois","whoare","usersinfo","usernames","ususers","usprop","users","createAccount","createreturnurl","createtoken","createaccounttoken","retype","move","from","to","getImages","aifrom","ailimit","allimages","getImagesFromArticle","images","getImagesFromArticleWithOptions","requestOptions","x","getImageUsage","filename","iutitle","iulimit","imageusage","getImageInfo","iiprop","image","imageinfo","metadata","exif","entry","name","value","getLog","lestart","lelimit","leaction","letype","lecontinue","logevents","expandTemplates","generatexml","xml","parsetree","contentmodel","getRecentChanges","rcprop","rcstart","rclimit","recentchanges","getSiteInfo","siprop","getSiteStats","_mwVersion","general","match","getQueryPage","queryPage","qppage","qplimit","querypage","cachedtimestamp","results","upload","extraParams","ignorewarnings","file","Buffer","comment","length","toFixed","descriptionurl","uploadByUrl","url","fetchUrl","uploadVideo","fileName","parseVideoUrl","parsed","provider","videoId","getExternalLinks","ellimit","extlinks","getBacklinks","blnamespace","bltitle","bllimit","backlinks","getTemplateParamFromXml","tmplXml","paramName","trim","replace","re","RegExp","matches","encoding","diff","prev","current","colors","jsdiff","diffChars","part","color","added","removed","API_PREFIX","getWikiVariables","getUser","ids","size","items","module","exports"],"mappings":"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","sourcesContent":["/* eslint max-len: [\"error\", { \"code\": 150 }] */\n/**\n * Defines bot API\n */\n'use strict';\n\nconst Api = require( './api' ),\n\t_ = require( 'underscore' ),\n\tasync = require( 'async' ),\n\tfs = require( 'fs' ),\n\tquerystring = require( 'querystring' ),\n\t// the upper limit for bots (will be reduced by MW for users without a bot right)\n\tAPI_LIMIT = 5000;\n\n// get the object being the first key/value entry of a given object\nfunction getFirstItem( obj ) {\n\tconst key = Object.keys( obj ).shift();\n\treturn obj[ key ];\n}\n\n// bot public API\nfunction Bot( params ) {\n\tlet env = process.env,\n\t\toptions;\n\n\t// read configuration from the file\n\tif ( typeof params === 'string' ) {\n\t\tlet configFile,\n\t\t\tconfigParsed;\n\n\t\ttry {\n\t\t\tconfigFile = fs.readFileSync( params, 'utf-8' );\n\t\t\tconfigParsed = JSON.parse( configFile );\n\t\t} catch ( e ) {\n\t\t\tthrow new Error( `Loading config failed: ${e.message}` );\n\t\t}\n\n\t\tif ( typeof configParsed === 'object' ) {\n\t\t\toptions = configParsed;\n\t\t}\n\t} else if ( typeof params === 'object' ) { // configuration provided as an object\n\t\toptions = params;\n\t}\n\n\tif ( !params ) {\n\t\tthrow new Error( 'No configuration was provided!' );\n\t}\n\n\tthis.protocol = options.protocol;\n\tthis.server = options.server;\n\n\tconst protocol = options.protocol || 'http';\n\tthis.api = new Api( {\n\t\tprotocol,\n\t\tport: options.port,\n\t\tserver: options.server,\n\t\tpath: options.path || '',\n\t\tproxy: options.proxy,\n\t\tuserAgent: options.userAgent,\n\t\tconcurrency: options.concurrency,\n\t\tdebug: ( options.debug === true || env.DEBUG === '1' )\n\t} );\n\n\tthis.version = this.api.version;\n\n\t// store options\n\tthis.options = options;\n\n\t// in dry-run mode? (issue #48)\n\tthis.dryRun = ( options.dryRun === true || env.DRY_RUN === '1' );\n\n\tif ( this.dryRun ) {\n\t\tthis.log( 'Running in dry-run mode' );\n\t}\n\n\t// bind provider-specific \"namespaces\"\n\tthis.wikia.call = this.wikia.call.bind( this );\n}\n\nBot.prototype = {\n\tlog() {\n\t\tthis.api.info.apply( this.api, arguments );\n\t},\n\n\tlogData( obj ) {\n\t\tthis.log( JSON.stringify( obj, undefined, 2 ) );\n\t},\n\n\terror() {\n\t\tthis.api.error.apply( this.api, arguments );\n\t},\n\n\tgetConfig( key, def ) {\n\t\treturn this.options[ key ] || def;\n\t},\n\n\tsetConfig( key, val ) {\n\t\tthis.options[ key ] = val;\n\t},\n\n\tgetRand() {\n\t\treturn Math.random().toString().split( '.' ).pop();\n\t},\n\n\tgetAll( params, key, callback ) {\n\t\tlet res = [],\n\t\t\t// @see https://www.mediawiki.org/wiki/API:Query#Continuing_queries\n\t\t\tcontinueParams = {\n\t\t\t\tcontinue: ''\n\t\t\t};\n\n\t\tasync.whilst(\n\t\t\t( cb ) => { cb( null, true ); }, // run as long as there's more data\n\t\t\t( cb ) => {\n\t\t\t\tthis.api.call( _.extend( params, continueParams ), ( err, data, next ) => {\n\t\t\t\t\tif ( err ) {\n\t\t\t\t\t\tcb( err );\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// append batch data\n\t\t\t\t\t\tconst batchData = ( typeof key === 'function' ) ? key( data ) : data[ key ];\n\n\t\t\t\t\t\tres = res.concat( batchData );\n\n\t\t\t\t\t\t// more pages?\n\t\t\t\t\t\tcontinueParams = next;\n\t\t\t\t\t\tcb( next ? null : true );\n\t\t\t\t\t}\n\t\t\t\t} );\n\t\t\t},\n\t\t\t( err ) => {\n\t\t\t\tif ( err instanceof Error ) {\n\t\t\t\t\tcallback( err );\n\t\t\t\t} else {\n\t\t\t\t\tcallback( null, res );\n\t\t\t\t}\n\t\t\t}\n\t\t);\n\t},\n\n\tlogIn( username, password, callback /* or just callback */ ) {\n\n\t\t// assign domain if applicable\n\t\tlet domain = this.options.domain || '';\n\n\t\t// username and password params can be omitted\n\t\tif ( typeof username !== 'string' ) {\n\t\t\tcallback = username;\n\n\t\t\t// use data from config\n\t\t\tusername = this.options.username;\n\t\t\tpassword = this.options.password;\n\t\t}\n\n\t\tthis.log( 'Obtaining login token...' );\n\n\t\tconst logInCallback = ( err, data ) => {\n\t\t\tif ( data === null || typeof data === 'undefined' ) {\n\t\t\t\tthis.error( 'Logging in failed: no data received' );\n\t\t\t\tcallback( err || new Error( 'Logging in failed: no data received' ) );\n\t\t\t} else if ( !err && typeof data.lgusername !== 'undefined' ) {\n\t\t\t\tthis.log( `Logged in as ${data.lgusername}` );\n\t\t\t\tcallback( null, data );\n\t\t\t} else if ( typeof data.reason === 'undefined' ) {\n\t\t\t\tthis.error( 'Logging in failed' );\n\t\t\t\tthis.error( data.result );\n\t\t\t\tcallback( err || new Error( `Logging in failed: ${data.result}` ) );\n\t\t\t} else {\n\t\t\t\tthis.error( 'Logging in failed' );\n\t\t\t\tthis.error( data.result );\n\t\t\t\tthis.error( data.reason );\n\t\t\t\tcallback( err || new Error( `Logging in failed: ${data.result} - ${data.reason}` ) );\n\t\t\t}\n\t\t};\n\n\t\t// request a token\n\t\tthis.api.call( {\n\t\t\taction: 'login',\n\t\t\tlgname: username,\n\t\t\tlgpassword: password,\n\t\t\tlgdomain: domain\n\t\t}, ( err, data ) => {\n\t\t\tif ( err ) {\n\t\t\t\tcallback( err );\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif ( data.result === 'NeedToken' ) {\n\t\t\t\tconst token = data.token;\n\n\t\t\t\tthis.log( `Got token ${token}` );\n\n\t\t\t\t// log in using a token\n\t\t\t\tthis.api.call( {\n\t\t\t\t\taction: 'login',\n\t\t\t\t\tlgname: username,\n\t\t\t\t\tlgpassword: password,\n\t\t\t\t\tlgtoken: token,\n\t\t\t\t\tlgdomain: domain\n\t\t\t\t}, logInCallback, 'POST' );\n\t\t\t} else {\n\t\t\t\tlogInCallback( err, data );\n\t\t\t}\n\t\t}, 'POST' );\n\t},\n\n\tgetCategories( prefix, callback ) {\n\t\tif ( typeof prefix === 'function' ) {\n\t\t\tcallback = prefix;\n\t\t}\n\n\t\tthis.getAll(\n\t\t\t{\n\t\t\t\taction: 'query',\n\t\t\t\tlist: 'allcategories',\n\t\t\t\tacprefix: prefix || '',\n\t\t\t\taclimit: API_LIMIT\n\t\t\t},\n\t\t\t( data ) => data.allcategories.map( ( cat ) => cat[ '*' ] ),\n\t\t\tcallback\n\t\t);\n\t},\n\n\tgetUsers( data, callback ) {\n\t\tif ( typeof data === 'function' ) {\n\t\t\tcallback = data;\n\t\t}\n\n\t\tdata = data || {};\n\n\t\tthis.api.call( {\n\t\t\taction: 'query',\n\t\t\tlist: 'allusers',\n\t\t\tauprefix: data.prefix || '',\n\t\t\tauwitheditsonly: data.witheditsonly || false,\n\t\t\taulimit: API_LIMIT\n\t\t}, function ( err, _data ) {\n\t\t\tcallback( err, _data && _data.allusers || [] );\n\t\t} );\n\t},\n\n\tgetAllPages( callback ) {\n\t\tthis.log( 'Getting all pages...' );\n\t\tthis.getAll(\n\t\t\t{\n\t\t\t\taction: 'query',\n\t\t\t\tlist: 'allpages',\n\t\t\t\tapfilterredir: 'nonredirects', // do not include redirects\n\t\t\t\taplimit: API_LIMIT\n\t\t\t},\n\t\t\t'allpages',\n\t\t\tcallback\n\t\t);\n\t},\n\n\tgetPagesInCategory( category, callback ) {\n\t\tcategory = `Category:${category}`;\n\t\tthis.log( `Getting pages from ${category}...` );\n\n\t\tthis.getAll(\n\t\t\t{\n\t\t\t\taction: 'query',\n\t\t\t\tlist: 'categorymembers',\n\t\t\t\tcmtitle: category,\n\t\t\t\tcmlimit: API_LIMIT\n\t\t\t},\n\t\t\t'categorymembers',\n\t\t\tcallback\n\t\t);\n\t},\n\n\tgetPagesInNamespace( namespace, callback ) {\n\t\tthis.log( `Getting pages in namespace ${namespace}` );\n\n\t\tthis.getAll(\n\t\t\t{\n\t\t\t\taction: 'query',\n\t\t\t\tlist: 'allpages',\n\t\t\t\tapnamespace: namespace,\n\t\t\t\tapfilterredir: 'nonredirects', // do not include redirects\n\t\t\t\taplimit: API_LIMIT\n\t\t\t},\n\t\t\t'allpages',\n\t\t\tcallback\n\t\t);\n\t},\n\n\tgetPagesByPrefix( prefix, callback ) {\n\t\tthis.log( `Getting pages by ${prefix} prefix...` );\n\n\t\tthis.api.call( {\n\t\t\taction: 'query',\n\t\t\tlist: 'allpages',\n\t\t\tapprefix: prefix,\n\t\t\taplimit: API_LIMIT\n\t\t}, function ( err, data ) {\n\t\t\tcallback( err, data && data.allpages || [] );\n\t\t} );\n\t},\n\n\tgetPagesTranscluding( template, callback ) {\n\t\tthis.log( `Getting pages from ${template}...` );\n\n\t\tthis.getAll(\n\t\t\t{\n\t\t\t\taction: 'query',\n\t\t\t\tprop: 'transcludedin',\n\t\t\t\ttitles: template\n\t\t\t},\n\t\t\t( data ) => getFirstItem( getFirstItem( data ) ).transcludedin,\n\t\t\tcallback\n\t\t);\n\t},\n\n\tgetArticle( title, redirect, callback ) {\n\t\tlet params = {\n\t\t\taction: 'query',\n\t\t\tprop: 'revisions',\n\t\t\trvprop: 'content',\n\t\t\trand: this.getRand()\n\t\t};\n\n\t\tif ( typeof redirect === 'function' ) {\n\t\t\tcallback = redirect;\n\t\t\tredirect = undefined;\n\t\t}\n\n\t\t// @see https://www.mediawiki.org/wiki/API:Query#Resolving_redirects\n\t\tif ( redirect === true ) {\n\t\t\tparams.redirects = '';\n\t\t}\n\n\t\t// both page ID or title can be provided\n\t\tif ( typeof title === 'number' ) {\n\t\t\tthis.log( `Getting content of article #${title}...` );\n\t\t\tparams.pageids = title;\n\t\t} else {\n\t\t\tthis.log( `Getting content of ${title}...` );\n\t\t\tparams.titles = title;\n\t\t}\n\n\t\tthis.api.call( params, function ( err, data ) {\n\t\t\tif ( err ) {\n\t\t\t\tcallback( err );\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst page = getFirstItem( data.pages ),\n\t\t\t\trevision = page.revisions && page.revisions.shift(),\n\t\t\t\tcontent = revision && revision[ '*' ],\n\t\t\t\tredirectInfo = data.redirects && data.redirects.shift() || undefined;\n\n\t\t\tcallback( null, content, redirectInfo );\n\t\t} );\n\t},\n\n\tgetArticleRevisions( title, callback ) {\n\t\tconst params = {\n\t\t\taction: 'query',\n\t\t\tprop: 'revisions',\n\t\t\trvprop: [ 'ids', 'timestamp', 'size', 'flags', 'comment', 'user' ].join( '|' ),\n\t\t\trvdir: 'newer', // order by timestamp asc\n\t\t\trvlimit: API_LIMIT\n\t\t};\n\n\t\t// both page ID or title can be provided\n\t\tif ( typeof title === 'number' ) {\n\t\t\tthis.log( `Getting revisions of article #${title}...` );\n\t\t\tparams.pageids = title;\n\t\t} else {\n\t\t\tthis.log( `Getting revisions of ${title}...` );\n\t\t\tparams.titles = title;\n\t\t}\n\n\t\tthis.getAll(\n\t\t\tparams,\n\t\t\tfunction ( batch ) {\n\t\t\t\tconst page = getFirstItem( batch.pages );\n\t\t\t\treturn page.revisions;\n\t\t\t},\n\t\t\tcallback\n\t\t);\n\t},\n\n\tgetArticleCategories( title, callback ) {\n\t\tthis.api.call( {\n\t\t\taction: 'query',\n\t\t\tprop: 'categories',\n\t\t\tcllimit: API_LIMIT,\n\t\t\ttitles: title\n\t\t}, function ( err, data ) {\n\t\t\tif ( err ) {\n\t\t\t\tcallback( err );\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif ( data === null ) {\n\t\t\t\tcallback( new Error( `\"${title}\" page does not exist` ) );\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst page = getFirstItem( data.pages );\n\n\t\t\tcallback(\n\t\t\t\tnull,\n\t\t\t\t( page.categories || [] ).map( ( cat ) =>\n\t\t\t\t\t// { ns: 14, title: 'Kategoria:XX wiek' }\n\t\t\t\t\tcat.title\n\t\t\t\t)\n\t\t\t);\n\t\t} );\n\t},\n\n\tsearch( keyword, callback ) {\n\t\tthis.getAll(\n\t\t\t{\n\t\t\t\taction: 'query',\n\t\t\t\tlist: 'search',\n\t\t\t\tsrsearch: keyword,\n\t\t\t\tsrprop: 'timestamp',\n\t\t\t\tsrlimit: 5000\n\t\t\t},\n\t\t\t'search',\n\t\t\tcallback\n\t\t);\n\t},\n\n\t// get token required to perform a given action\n\tgetToken( title, action, callback ) {\n\t\tthis.log( `Getting ${action} token (for ${title})...` );\n\n\t\tthis.getMediaWikiVersion( ( ( err, version ) => {\n\t\t\tlet compare = require( 'node-version-compare' ),\n\t\t\t\tparams,\n\t\t\t\tuseTokenApi = compare( version, '1.24.0' ) > -1;\n\n\t\t\t// @see https://www.mediawiki.org/wiki/API:Tokens (for MW 1.24+)\n\t\t\tif ( useTokenApi ) {\n\t\t\t\tparams = {\n\t\t\t\t\taction: 'query',\n\t\t\t\t\tmeta: 'tokens',\n\t\t\t\t\ttype: 'csrf'\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\tparams = {\n\t\t\t\t\taction: 'query',\n\t\t\t\t\tprop: 'info',\n\t\t\t\t\tintoken: action,\n\t\t\t\t\ttitles: title\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tthis.api.call( params, ( ( _err, data, next, raw ) => {\n\t\t\t\tlet token;\n\n\t\t\t\tif ( _err ) {\n\t\t\t\t\tcallback( _err );\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif ( useTokenApi ) {\n\t\t\t\t\ttoken = data.tokens.csrftoken.toString(); // MW 1.24+\n\t\t\t\t} else {\n\t\t\t\t\ttoken = getFirstItem( data.pages )[ action + 'token' ]; // older MW version\n\t\t\t\t}\n\n\t\t\t\tif ( !token ) {\n\t\t\t\t\tconst msg = raw.warnings.info[ '*' ];\n\t\t\t\t\tthis.log( `getToken: ${msg}` );\n\t\t\t\t\terr = new Error( `Can't get \"${action}\" token for \"${title}\" page - ${msg}` );\n\t\t\t\t\ttoken = undefined;\n\t\t\t\t}\n\n\t\t\t\tcallback( err, token );\n\t\t\t} ) );\n\t\t} ) );\n\t},\n\n\t// this should only be used internally (see #84)\n\tdoEdit( type, title, summary, params, callback ) {\n\t\tif ( this.dryRun ) {\n\t\t\tcallback( new Error( 'In dry-run mode' ) );\n\t\t\treturn;\n\t\t}\n\n\t\t// @see http://www.mediawiki.org/wiki/API:Edit\n\t\tthis.getToken( title, 'edit', ( err, token ) => {\n\t\t\tif ( err ) {\n\t\t\t\tcallback( err );\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis.log( `Editing '${title}' with a summary '${summary}' (${type})...` );\n\n\t\t\tconst editParams = _.extend( {\n\t\t\t\taction: 'edit',\n\t\t\t\tbot: '',\n\t\t\t\ttitle,\n\t\t\t\tsummary\n\t\t\t}, params, { token } );\n\n\t\t\tthis.api.call( editParams, ( _err, data ) => {\n\t\t\t\tif ( !_err && data.result && data.result === 'Success' ) {\n\t\t\t\t\tthis.log( 'Rev #%d created for \\'%s\\'', data.newrevid, data.title );\n\t\t\t\t\tcallback( null, data );\n\t\t\t\t} else {\n\t\t\t\t\tcallback( _err || data );\n\t\t\t\t}\n\t\t\t}, 'POST' );\n\t\t} );\n\t},\n\n\tedit( title, content, summary, minor, callback ) {\n\t\tlet params = {\n\t\t\ttext: content\n\t\t};\n\n\t\tif ( typeof minor === 'function' ) {\n\t\t\tcallback = minor;\n\t\t\tminor = undefined;\n\t\t}\n\n\t\tif ( minor ) {\n\t\t\tparams.minor = '';\n\t\t} else {\n\t\t\tparams.notminor = '';\n\t\t}\n\n\t\tthis.doEdit( 'edit', title, summary, params, callback );\n\t},\n\n\tappend( title, content, summary, callback ) {\n\t\tlet params = {\n\t\t\tappendtext: content\n\t\t};\n\n\t\tthis.doEdit( 'append', title, summary, params, callback );\n\t},\n\n\tprepend( title, content, summary, callback ) {\n\t\tlet params = {\n\t\t\tprependtext: content\n\t\t};\n\n\t\tthis.doEdit( 'prepend', title, summary, params, callback );\n\t},\n\n\taddFlowTopic( title, subject, content, callback ) {\n\t\tif ( this.dryRun ) {\n\t\t\tcallback( new Error( 'In dry-run mode' ) );\n\t\t\treturn;\n\t\t}\n\n\t\t// @see http://www.mediawiki.org/wiki/API:Flow\n\t\tthis.getToken( title, 'flow', ( err, token ) => {\n\t\t\tif ( err ) {\n\t\t\t\tcallback( err );\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis.log( `Adding a topic to page '${title}' with subject '${subject}'...` );\n\n\t\t\tconst params = {\n\t\t\t\taction: 'flow',\n\t\t\t\tsubmodule: 'new-topic',\n\t\t\t\tpage: title,\n\t\t\t\tnttopic: subject,\n\t\t\t\tntcontent: content,\n\t\t\t\tntformat: 'wikitext',\n\t\t\t\tbot: '',\n\t\t\t\ttoken: token\n\t\t\t};\n\n\t\t\tthis.api.call( params, ( _err, data ) => {\n\t\t\t\tif ( !_err && data[ 'new-topic' ] && data[ 'new-topic' ].status && data[ 'new-topic' ].status === 'ok' ) {\n\t\t\t\t\tthis.log( 'Workflow \\'%s\\' created on \\'%s\\'', data[ 'new-topic' ].workflow, title );\n\t\t\t\t\tcallback( null, data );\n\t\t\t\t} else {\n\t\t\t\t\tcallback( _err );\n\t\t\t\t}\n\t\t\t}, 'POST' );\n\t\t} );\n\t},\n\n\t'delete'( title, reason, callback ) {\n\t\tif ( this.dryRun ) {\n\t\t\tcallback( new Error( 'In dry-run mode' ) );\n\t\t\treturn;\n\t\t}\n\n\t\t// @see http://www.mediawiki.org/wiki/API:Delete\n\t\tthis.getToken( title, 'delete', ( err, token ) => {\n\t\t\tif ( err ) {\n\t\t\t\tcallback( err );\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis.log( 'Deleting \\'%s\\' because \\'%s\\'...', title, reason );\n\n\t\t\tthis.api.call( {\n\t\t\t\taction: 'delete',\n\t\t\t\ttitle,\n\t\t\t\treason,\n\t\t\t\ttoken\n\t\t\t}, ( _err, data ) => {\n\t\t\t\tif ( !_err && data.title && data.reason ) {\n\t\t\t\t\tcallback( null, data );\n\t\t\t\t} else {\n\t\t\t\t\tcallback( _err );\n\t\t\t\t}\n\t\t\t}, 'POST' );\n\t\t} );\n\t},\n\n\tpurge( titles, callback ) {\n\t\t// @see https://www.mediawiki.org/wiki/API:Purge\n\t\tconst params = {\n\t\t\taction: 'purge'\n\t\t};\n\n\t\tif ( this.dryRun ) {\n\t\t\tcallback( new Error( 'In dry-run mode' ) );\n\t\t\treturn;\n\t\t}\n\n\t\tif ( typeof titles === 'string' && titles.indexOf( 'Category:' ) === 0 ) {\n\t\t\t// @see https://docs.moodle.org/archive/pl/api.php?action=help&modules=purge\n\t\t\t// @see https://docs.moodle.org/archive/pl/api.php?action=help&modules=query%2Bcategorymembers\n\t\t\t// since MW 1.21 - @see https://github.com/wikimedia/mediawiki/commit/62216932c197f1c248ca2d95bc230f87a79ccd71\n\t\t\tthis.log( 'Purging all articles in category \\'%s\\'...', titles );\n\t\t\tparams.generator = 'categorymembers';\n\t\t\tparams.gcmtitle = titles;\n\t\t} else {\n\t\t\t// cast a single item to an array\n\t\t\ttitles = Array.isArray( titles ) ? titles : [ titles ];\n\n\t\t\t// both page IDs or titles can be provided\n\t\t\tif ( typeof titles[ 0 ] === 'number' ) {\n\t\t\t\tthis.log( 'Purging the list of article IDs: #%s...', titles.join( ', #' ) );\n\t\t\t\tparams.pageids = titles.join( '|' );\n\t\t\t} else {\n\t\t\t\tthis.log( 'Purging the list of articles: \\'%s\\'...', titles.join( '\\', \\'' ) );\n\t\t\t\tparams.titles = titles.join( '|' );\n\t\t\t}\n\t\t}\n\n\t\tthis.api.call(\n\t\t\tparams,\n\t\t\t( err, data ) => {\n\t\t\t\tif ( !err ) {\n\t\t\t\t\tdata.forEach( ( page ) => {\n\t\t\t\t\t\tif ( typeof page.purged !== 'undefined' ) {\n\t\t\t\t\t\t\tthis.log( 'Purged \"%s\"', page.title );\n\t\t\t\t\t\t}\n\t\t\t\t\t} );\n\t\t\t\t}\n\n\t\t\t\tcallback( err, data );\n\t\t\t},\n\t\t\t'POST'\n\t\t);\n\t},\n\n\tsendEmail( username, subject, text, callback ) {\n\t\tif ( this.dryRun ) {\n\t\t\tcallback( new Error( 'In dry-run mode' ) );\n\t\t\treturn;\n\t\t}\n\n\t\t// @see http://www.mediawiki.org/wiki/API:Email\n\t\tthis.getToken( `User:${username}`, 'email', ( err, token ) => {\n\t\t\tif ( err ) {\n\t\t\t\tcallback( err );\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis.log( 'Sending an email to \\'%s\\' with subject \\'%s\\'...', username, subject );\n\n\t\t\tthis.api.call( {\n\t\t\t\taction: 'emailuser',\n\t\t\t\ttarget: username,\n\t\t\t\tsubject,\n\t\t\t\ttext,\n\t\t\t\tccme: '',\n\t\t\t\ttoken\n\t\t\t}, ( _err, data ) => {\n\t\t\t\tif ( !_err && data.result && data.result === 'Success' ) {\n\t\t\t\t\tthis.log( 'Email sent' );\n\t\t\t\t\tcallback( null, data );\n\t\t\t\t} else {\n\t\t\t\t\tcallback( _err );\n\t\t\t\t}\n\t\t\t}, 'POST' );\n\t\t} );\n\t},\n\n\tgetUserContribs( options, callback ) {\n\t\toptions = options || {};\n\n\t\tthis.api.call( {\n\t\t\taction: 'query',\n\t\t\tlist: 'usercontribs',\n\t\t\tucuser: options.user,\n\t\t\tucstart: options.start,\n\t\t\tuclimit: API_LIMIT,\n\t\t\tucnamespace: options.namespace || ''\n\t\t}, function ( err, data, next ) {\n\t\t\tcallback( err, data && data.usercontribs || [], next && next.ucstart || false );\n\t\t} );\n\t},\n\n\twhoami( callback ) {\n\t\t// @see http://www.mediawiki.org/wiki/API:Meta#userinfo_.2F_ui\n\t\tconst props = [\n\t\t\t'groups',\n\t\t\t'rights',\n\t\t\t'ratelimits',\n\t\t\t'editcount',\n\t\t\t'realname',\n\t\t\t'email'\n\t\t];\n\n\t\tthis.api.call( {\n\t\t\taction: 'query',\n\t\t\tmeta: 'userinfo',\n\t\t\tuiprop: props.join( '|' )\n\t\t}, function ( err, data ) {\n\t\t\tif ( !err && data && data.userinfo ) {\n\t\t\t\tcallback( null, data.userinfo );\n\t\t\t} else {\n\t\t\t\tcallback( err );\n\t\t\t}\n\t\t} );\n\t},\n\n\twhois( username, callback ) {\n\t\tthis.whoare( [ username ], function ( err, usersinfo ) {\n\t\t\tcallback( err, usersinfo && usersinfo[ 0 ] );\n\t\t} );\n\t},\n\n\twhoare( usernames, callback ) {\n\t\t// @see https://www.mediawiki.org/wiki/API:Users\n\t\tconst props = [\n\t\t\t'blockinfo',\n\t\t\t'groups',\n\t\t\t'implicitgroups',\n\t\t\t'rights',\n\t\t\t'editcount',\n\t\t\t'registration',\n\t\t\t'emailable',\n\t\t\t'gender'\n\t\t];\n\n\t\tthis.api.call( {\n\t\t\taction: 'query',\n\t\t\tlist: 'users',\n\t\t\tususers: usernames.join( '|' ),\n\t\t\tusprop: props.join( '|' )\n\t\t}, function ( err, data ) {\n\t\t\tif ( !err && data && data.users ) {\n\t\t\t\tcallback( null, data.users );\n\t\t\t} else {\n\t\t\t\tcallback( err );\n\t\t\t}\n\t\t} );\n\t},\n\n\tcreateAccount( username, password, callback ) {\n\t\t// @see https://www.mediawiki.org/wiki/API:Account_creation\n\t\tthis.log( `creating account ${username}` );\n\t\tthis.api.call( {\n\t\t\taction: 'query',\n\t\t\tmeta: 'tokens',\n\t\t\ttype: 'createaccount'\n\t\t}, ( err, data ) => {\n\t\t\tthis.api.call( {\n\t\t\t\taction: 'createaccount',\n\t\t\t\tcreatereturnurl: `${this.api.protocol}://${this.api.server}:${this.api.port}/`,\n\t\t\t\tcreatetoken: data.tokens.createaccounttoken,\n\t\t\t\tusername: username,\n\t\t\t\tpassword: password,\n\t\t\t\tretype: password\n\t\t\t}, ( _err, _data ) => {\n\t\t\t\tif ( _err ) {\n\t\t\t\t\tcallback( _err );\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tcallback( _data );\n\t\t\t}, 'POST' );\n\t\t} );\n\t},\n\n\tmove( from, to, summary, callback ) {\n\t\tif ( this.dryRun ) {\n\t\t\tcallback( new Error( 'In dry-run mode' ) );\n\t\t\treturn;\n\t\t}\n\n\t\t// @see http://www.mediawiki.org/wiki/API:Move\n\t\tthis.getToken( from, 'move', ( err, token ) => {\n\t\t\tif ( err ) {\n\t\t\t\tcallback( err );\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis.log( 'Moving \\'%s\\' to \\'%s\\' because \\'%s\\'...', from, to, summary );\n\n\t\t\tthis.api.call( {\n\t\t\t\taction: 'move',\n\t\t\t\tfrom,\n\t\t\t\tto,\n\t\t\t\tbot: '',\n\t\t\t\treason: summary,\n\t\t\t\ttoken\n\t\t\t}, ( _err, data ) => {\n\t\t\t\tif ( !_err && data.from && data.to && data.reason ) {\n\t\t\t\t\tcallback( null, data );\n\t\t\t\t} else {\n\t\t\t\t\tcallback( _err );\n\t\t\t\t}\n\t\t\t}, 'POST' );\n\t\t} );\n\t},\n\n\tgetImages( start, callback ) {\n\t\tthis.api.call( {\n\t\t\taction: 'query',\n\t\t\tlist: 'allimages',\n\t\t\taifrom: start,\n\t\t\tailimit: API_LIMIT\n\t\t}, function ( err, data, next ) {\n\t\t\tcallback( err, ( ( data && data.allimages ) || [] ), ( ( next && next.aifrom ) || false ) );\n\t\t} );\n\t},\n\n\tgetImagesFromArticle( title, callback ) {\n\t\tthis.api.call( {\n\t\t\taction: 'query',\n\t\t\tprop: 'images',\n\t\t\ttitles: title\n\t\t}, function ( err, data ) {\n\t\t\tconst page = getFirstItem( data && data.pages || [] );\n\t\t\tcallback( err, ( page && page.images ) || [] );\n\t\t} );\n\t},\n\n\tgetImagesFromArticleWithOptions( title, options, callback ) {\n\t\tlet requestOptions = {\n\t\t\taction: 'query',\n\t\t\tprop: 'images',\n\t\t\ttitles: title\n\t\t};\n\t\tif ( !options || typeof ( options ) !== 'object' ) {\n\t\t\tcallback( new Error( 'Incorrect options parameter' ) );\n\t\t}\n\t\tObject.keys( options ).forEach( function ( x ) {\n\t\t\trequestOptions[ x ] = options[ x ];\n\t\t} );\n\t\tthis.api.call( requestOptions, function ( err, data ) {\n\t\t\tconst page = getFirstItem( data && data.pages || [] );\n\t\t\tcallback( err, ( page && page.images ) || [] );\n\t\t} );\n\t},\n\n\tgetImageUsage( filename, callback ) {\n\t\tthis.api.call( {\n\t\t\taction: 'query',\n\t\t\tlist: 'imageusage',\n\t\t\tiutitle: filename,\n\t\t\tiulimit: API_LIMIT\n\t\t}, function ( err, data ) {\n\t\t\tcallback( err, ( data && data.imageusage ) || [] );\n\t\t} );\n\t},\n\n\tgetImageInfo( filename, callback ) {\n\t\tconst props = [\n\t\t\t'timestamp',\n\t\t\t'user',\n\t\t\t'metadata',\n\t\t\t'size',\n\t\t\t'url'\n\t\t];\n\n\t\tthis.api.call( {\n\t\t\taction: 'query',\n\t\t\ttitles: filename,\n\t\t\tprop: 'imageinfo',\n\t\t\tiiprop: props.join( '|' )\n\t\t}, function ( err, data ) {\n\t\t\tconst image = getFirstItem( data && data.pages || [] ),\n\t\t\t\timageinfo = image && image.imageinfo && image.imageinfo[ 0 ];\n\n\t\t\t// process EXIF metadata into key / value structure\n\t\t\tif ( !err && imageinfo && imageinfo.metadata ) {\n\t\t\t\timageinfo.exif = {};\n\n\t\t\t\timageinfo.metadata.forEach( function ( entry ) {\n\t\t\t\t\timageinfo.exif[ entry.name ] = entry.value;\n\t\t\t\t} );\n\t\t\t}\n\n\t\t\tcallback( err, imageinfo );\n\t\t} );\n\t},\n\n\tgetLog( type, start, callback ) {\n\t\tlet params = {\n\t\t\taction: 'query',\n\t\t\tlist: 'logevents',\n\t\t\tlestart: start,\n\t\t\tlelimit: API_LIMIT\n\t\t};\n\n\t\tif ( type.indexOf( '/' ) > 0 ) {\n\t\t\t// Filter log entries to only this type.\n\t\t\tparams.leaction = type;\n\t\t} else {\n\t\t\t// Filter log actions to only this action. Overrides letype. In the list of possible values,\n\t\t\t// values with the asterisk wildcard such as action/* can have different strings after the slash (/).\n\t\t\tparams.letype = type;\n\t\t}\n\n\t\tthis.api.call( params, function ( err, data, next ) {\n\t\t\tif ( next && next.lecontinue ) {\n\t\t\t\t// 20150101124329|22700494\n\t\t\t\tnext = next.lecontinue.split( '|' ).shift();\n\t\t\t}\n\n\t\t\tcallback( err, ( ( data && data.logevents ) || [] ), next );\n\t\t} );\n\t},\n\n\texpandTemplates( text, title, callback ) {\n\t\tthis.api.call( {\n\t\t\taction: 'expandtemplates',\n\t\t\ttext,\n\t\t\ttitle,\n\t\t\tgeneratexml: 1\n\t\t}, function ( err, data, next, raw ) {\n\t\t\tconst xml = getFirstItem( raw.parsetree );\n\t\t\tcallback( err, xml );\n\t\t}, 'POST' );\n\t},\n\n\tparse( text, title, callback ) {\n\t\tthis.api.call( {\n\t\t\taction: 'parse',\n\t\t\ttext,\n\t\t\ttitle,\n\t\t\tcontentmodel: 'wikitext',\n\t\t\tgeneratexml: 1\n\t\t}, function ( err, data, next, raw ) {\n\t\t\tif ( err ) {\n\t\t\t\tcallback( err );\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tconst xml = getFirstItem( raw.parse.text ),\n\t\t\t\timages = raw.parse.images;\n\t\t\tcallback( err, xml, images );\n\t\t}, 'POST' );\n\t},\n\n\tgetRecentChanges( start, callback ) {\n\t\tconst props = [\n\t\t\t'title',\n\t\t\t'timestamp',\n\t\t\t'comments',\n\t\t\t'user',\n\t\t\t'flags',\n\t\t\t'sizes'\n\t\t];\n\n\t\tthis.api.call( {\n\t\t\taction: 'query',\n\t\t\tlist: 'recentchanges',\n\t\t\trcprop: props.join( '|' ),\n\t\t\trcstart: start || '',\n\t\t\trclimit: API_LIMIT\n\t\t}, function ( err, data, next ) {\n\t\t\tcallback( err, ( ( data && data.recentchanges ) || [] ), ( ( next && next.rcstart ) || false ) );\n\t\t} );\n\t},\n\n\tgetSiteInfo( props, callback ) {\n\t\t// @see http://www.mediawiki.org/wiki/API:Siteinfo\n\t\tif ( typeof props === 'string' ) {\n\t\t\tprops = [ props ];\n\t\t}\n\n\t\tthis.api.call( {\n\t\t\taction: 'query',\n\t\t\tmeta: 'siteinfo',\n\t\t\tsiprop: props.join( '|' )\n\t\t}, function ( err, data ) {\n\t\t\tcallback( err, data );\n\t\t} );\n\t},\n\n\tgetSiteStats( callback ) {\n\t\tconst prop = 'statistics';\n\n\t\tthis.getSiteInfo( prop, function ( err, info ) {\n\t\t\tcallback( err, info && info[ prop ] );\n\t\t} );\n\t},\n\n\tgetMediaWikiVersion( callback ) {\n\t\t// cache it for each instance of the client\n\t\t// we will call it multiple times for features detection\n\t\tif ( typeof this._mwVersion !== 'undefined' ) { // eslint-disable-line no-underscore-dangle\n\t\t\tcallback( null, this._mwVersion ); // eslint-disable-line no-underscore-dangle\n\t\t\treturn;\n\t\t}\n\n\t\tthis.getSiteInfo( [ 'general' ], ( ( err, info ) => {\n\t\t\tlet version;\n\n\t\t\tif ( err ) {\n\t\t\t\tcallback( err );\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tversion = info && info.general && info.general.generator; // e.g. \"MediaWiki 1.27.0-wmf.19\"\n\t\t\tversion = version.match( /[\\d.]+/ )[ 0 ]; // 1.27.0\n\n\t\t\tthis.log( 'Detected MediaWiki v%s', version );\n\n\t\t\t// cache it\n\t\t\tthis._mwVersion = version; // eslint-disable-line no-underscore-dangle\n\t\t\tcallback( null, this._mwVersion ); // eslint-disable-line no-underscore-dangle\n\t\t} ) );\n\t},\n\n\tgetQueryPage( queryPage, callback ) {\n\t\t// @see http://www.mediawiki.org/wiki/API:Querypage\n\t\tthis.api.call( {\n\t\t\taction: 'query',\n\t\t\tlist: 'querypage',\n\t\t\tqppage: queryPage,\n\t\t\tqplimit: API_LIMIT\n\t\t}, ( err, data ) => {\n\t\t\tif ( !err && data && data.querypage ) {\n\t\t\t\tthis.log( '%s data was generated %s', queryPage, data.querypage.cachedtimestamp );\n\t\t\t\tcallback( null, data.querypage.results || [] );\n\t\t\t} else {\n\t\t\t\tcallback( err, [] );\n\t\t\t}\n\t\t} );\n\t},\n\n\tupload( filename, content, extraParams, callback ) {\n\t\tlet params = {\n\t\t\taction: 'upload',\n\t\t\tignorewarnings: '',\n\t\t\tfilename,\n\t\t\tfile: ( typeof content === 'string' ) ? Buffer.from( content, 'binary' ) : content,\n\t\t\ttext: ''\n\t\t};\n\n\t\tif ( this.dryRun ) {\n\t\t\tcallback( new Error( 'In dry-run mode' ) );\n\t\t\treturn;\n\t\t}\n\n\t\tif ( typeof extraParams === 'object' ) {\n\t\t\tparams = _.extend( params, extraParams );\n\t\t} else { // it's summary (comment)\n\t\t\tparams.comment = extraParams;\n\t\t}\n\n\t\t// @see http://www.mediawiki.org/wiki/API:Upload\n\t\tthis.getToken( `File:${filename}`, 'edit', ( err, token ) => {\n\t\t\tif ( err ) {\n\t\t\t\tcallback( err );\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis.log( 'Uploading %s kB as File:%s...', ( content.length / 1024 ).toFixed( 2 ), filename );\n\n\t\t\tparams.token = token;\n\t\t\tthis.api.call( params, ( _err, data ) => {\n\t\t\t\tif ( data && data.result && data.result === 'Success' ) {\n\t\t\t\t\tthis.log( 'Uploaded as <%s>', data.imageinfo.descriptionurl );\n\t\t\t\t\tcallback( null, data );\n\t\t\t\t} else {\n\t\t\t\t\tcallback( _err );\n\t\t\t\t}\n\t\t\t}, 'UPLOAD' /* fake method to set a proper content type for file uploads */ );\n\t\t} );\n\t},\n\n\tuploadByUrl( filename, url, summary, callback ) {\n\t\tthis.api.fetchUrl( url, ( error, content ) => {\n\t\t\tif ( error ) {\n\t\t\t\tcallback( error, content );\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis.upload( filename, content, summary, callback );\n\t\t}, 'binary' /* use binary-safe fetch */ );\n\t},\n\n\t// Wikia-specific API entry-point\n\tuploadVideo( fileName, url, callback ) {\n\t\tconst parseVideoUrl = require( './utils' ).parseVideoUrl;\n\t\tconst parsed = parseVideoUrl( url );\n\n\t\tif ( parsed === null ) {\n\t\t\tcallback( new Error( 'Not supported URL provided' ) );\n\t\t\treturn;\n\t\t}\n\n\t\tlet provider = parsed[ 0 ], videoId = parsed[ 1 ];\n\n\t\tthis.getToken( `File:${fileName}`, 'edit', ( err, token ) => {\n\t\t\tif ( err ) {\n\t\t\t\tcallback( err );\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis.log( 'Uploading <%s> (%s provider with video ID %s)', url, provider, videoId );\n\n\t\t\tthis.api.call( {\n\t\t\t\taction: 'addmediapermanent',\n\t\t\t\ttitle: fileName,\n\t\t\t\tprovider: provider,\n\t\t\t\tvideoId: videoId,\n\t\t\t\ttoken: token\n\t\t\t}, callback, 'POST' /* The addmediapermanent module requires a POST request */ );\n\t\t} );\n\t},\n\n\tgetExternalLinks( title, callback ) {\n\t\tthis.api.call( {\n\t\t\taction: 'query',\n\t\t\tprop: 'extlinks',\n\t\t\ttitles: title,\n\t\t\tellimit: API_LIMIT\n\t\t}, function ( err, data ) {\n\t\t\tcallback( err, ( data && getFirstItem( data.pages ).extlinks ) || [] );\n\t\t} );\n\t},\n\n\tgetBacklinks( title, callback ) {\n\t\tthis.api.call( {\n\t\t\taction: 'query',\n\t\t\tlist: 'backlinks',\n\t\t\tblnamespace: 0,\n\t\t\tbltitle: title,\n\t\t\tbllimit: API_LIMIT\n\t\t}, function ( err, data ) {\n\t\t\tcallback( err, ( data && data.backlinks ) || [] );\n\t\t} );\n\t},\n\n\t// utils section\n\tgetTemplateParamFromXml( tmplXml, paramName ) {\n\t\tparamName = paramName\n\t\t\t.trim()\n\t\t\t.replace( '-', '\\\\-' );\n\n\t\tconst re = new RegExp( `<part><name>${paramName}\\\\s*</name>=<value>([^>]+)</value>` ),\n\t\t\tmatches = tmplXml.match( re );\n\n\t\treturn matches && matches[ 1 ].trim() || false;\n\t},\n\n\tfetchUrl( url, callback, encoding ) {\n\t\tthis.api.fetchUrl( url, callback, encoding );\n\t},\n\n\tdiff( prev, current ) {\n\t\tlet colors = require( 'ansicolors' ),\n\t\t\tjsdiff = require( 'diff' ),\n\t\t\tdiff = jsdiff.diffChars( prev, current ),\n\t\t\tres = '';\n\n\t\tdiff.forEach( function ( part ) {\n\t\t\tconst color = part.added ? 'green' :\n\t\t\t\tpart.removed ? 'red' : 'brightBlack';\n\n\t\t\tres += colors[ color ]( part.value );\n\t\t} );\n\n\t\treturn res;\n\t}\n};\n\n// Wikia-specific methods (issue #56)\n// @see http://www.wikia.com/api/v1\nBot.prototype.wikia = {\n\tAPI_PREFIX: '/api/v1',\n\n\tcall( path, params, callback ) {\n\t\tlet url = this.api.protocol + '://' + this.api.server + this.wikia.API_PREFIX + path;\n\n\t\tif ( typeof params === 'function' ) {\n\t\t\tcallback = params;\n\t\t\tthis.log( 'Wikia API call:', path );\n\t\t} else if ( typeof params === 'object' ) {\n\t\t\turl += `?${querystring.stringify( params )}`;\n\t\t\tthis.log( 'Wikia API call:', path, params );\n\t\t}\n\n\t\tthis.fetchUrl( url, function ( err, res ) {\n\t\t\tconst data = JSON.parse( res );\n\t\t\tcallback( err, data );\n\t\t} );\n\t},\n\n\tgetWikiVariables( callback ) {\n\t\tthis.call( '/Mercury/WikiVariables', function ( err, res ) {\n\t\t\tcallback( err, res.data );\n\t\t} );\n\t},\n\n\tgetUser( ids, callback ) {\n\t\tthis.getUsers( [ ids ], function ( err, users ) {\n\t\t\tcallback( err, users && users[ 0 ] );\n\t\t} );\n\t},\n\n\tgetUsers( ids, callback ) {\n\t\tthis.call( '/User/Details', {\n\t\t\tids: ids.join( ',' ),\n\t\t\tsize: 50\n\t\t}, function ( err, res ) {\n\t\t\tcallback( err, res.items );\n\t\t} );\n\t}\n};\n\nmodule.exports = Bot;\n"]},"metadata":{},"sourceType":"script"}