{"ast":null,"code":"exports.get = function (belowFn) {\n  var oldLimit = Error.stackTraceLimit;\n  Error.stackTraceLimit = Infinity;\n  var dummyObject = {};\n  var v8Handler = Error.prepareStackTrace;\n\n  Error.prepareStackTrace = function (dummyObject, v8StackTrace) {\n    return v8StackTrace;\n  };\n\n  Error.captureStackTrace(dummyObject, belowFn || exports.get);\n  var v8StackTrace = dummyObject.stack;\n  Error.prepareStackTrace = v8Handler;\n  Error.stackTraceLimit = oldLimit;\n  return v8StackTrace;\n};\n\nexports.parse = function (err) {\n  if (!err.stack) {\n    return [];\n  }\n\n  var self = this;\n  var lines = err.stack.split('\\n').slice(1);\n  return lines.map(function (line) {\n    if (line.match(/^\\s*[-]{4,}$/)) {\n      return self._createParsedCallSite({\n        fileName: line,\n        lineNumber: null,\n        functionName: null,\n        typeName: null,\n        methodName: null,\n        columnNumber: null,\n        'native': null\n      });\n    }\n\n    var lineMatch = line.match(/at (?:(.+)\\s+\\()?(?:(.+?):(\\d+)(?::(\\d+))?|([^)]+))\\)?/);\n\n    if (!lineMatch) {\n      return;\n    }\n\n    var object = null;\n    var method = null;\n    var functionName = null;\n    var typeName = null;\n    var methodName = null;\n    var isNative = lineMatch[5] === 'native';\n\n    if (lineMatch[1]) {\n      functionName = lineMatch[1];\n      var methodStart = functionName.lastIndexOf('.');\n      if (functionName[methodStart - 1] == '.') methodStart--;\n\n      if (methodStart > 0) {\n        object = functionName.substr(0, methodStart);\n        method = functionName.substr(methodStart + 1);\n        var objectEnd = object.indexOf('.Module');\n\n        if (objectEnd > 0) {\n          functionName = functionName.substr(objectEnd + 1);\n          object = object.substr(0, objectEnd);\n        }\n      }\n\n      typeName = null;\n    }\n\n    if (method) {\n      typeName = object;\n      methodName = method;\n    }\n\n    if (method === '<anonymous>') {\n      methodName = null;\n      functionName = null;\n    }\n\n    var properties = {\n      fileName: lineMatch[2] || null,\n      lineNumber: parseInt(lineMatch[3], 10) || null,\n      functionName: functionName,\n      typeName: typeName,\n      methodName: methodName,\n      columnNumber: parseInt(lineMatch[4], 10) || null,\n      'native': isNative\n    };\n    return self._createParsedCallSite(properties);\n  }).filter(function (callSite) {\n    return !!callSite;\n  });\n};\n\nfunction CallSite(properties) {\n  for (var property in properties) {\n    this[property] = properties[property];\n  }\n}\n\nvar strProperties = ['this', 'typeName', 'functionName', 'methodName', 'fileName', 'lineNumber', 'columnNumber', 'function', 'evalOrigin'];\nvar boolProperties = ['topLevel', 'eval', 'native', 'constructor'];\nstrProperties.forEach(function (property) {\n  CallSite.prototype[property] = null;\n\n  CallSite.prototype['get' + property[0].toUpperCase() + property.substr(1)] = function () {\n    return this[property];\n  };\n});\nboolProperties.forEach(function (property) {\n  CallSite.prototype[property] = false;\n\n  CallSite.prototype['is' + property[0].toUpperCase() + property.substr(1)] = function () {\n    return this[property];\n  };\n});\n\nexports._createParsedCallSite = function (properties) {\n  return new CallSite(properties);\n};","map":{"version":3,"sources":["/home/conrad/Documents/tarot/tarot-cards/node_modules/stack-trace/lib/stack-trace.js"],"names":["exports","get","belowFn","oldLimit","Error","stackTraceLimit","Infinity","dummyObject","v8Handler","prepareStackTrace","v8StackTrace","captureStackTrace","stack","parse","err","self","lines","split","slice","map","line","match","_createParsedCallSite","fileName","lineNumber","functionName","typeName","methodName","columnNumber","lineMatch","object","method","isNative","methodStart","lastIndexOf","substr","objectEnd","indexOf","properties","parseInt","filter","callSite","CallSite","property","strProperties","boolProperties","forEach","prototype","toUpperCase"],"mappings":"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","sourcesContent":["exports.get = function(belowFn) {\n  var oldLimit = Error.stackTraceLimit;\n  Error.stackTraceLimit = Infinity;\n\n  var dummyObject = {};\n\n  var v8Handler = Error.prepareStackTrace;\n  Error.prepareStackTrace = function(dummyObject, v8StackTrace) {\n    return v8StackTrace;\n  };\n  Error.captureStackTrace(dummyObject, belowFn || exports.get);\n\n  var v8StackTrace = dummyObject.stack;\n  Error.prepareStackTrace = v8Handler;\n  Error.stackTraceLimit = oldLimit;\n\n  return v8StackTrace;\n};\n\nexports.parse = function(err) {\n  if (!err.stack) {\n    return [];\n  }\n\n  var self = this;\n  var lines = err.stack.split('\\n').slice(1);\n\n  return lines\n    .map(function(line) {\n      if (line.match(/^\\s*[-]{4,}$/)) {\n        return self._createParsedCallSite({\n          fileName: line,\n          lineNumber: null,\n          functionName: null,\n          typeName: null,\n          methodName: null,\n          columnNumber: null,\n          'native': null,\n        });\n      }\n\n      var lineMatch = line.match(/at (?:(.+)\\s+\\()?(?:(.+?):(\\d+)(?::(\\d+))?|([^)]+))\\)?/);\n      if (!lineMatch) {\n        return;\n      }\n\n      var object = null;\n      var method = null;\n      var functionName = null;\n      var typeName = null;\n      var methodName = null;\n      var isNative = (lineMatch[5] === 'native');\n\n      if (lineMatch[1]) {\n        functionName = lineMatch[1];\n        var methodStart = functionName.lastIndexOf('.');\n        if (functionName[methodStart-1] == '.')\n          methodStart--;\n        if (methodStart > 0) {\n          object = functionName.substr(0, methodStart);\n          method = functionName.substr(methodStart + 1);\n          var objectEnd = object.indexOf('.Module');\n          if (objectEnd > 0) {\n            functionName = functionName.substr(objectEnd + 1);\n            object = object.substr(0, objectEnd);\n          }\n        }\n        typeName = null;\n      }\n\n      if (method) {\n        typeName = object;\n        methodName = method;\n      }\n\n      if (method === '<anonymous>') {\n        methodName = null;\n        functionName = null;\n      }\n\n      var properties = {\n        fileName: lineMatch[2] || null,\n        lineNumber: parseInt(lineMatch[3], 10) || null,\n        functionName: functionName,\n        typeName: typeName,\n        methodName: methodName,\n        columnNumber: parseInt(lineMatch[4], 10) || null,\n        'native': isNative,\n      };\n\n      return self._createParsedCallSite(properties);\n    })\n    .filter(function(callSite) {\n      return !!callSite;\n    });\n};\n\nfunction CallSite(properties) {\n  for (var property in properties) {\n    this[property] = properties[property];\n  }\n}\n\nvar strProperties = [\n  'this',\n  'typeName',\n  'functionName',\n  'methodName',\n  'fileName',\n  'lineNumber',\n  'columnNumber',\n  'function',\n  'evalOrigin'\n];\nvar boolProperties = [\n  'topLevel',\n  'eval',\n  'native',\n  'constructor'\n];\nstrProperties.forEach(function (property) {\n  CallSite.prototype[property] = null;\n  CallSite.prototype['get' + property[0].toUpperCase() + property.substr(1)] = function () {\n    return this[property];\n  }\n});\nboolProperties.forEach(function (property) {\n  CallSite.prototype[property] = false;\n  CallSite.prototype['is' + property[0].toUpperCase() + property.substr(1)] = function () {\n    return this[property];\n  }\n});\n\nexports._createParsedCallSite = function(properties) {\n  return new CallSite(properties);\n};\n"]},"metadata":{},"sourceType":"script"}