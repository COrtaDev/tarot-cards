{"ast":null,"code":"/**\r\n * @name framework loader for node.js.\r\n * \r\n * See _CeL.loader.nodejs.js for a example that is simple to use.\r\n * \r\n * @example\r\n * \r\n * for including: <code>\r\n\r\nrequire(\"./path/to/node.loader.js\");\r\n\r\n</code>\r\n * \r\n * @since 2011/11/26 23:33:32\r\n * @see http://nodejs.org/\r\n * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Shells\r\n */\n'use strict'; // ---------------------------------------------------------------------//\n\ntry {\n  // http://nodejs.org/api/globals.html\n  // node.js requires this method to setup REALLY global various:\n  // require isn't actually a global but rather local to each module.\n  Function('return this')().CeL = {\n    // main lib path relative to the loader script.\n    library_path: '../ce.js'\n  };\n  if (false && !globalThis.require && typeof require === 'funtion') globalThis.require = require;\n\n  (function () {\n    // 若非 absolute path，則將之改為 absolute path，\n    // 否則 setup_library_base_path() 會抓不到。\n    if (!/^([A-Z]:)?[\\\\\\/]/i.test(CeL.library_path)) // 這裡 __filename 是 loader 本身之 path。\n      CeL.library_path = __filename.replace(/[^\\\\\\/]+$/, CeL.library_path);\n\n    var script_code = [],\n        fs = require('fs'),\n        // http://nodejs.org/api/fs.html#fs.readFileSync\n    main_lib_binary = fs.readFileSync(CeL.library_path // The encoding can be 'utf8', 'ascii', or 'base64'.\n    // http://nodejs.org/api/fs.html#fs_fs_createreadstream_path_options\n    // , 'utf8'\n    ),\n        // pass the first 2 bytes (BOM)\n    i = 2,\n        l = // 10\n    main_lib_binary.length;\n\n    if (false) console.log([CeL.library_path, typeof main_lib_binary.length, main_lib_binary.length]); // a simplified .get_file() for UTF-32.\n\n    for (; i < l;) {\n      // console.log(main_lib_binary[i] + ',' + main_lib_binary[i + 1]);\n      script_code.push(String.fromCharCode(main_lib_binary[i++] + 256 * main_lib_binary[i++]));\n    }\n\n    CeL.library_code = script_code.join('');\n\n    if (false) {\n      console.log(script_code.length); // console.log(script_code.slice(0, 30));\n\n      console.log('[' + script_code.slice(0, 300) // .replace(/[\\x00-\\x1f]/g, '.')\n      .replace(/[\\u0100-\\uffff]/g, '.') // .charCodeAt(0)\n      + ']');\n    }\n  })();\n\n  eval(CeL.library_code);\n\n  if (false) {\n    console.log('CeL === globalThis.CeL: ' + (CeL === globalThis.CeL));\n    console.log('typeof CeL: ' + typeof CeL);\n    console.log('CeL: ' + CeL);\n    console.log('CeL.set_debug: ' + CeL.set_debug);\n  } // delete cache.\n\n\n  delete CeL.get_old_namespace().script_code; // for npm\n\n  module.exports = CeL;\n} catch (e) {\n  console.error(e);\n} // CeL.run('application.platform.nodejs', 'data.CSV');\n\n\nif (false && typeof CeL === 'function') {\n  CeL.set_debug();\n  if (false) console.log(CeL.get_file('data.js').slice(0, 300).replace(/[\\u0100-\\uffff]/g, '.'));\n  CeL.run('data.math', function () {\n    var n1 = 123,\n        n2 = 234;\n    CeL.log('GCD(' + n1 + ', ' + n2 + ') = ' + CeL.GCD(n1, n2));\n  });\n}","map":{"version":3,"sources":["/home/conrad/Documents/tarot/tarot-cards/node_modules/cejs/_for include/node.loader.js"],"names":["Function","CeL","library_path","globalThis","require","test","__filename","replace","script_code","fs","main_lib_binary","readFileSync","i","l","length","console","log","push","String","fromCharCode","library_code","join","slice","eval","set_debug","get_old_namespace","module","exports","e","error","get_file","run","n1","n2","GCD"],"mappings":"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","sourcesContent":["/**\r\n * @name framework loader for node.js.\r\n * \r\n * See _CeL.loader.nodejs.js for a example that is simple to use.\r\n * \r\n * @example\r\n * \r\n * for including: <code>\r\n\r\nrequire(\"./path/to/node.loader.js\");\r\n\r\n</code>\r\n * \r\n * @since 2011/11/26 23:33:32\r\n * @see http://nodejs.org/\r\n * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Shells\r\n */\r\n\r\n'use strict';\r\n\r\n// ---------------------------------------------------------------------//\r\n\r\ntry {\r\n\t// http://nodejs.org/api/globals.html\r\n\t// node.js requires this method to setup REALLY global various:\r\n\t// require isn't actually a global but rather local to each module.\r\n\tFunction('return this')().CeL = {\r\n\t\t// main lib path relative to the loader script.\r\n\t\tlibrary_path : '../ce.js'\r\n\t};\r\n\tif (false && !globalThis.require && typeof require === 'funtion')\r\n\t\tglobalThis.require = require;\r\n\r\n\t(function() {\r\n\t\t// 若非 absolute path，則將之改為 absolute path，\r\n\t\t// 否則 setup_library_base_path() 會抓不到。\r\n\t\tif (!/^([A-Z]:)?[\\\\\\/]/i.test(CeL.library_path))\r\n\t\t\t// 這裡 __filename 是 loader 本身之 path。\r\n\t\t\tCeL.library_path = __filename\r\n\t\t\t\t\t.replace(/[^\\\\\\/]+$/, CeL.library_path);\r\n\r\n\t\tvar script_code = [], fs = require('fs'),\r\n\t\t// http://nodejs.org/api/fs.html#fs.readFileSync\r\n\t\tmain_lib_binary = fs.readFileSync(CeL.library_path\r\n\t\t// The encoding can be 'utf8', 'ascii', or 'base64'.\r\n\t\t// http://nodejs.org/api/fs.html#fs_fs_createreadstream_path_options\r\n\t\t// , 'utf8'\r\n\t\t),\r\n\t\t// pass the first 2 bytes (BOM)\r\n\t\ti = 2, l =\r\n\t\t// 10\r\n\t\tmain_lib_binary.length;\r\n\r\n\t\tif (false)\r\n\t\t\tconsole.log([ CeL.library_path, typeof main_lib_binary.length,\r\n\t\t\t\t\tmain_lib_binary.length ]);\r\n\r\n\t\t// a simplified .get_file() for UTF-32.\r\n\t\tfor (; i < l;) {\r\n\t\t\t// console.log(main_lib_binary[i] + ',' + main_lib_binary[i + 1]);\r\n\t\t\tscript_code.push(String.fromCharCode(main_lib_binary[i++] + 256\r\n\t\t\t\t\t* main_lib_binary[i++]));\r\n\t\t}\r\n\r\n\t\tCeL.library_code = script_code.join('');\r\n\r\n\t\tif (false) {\r\n\t\t\tconsole.log(script_code.length);\r\n\t\t\t// console.log(script_code.slice(0, 30));\r\n\t\t\tconsole.log('[' + script_code.slice(0, 300)\r\n\t\t\t// .replace(/[\\x00-\\x1f]/g, '.')\r\n\t\t\t.replace(/[\\u0100-\\uffff]/g, '.')\r\n\t\t\t// .charCodeAt(0)\r\n\t\t\t+ ']');\r\n\t\t}\r\n\r\n\t})();\r\n\r\n\teval(CeL.library_code);\r\n\tif (false) {\r\n\t\tconsole.log('CeL === globalThis.CeL: ' + (CeL === globalThis.CeL));\r\n\t\tconsole.log('typeof CeL: ' + typeof CeL);\r\n\t\tconsole.log('CeL: ' + CeL);\r\n\t\tconsole.log('CeL.set_debug: ' + CeL.set_debug);\r\n\t}\r\n\r\n\t// delete cache.\r\n\tdelete CeL.get_old_namespace().script_code;\r\n\r\n\t// for npm\r\n\tmodule.exports = CeL;\r\n\r\n} catch (e) {\r\n\tconsole.error(e);\r\n}\r\n\r\n// CeL.run('application.platform.nodejs', 'data.CSV');\r\n\r\nif (false && typeof CeL === 'function') {\r\n\tCeL.set_debug();\r\n\r\n\tif (false)\r\n\t\tconsole.log(CeL.get_file('data.js').slice(0, 300).replace(\r\n\t\t\t\t/[\\u0100-\\uffff]/g, '.'));\r\n\r\n\tCeL.run('data.math', function() {\r\n\t\tvar n1 = 123, n2 = 234;\r\n\t\tCeL.log('GCD(' + n1 + ', ' + n2 + ') = ' + CeL.GCD(n1, n2));\r\n\t});\r\n}\r\n"]},"metadata":{},"sourceType":"script"}