{"ast":null,"code":"import restArguments from './restArguments.js';\nimport delay from './delay.js'; // When a sequence of calls of the returned function ends, the argument\n// function is triggered. The end of a sequence is defined by the `wait`\n// parameter. If `immediate` is passed, the argument function will be\n// triggered at the beginning of the sequence instead of at the end.\n\nexport default function debounce(func, wait, immediate) {\n  var timeout, result;\n\n  var later = function (context, args) {\n    timeout = null;\n    if (args) result = func.apply(context, args);\n  };\n\n  var debounced = restArguments(function (args) {\n    if (timeout) clearTimeout(timeout);\n\n    if (immediate) {\n      var callNow = !timeout;\n      timeout = setTimeout(later, wait);\n      if (callNow) result = func.apply(this, args);\n    } else {\n      timeout = delay(later, wait, this, args);\n    }\n\n    return result;\n  });\n\n  debounced.cancel = function () {\n    clearTimeout(timeout);\n    timeout = null;\n  };\n\n  return debounced;\n}","map":{"version":3,"sources":["/home/conrad/Documents/tarot/tarot-cards/node_modules/underscore/modules/debounce.js"],"names":["restArguments","delay","debounce","func","wait","immediate","timeout","result","later","context","args","apply","debounced","clearTimeout","callNow","setTimeout","cancel"],"mappings":"AAAA,OAAOA,aAAP,MAA0B,oBAA1B;AACA,OAAOC,KAAP,MAAkB,YAAlB,C,CAEA;AACA;AACA;AACA;;AACA,eAAe,SAASC,QAAT,CAAkBC,IAAlB,EAAwBC,IAAxB,EAA8BC,SAA9B,EAAyC;AACtD,MAAIC,OAAJ,EAAaC,MAAb;;AAEA,MAAIC,KAAK,GAAG,UAASC,OAAT,EAAkBC,IAAlB,EAAwB;AAClCJ,IAAAA,OAAO,GAAG,IAAV;AACA,QAAII,IAAJ,EAAUH,MAAM,GAAGJ,IAAI,CAACQ,KAAL,CAAWF,OAAX,EAAoBC,IAApB,CAAT;AACX,GAHD;;AAKA,MAAIE,SAAS,GAAGZ,aAAa,CAAC,UAASU,IAAT,EAAe;AAC3C,QAAIJ,OAAJ,EAAaO,YAAY,CAACP,OAAD,CAAZ;;AACb,QAAID,SAAJ,EAAe;AACb,UAAIS,OAAO,GAAG,CAACR,OAAf;AACAA,MAAAA,OAAO,GAAGS,UAAU,CAACP,KAAD,EAAQJ,IAAR,CAApB;AACA,UAAIU,OAAJ,EAAaP,MAAM,GAAGJ,IAAI,CAACQ,KAAL,CAAW,IAAX,EAAiBD,IAAjB,CAAT;AACd,KAJD,MAIO;AACLJ,MAAAA,OAAO,GAAGL,KAAK,CAACO,KAAD,EAAQJ,IAAR,EAAc,IAAd,EAAoBM,IAApB,CAAf;AACD;;AAED,WAAOH,MAAP;AACD,GAX4B,CAA7B;;AAaAK,EAAAA,SAAS,CAACI,MAAV,GAAmB,YAAW;AAC5BH,IAAAA,YAAY,CAACP,OAAD,CAAZ;AACAA,IAAAA,OAAO,GAAG,IAAV;AACD,GAHD;;AAKA,SAAOM,SAAP;AACD","sourcesContent":["import restArguments from './restArguments.js';\nimport delay from './delay.js';\n\n// When a sequence of calls of the returned function ends, the argument\n// function is triggered. The end of a sequence is defined by the `wait`\n// parameter. If `immediate` is passed, the argument function will be\n// triggered at the beginning of the sequence instead of at the end.\nexport default function debounce(func, wait, immediate) {\n  var timeout, result;\n\n  var later = function(context, args) {\n    timeout = null;\n    if (args) result = func.apply(context, args);\n  };\n\n  var debounced = restArguments(function(args) {\n    if (timeout) clearTimeout(timeout);\n    if (immediate) {\n      var callNow = !timeout;\n      timeout = setTimeout(later, wait);\n      if (callNow) result = func.apply(this, args);\n    } else {\n      timeout = delay(later, wait, this, args);\n    }\n\n    return result;\n  });\n\n  debounced.cancel = function() {\n    clearTimeout(timeout);\n    timeout = null;\n  };\n\n  return debounced;\n}\n"]},"metadata":{},"sourceType":"module"}